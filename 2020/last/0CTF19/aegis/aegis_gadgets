Gadgets information
============================================================
0x00000000001228ed : adc ah, bh ; call qword ptr [rax]
0x00000000001228e9 : adc ah, bh ; ljmp ptr [rax] ; adc ah, bh ; call qword ptr [rax]
0x00000000000e3eea : adc ah, byte ptr [rdi - 0x76b7ffb9] ; ret
0x00000000001441dc : adc al, 0x25 ; cld ; call rdi
0x0000000000001d7f : adc al, 0x37 ; ret
0x00000000001272e8 : adc al, 0x3a ; std ; jmp rsp
0x0000000000027b8e : adc al, 0x53 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000128100 : adc al, 0x71 ; std ; inc dword ptr [rcx + rsi*2] ; std ; jmp rsp
0x00000000000f8e85 : adc al, 0x87 ; test edx, edx ; jne 0xf8e87 ; ret
0x00000000000e06dc : adc al, 0x99 ; add rdx, rcx ; jmp rdx
0x00000000000e7a70 : adc al, 0xc6 ; add qword ptr [rdi + rax*8], rdx ; ret
0x00000000000e7a74 : adc al, 0xc7 ; ret
0x00000000000feee5 : adc al, 0xd7 ; mov qword ptr [rdi + rax*8 + 0x18], rdx ; pop rbx ; ret
0x000000000010f7b4 : adc al, 0xea ; add al, ch ; ret
0x000000000010f857 : adc al, 0xea ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010f797 : adc al, 0xea ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012e15d : adc al, 0xf7 ; call rax
0x000000000012e165 : adc al, 0xf7 ; jmp rsp
0x000000000010966d : adc al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e7609 : adc al, 6 ; ret
0x00000000000fa5af : adc al, 7 ; ret
0x0000000000142770 : adc al, bl ; sti ; jmp rsp
0x0000000000001b8b : adc al, byte ptr [rcx - 0x74] ; ret 0x4b17
0x00000000000bfa58 : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000004a2 : adc al, byte ptr [rcx] ; ret 0x8010
0x00000000000ff5d8 : adc bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000109897 : adc bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000013dd65 : adc bh, dl ; call qword ptr [rcx]
0x00000000001404b9 : adc bl, bh ; jmp qword ptr [rbx]
0x00000000000f0862 : adc bl, ch ; mov ebp, 0xf3001f0f ; ret
0x000000000010269f : adc byte ptr [r13 - 0x75], r9b ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8b4d
0x000000000001e273 : adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000000fff4b : adc byte ptr [r8 - 0x3f], r9b ; out 5, al ; add rax, rsi ; ret
0x000000000010f88f : adc byte ptr [r8], r8b ; mov qword ptr [rdi + 8], rax ; ret
0x000000000001e274 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000101059 : adc byte ptr [rax + 0x39], cl ; sal byte ptr [rbp + 0x19], 1 ; ret
0x00000000000f4809 : adc byte ptr [rax + 9], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x0000000000104094 : adc byte ptr [rax - 0x39], cl ; ret 0xfff0
0x00000000000fff4c : adc byte ptr [rax - 0x3f], cl ; out 5, al ; add rax, rsi ; ret
0x0000000000105470 : adc byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000f9562 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000031ef9 : adc byte ptr [rax - 0x77], cl ; ret 0x2ee8
0x00000000000f2548 : adc byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000000344e3 : adc byte ptr [rax - 0x7b], cl ; leave ; je 0x344f9 ; mov rdi, qword ptr [rdi] ; jmp rcx
0x00000000000ff23d : adc byte ptr [rax - 0x7b], cl ; ret 0x850f
0x000000000010e556 : adc byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x0000000000033ed7 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000f7e77 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f7b96 : adc byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000e7ae7 : adc byte ptr [rax - 0x7d], cl ; ret 0x6610
0x00000000000f4ea2 : adc byte ptr [rax], ah ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000005c4 : adc byte ptr [rax], ah ; ret 0x4000
0x000000000002e540 : adc byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000e1e34 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x162
0x000000000013d438 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov esp, 0x200000bd ; ret
0x0000000000104221 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fe725 : adc byte ptr [rax], al ; jne 0xfe715 ; ret
0x000000000010f890 : adc byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000028a9b : adc byte ptr [rax], al ; ret
0x00000000000005c3 : adc byte ptr [rax], spl ; ret 0x4000
0x000000000010cc79 : adc byte ptr [rbp + 0x39], cl ; push rcx ; adc byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x00000000000f77b2 : adc byte ptr [rbp + 0x39], cl ; ret
0x00000000001026a0 : adc byte ptr [rbp - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8b4d
0x000000000005f973 : adc byte ptr [rbp - 0x7b], al ; sal byte ptr [rdi + rsi*2 - 0x18], cl ; ret 0x8a8
0x0000000000116e94 : adc byte ptr [rbp - 0xf], dl ; inc dword ptr [rax] ; push rbp ; int1 ; call rax
0x00000000000e47e3 : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x00000000000f9db7 : adc byte ptr [rbx + 0x48], bl ; add eax, edx ; ret
0x0000000000026e33 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001c617 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001edd1 : adc byte ptr [rbx + 0x5d], bl ; ret
0x000000000013b083 : adc byte ptr [rbx + 0x80e4e02], al ; ret
0x0000000000142bd7 : adc byte ptr [rbx + 0x80e5602], al ; ret
0x000000000014006b : adc byte ptr [rbx + 0x80e5802], al ; ret
0x0000000000133a33 : adc byte ptr [rbx + 0x80e6602], al ; ret
0x000000000010513d : adc byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000000f448a : adc byte ptr [rcx + 0x4808244c], cl ; mov edi, esi ; call rax
0x00000000000f8360 : adc byte ptr [rcx + 0xf], al ; xchg eax, ebx ; ret
0x000000000010cc7d : adc byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x00000000000f835f : adc byte ptr [rcx + 0xf], r8b ; xchg eax, ebx ; ret
0x0000000000130898 : adc byte ptr [rcx + rax], 0xd8 ; stc ; cld ; call rax
0x00000000000f11de : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000f11a6 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r13 ; call rax
0x00000000000fb449 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010cd48 : adc byte ptr [rcx + rdi + 0x50], cl ; adc byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x00000000001073b2 : adc byte ptr [rcx + rdi - 0x18], cl ; je 0x107399 ; mov rdi, rbx ; call rax
0x0000000000021362 : adc byte ptr [rcx - 0x7f], cl ; ret
0x0000000000024c48 : adc byte ptr [rcx - 0x7f], cl ; ret 0x410
0x000000000012fa71 : adc byte ptr [rcx], al ; add al, ch ; or bh, bl ; jmp rsp
0x000000000014276d : adc byte ptr [rcx], al ; add byte ptr [rax], dl ; fdivr st(3) ; jmp rsp
0x0000000000143f90 : adc byte ptr [rcx], ch ; add dword ptr [rax], eax ; fcomp qword ptr [rsi] ; cld ; call rdi
0x000000000002e6d3 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001099c6 : adc byte ptr [rdi + rax + 0x5b], dh ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f9064 : adc byte ptr [rdi + rcx - 0x42], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0x4c01
0x0000000000032fd9 : adc byte ptr [rdi], cl ; add dword ptr [rax + 3], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000010e4c3 : adc byte ptr [rdi], cl ; sub dword ptr [rdx + 0x10], eax ; add rsp, 0x28 ; ret
0x00000000000a1fde : adc byte ptr [rdi], cl ; xchg bl, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000033529 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000032af9 : adc byte ptr [rdi], cl ; xchg ch, bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001402ab : adc byte ptr [rdx + 0xe], al ; or byte ptr [rcx + 0xb], al ; ret
0x00000000000f1594 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; je 0xf15a7 ; ret
0x00000000000f169d : adc byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000139090 : adc byte ptr [rdx], bh ; add ah, bl ; add bh, dh ; jmp rcx
0x000000000012f2e5 : adc cl, bh ; jmp rax
0x00000000000eabed : adc cl, byte ptr [rax + 1] ; ret
0x0000000000001b87 : adc dh, bh ; add esp, eax ; adc al, byte ptr [rcx - 0x74] ; ret 0x4b17
0x0000000000146700 : adc dl, 0xfc ; call rdi
0x000000000001c0b0 : adc dword ptr [rax + 0x48], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000001c10c : adc dword ptr [rax + 0x58], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f11a2 : adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000103f6b : adc dword ptr [rax - 0xf], edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000010f059 : adc dword ptr [rbx + 0x30], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010b5ee : adc dword ptr [rbx - 0x76b7ffff], esi ; ret 0x8948
0x000000000012faa1 : adc dword ptr [rcx], eax ; add al, cl ; sbb edi, ebx ; jmp rax
0x00000000000eaba9 : adc dword ptr [rdi + 0xf480003], 0x43 ; ret
0x00000000000eaca3 : adc dword ptr [rdi + rax*2], ecx ; ret
0x00000000000e779e : adc dword ptr [rdx + 0x220], edi ; xor esi, esi ; jmp rax
0x00000000000b0d92 : adc eax, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e07f2 : adc eax, 0x35c03 ; jmp 0xe07c1
0x000000000012fb59 : adc eax, 0x38480001 ; sti ; jmp qword ptr [rax]
0x00000000000c097a : adc eax, 0x3907e283 ; ret 0x8d0f
0x000000000007783d : adc eax, 0x4e2026 ; add rsp, 0x38 ; ret
0x00000000000777bd : adc eax, 0x4e20ae ; add rsp, 0x28 ; ret
0x000000000006c18d : adc eax, 0x4ed8be ; add rsp, 0x28 ; ret
0x000000000006c10d : adc eax, 0x4ed946 ; add rsp, 0x28 ; ret
0x000000000006c08d : adc eax, 0x4ed9d6 ; add rsp, 0x28 ; ret
0x000000000005ae2d : adc eax, 0x4fed1e ; add rsp, 0x28 ; ret
0x000000000005adad : adc eax, 0x4fedae ; add rsp, 0x28 ; ret
0x000000000005ad2d : adc eax, 0x4fee66 ; add rsp, 0x28 ; ret
0x000000000004db4d : adc eax, 0x50bff6 ; add rsp, 0x28 ; ret
0x000000000004dacd : adc eax, 0x50c086 ; add rsp, 0x28 ; ret
0x000000000004da4d : adc eax, 0x50c136 ; add rsp, 0x28 ; ret
0x00000000000e5d77 : adc eax, 0x58ffffe4 ; pop rdx ; leave ; ret
0x00000000000e4e77 : adc eax, 0x58fffff3 ; pop rdx ; leave ; ret
0x00000000000280cf : adc eax, 0x89480010 ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x52e8
0x0000000000132c3d : adc eax, 0x8bf00000 ; out dx, al ; jmp qword ptr [rcx]
0x0000000000100bcb : adc eax, 0x90660000 ; xor eax, eax ; ret
0x000000000010f734 : adc eax, 0xc4e800ea ; ret
0x0000000000132981 : adc eax, dword ptr [rax] ; add ah, cl ; insd dword ptr [rdi], dx ; out dx, eax ; jmp qword ptr [rax]
0x000000000010e466 : adc eax, dword ptr [rax] ; add al, ch ; ret 0xff8c
0x00000000000a7777 : adc ebp, eax ; ret
0x0000000000031e42 : adc ebx, dword ptr [rbp + 0xe] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000140529 : adc ebx, edi ; jmp rsp
0x00000000000fac25 : adc ecx, dword ptr [rax + 0x31] ; in eax, dx ; pop rax ; pop rdi ; call rax
0x00000000000f7b93 : adc ecx, dword ptr [rax - 0x7cb7eff4] ; ret 0x4901
0x00000000000b0dfc : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000002b89 : adc ecx, dword ptr [rbx + 0xb] ; ret 0x14b1
0x00000000001097b5 : adc edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000001312bd : adc edi, esi ; jmp rax
0x0000000000122941 : adc edi, esp ; call qword ptr [rax]
0x0000000000143b69 : adc edi, esp ; call qword ptr [rbx]
0x0000000000122935 : adc edi, esp ; dec eax ; adc edi, esp ; jmp rax
0x0000000000122939 : adc edi, esp ; jmp rax
0x00000000000f477b : adc edx, ebx ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x00000000001228e8 : adc spl, dil ; ljmp ptr [rax] ; adc ah, bh ; call qword ptr [rax]
0x0000000000146463 : add ah, ah ; add qword ptr [r8], r8 ; fmul st(7) ; cld ; jmp qword ptr [rdi]
0x0000000000143b63 : add ah, ah ; and al, 1 ; add byte ptr [rax], bl ; adc edi, esp ; call qword ptr [rbx]
0x00000000001412fb : add ah, ah ; mov ebx, edi ; call qword ptr [rbx]
0x000000000013253b : add ah, ah ; out dx, eax ; jmp rsi
0x000000000014197b : add ah, ah ; xchg eax, esp ; sti ; jmp qword ptr [rcx]
0x0000000000145543 : add ah, al ; add dword ptr ds:[rax], eax ; cwde ; mov ah, bh ; call qword ptr [rax]
0x0000000000140f0b : add ah, al ; jno 0x140f0e ; jmp qword ptr [rdx]
0x0000000000133edb : add ah, al ; or al, 0xf0 ; jmp qword ptr [rcx]
0x0000000000144e3b : add ah, al ; push rdi ; cld ; call qword ptr [rcx]
0x000000000013473b : add ah, al ; ret
0x0000000000144943 : add ah, al ; xor al, byte ptr [rcx] ; add al, ch ; cld ; jmp qword ptr [rdi]
0x00000000001227a9 : add ah, bh ; dec dword ptr [rax] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000134d23 : add ah, bh ; int1 ; jmp rcx
0x000000000013fe7b : add ah, bh ; out 0, eax ; add byte ptr [rax - 0x35], al ; cli ; jmp rdi
0x0000000000136c63 : add ah, bh ; sal ebx, cl ; call qword ptr [rbx]
0x0000000000144323 : add ah, bh ; sub edi, esp ; jmp qword ptr [rcx]
0x0000000000139093 : add ah, bl ; add bh, dh ; jmp rcx
0x0000000000133b5b : add ah, bl ; and al, 0 ; add byte ptr [rax], dl ; or al, dh ; jmp qword ptr [rcx]
0x000000000013da5b : add ah, bl ; ret
0x0000000000141f83 : add ah, bl ; stosb byte ptr [rdi], al ; sti ; jmp qword ptr [rax]
0x000000000014435b : add ah, bl ; sub al, 1 ; add byte ptr [rax + 0x2c], ah ; cld ; jmp qword ptr [rcx]
0x000000000014276b : add ah, ch ; adc byte ptr [rcx], al ; add byte ptr [rax], dl ; fdivr st(3) ; jmp rsp
0x000000000013fb6b : add ah, ch ; in al, 0 ; add al, ah ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000013d743 : add ah, ch ; loope 0x13d744 ; jmp qword ptr [rdx]
0x0000000000137f33 : add ah, ch ; push rdi ; cmc ; call rdx
0x000000000013184b : add ah, cl ; add dword ptr [rax], eax ; add byte ptr [rax], dl ; stosb byte ptr [rdi], al ; out dx, al ; call qword ptr [rdx]
0x000000000014544b : add ah, cl ; cmp eax, 0x86a00001 ; cld ; jmp qword ptr [rcx]
0x000000000013fc4b : add ah, cl ; in eax, 0 ; add al, ah ; mov al, 0xfa ; call qword ptr [rdi]
0x0000000000132983 : add ah, cl ; insd dword ptr [rdi], dx ; out dx, eax ; jmp qword ptr [rax]
0x0000000000131773 : add ah, dh ; add byte ptr [rax], al ; add al, bl ; test al, 0xee ; call qword ptr [rsi]
0x000000000013fc8b : add ah, dh ; mov al, 0xfa ; call qword ptr [rax]
0x0000000000137f73 : add ah, dh ; push 0x58880000 ; cmc ; call rdx
0x0000000000146153 : add ah, dl ; add qword ptr [rax], rax ; pop rax ; ret
0x0000000000140b53 : add ah, dl ; hlt ; add byte ptr [rax], al ; cwde ; pop rdi ; sti ; call qword ptr [rdi]
0x000000000013dbcb : add ah, dl ; or edx, edi ; jmp qword ptr [rax]
0x0000000000133253 : add ah, dl ; sbb eax, dword ptr [rax] ; add byte ptr [rax], ch ; mov cl, 0xef ; jmp rsp
0x0000000000134c53 : add ah, dl ; xor eax, 0x33f80000 ; int1 ; jmp rcx
0x00000000000e3635 : add al, 0 ; add al, ch ; ret
0x00000000000ec04e : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000002573b : add al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000001d889 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000052321 : add al, 0 ; add byte ptr [rax], al ; call 0xde5c6
0x00000000001099d2 : add al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000faf69 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000f9c31 : add al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x00000000000ec19d : add al, 0 ; add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 + 0x39], r9b ; ret 0x840f
0x00000000000b3e33 : add al, 0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e0d96 : add al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000b252b : add al, 0 ; nop dword ptr [rax] ; ret
0x00000000000bfd10 : add al, 0 ; pop rcx ; pop rsi ; jmp 0xbfcde
0x0000000000000804 : add al, 0 ; ret
0x0000000000000349 : add al, 0x10 ; add eax, dword ptr [rax] ; add byte ptr [rdx], al ; add cl, byte ptr [rax] ; ret 0xe408
0x00000000000f1461 : add al, 0x11 ; ret
0x000000000012fb58 : add al, 0x15 ; add dword ptr [rax], eax ; cmp bl, dil ; jmp qword ptr [rax]
0x00000000000f7e82 : add al, 0x18 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f7ba2 : add al, 0x20 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f4faa : add al, 0x24 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000269fb : add al, 0x24 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000104c4b : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000001099e7 : add al, 0x24 ; jmp 0x1099b1
0x000000000006c1cb : add al, 0x24 ; jmp 0x6c195
0x000000000007787b : add al, 0x24 ; jmp 0x77845
0x00000000000fec72 : add al, 0x24 ; ret
0x0000000000104233 : add al, 0x25 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000100c9a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000134384 : add al, 0x2d ; add byte ptr [rax], al ; call 0xffffffffd71333ff
0x00000000000fa6ac : add al, 0x48 ; add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000024e53 : add al, 0x48 ; cmp edx, ecx ; cmova rdx, rcx ; call qword ptr [rax]
0x00000000000e517f : add al, 0x48 ; mov dword ptr [rax], edi ; ret
0x00000000000e87b3 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x18] ; ret
0x00000000000e87f3 : add al, 0x48 ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000000f16cc : add al, 0x4c ; mov dword ptr [rax + 0x620], eax ; ret
0x000000000014318b : add al, 0x70 ; ret
0x0000000000128104 : add al, 0x71 ; std ; jmp rsp
0x000000000002cfed : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000002baaa : add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000ff032 : add al, 0x83 ; add rax, rbx ; jmp rax
0x00000000000a4060 : add al, 0x89 ; ret 0xe283
0x00000000000f9d24 : add al, 0x8b ; and al, 0xe8 ; ret
0x00000000000e0748 : add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000f8145 : add al, 0xa ; ret
0x000000000013183c : add al, 0xaa ; out dx, al ; call qword ptr [rdx]
0x000000000000263f : add al, 0xaf ; wait ; ret
0x0000000000028b43 : add al, 0xb ; adc byte ptr [rax], al ; ret
0x00000000000ff4d7 : add al, 0xb1 ; add rax, rcx ; jmp rax
0x00000000000ff4a3 : add al, 0xb2 ; add rax, rdx ; jmp rax
0x00000000000fac85 : add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000e833c : add al, 0xd8 ; pop rbx ; ret
0x0000000000129d98 : add al, 0xe2 ; std ; push rsp ; loope 0x129da3 ; jmp rsp
0x000000000010600f : add al, 0xf0 ; ret
0x000000000012d1fd : add al, 0xf1 ; jmp qword ptr [rax]
0x0000000000100f5b : add al, 0xf3 ; ret
0x000000000012f03d : add al, 0xf9 ; jmp rax
0x0000000000122811 : add al, 0xfc ; call rsp
0x000000000012f799 : add al, 1 ; add byte ptr [rax], bl ; push -7 ; jmp rsp
0x000000000012f791 : add al, 1 ; add byte ptr [rax], cl ; push -7 ; call rax
0x0000000000145e1a : add al, 2 ; ret 0xb80e
0x00000000000fa5f7 : add al, 7 ; sar eax, cl ; and eax, 1 ; ret
0x00000000000f79bf : add al, 7 ; test r8b, r8b ; jne 0xf7998 ; ret
0x000000000013fc4f : add al, ah ; mov al, 0xfa ; call qword ptr [rdi]
0x000000000013dd5f : add al, ah ; mov byte ptr [rax], 0 ; mov word ptr [rdx], ss ; cli ; call qword ptr [rcx]
0x0000000000117727 : add al, ah ; pop rsi ; int1 ; call rax
0x0000000000136c5f : add al, ah ; push rbp ; add byte ptr [rax], al ; cld ; sal ebx, cl ; call qword ptr [rbx]
0x000000000013fb6f : add al, ah ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000013f32f : add al, al ; mov dl, bh ; jmp qword ptr [rbx]
0x00000000000042ff : add al, al ; ret
0x000000000013d73f : add al, al ; rol byte ptr [rax], 0 ; in al, dx ; loope 0x13d748 ; jmp qword ptr [rdx]
0x0000000000140527 : add al, bh ; adc ebx, edi ; jmp rsp
0x000000000012f03b : add al, bh ; add al, 0xf9 ; jmp rax
0x0000000000141977 : add al, bh ; add al, byte ptr [rcx] ; add ah, ah ; xchg eax, esp ; sti ; jmp qword ptr [rcx]
0x000000000012cbe3 : add al, bh ; cmp ch, bh ; call rax
0x000000000012eb7b : add al, bh ; leave ; clc ; call rsp
0x000000000012f1c3 : add al, bh ; or bh, cl ; jmp rax
0x000000000012f243 : add al, bh ; or edi, ecx ; jmp qword ptr [rax]
0x000000000012dc23 : add al, bh ; out dx, al ; hlt ; call rax
0x000000000012edd3 : add al, bh ; out dx, eax ; clc ; jmp rax
0x0000000000130cf3 : add al, bh ; outsb dx, byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x000000000013d477 : add al, bh ; ret
0x000000000012e16b : add al, bh ; sbb bh, dh ; call qword ptr [rax]
0x000000000012ff8b : add al, bh ; scasd eax, dword ptr [rdi] ; sti ; call rax
0x000000000012f5fb : add al, bh ; stc ; call rax
0x000000000012d4d3 : add al, bh ; sti ; int1 ; call qword ptr [rax]
0x000000000012e60b : add al, bh ; xchg eax, esi ; clc ; jmp rsp
0x0000000000134c57 : add al, bh ; xor esi, ecx ; jmp rcx
0x000000000012effb : add al, bl ; add ecx, edi ; call qword ptr [rax]
0x00000000001301e3 : add al, bl ; cmc ; sti ; jmp qword ptr [rax]
0x000000000012dac3 : add al, bl ; insd dword ptr [rdi], dx ; hlt ; jmp rax
0x0000000000146467 : add al, bl ; iretd ; cld ; jmp qword ptr [rdi]
0x0000000000144ee7 : add al, bl ; movsxd rdi, esp ; jmp qword ptr [rsi]
0x000000000012d493 : add al, bl ; out dx, al ; int1 ; call qword ptr [rax]
0x000000000012ca3b : add al, bl ; out dx, eax ; out dx, al ; jmp rax
0x000000000012f7fb : add al, bl ; push -7 ; call rsp
0x0000000000130503 : add al, bl ; ret
0x000000000013110b : add al, bl ; ret 0xfffd
0x000000000013089b : add al, bl ; stc ; cld ; call rax
0x000000000012f4bb : add al, bl ; stc ; jmp rsp
0x0000000000131777 : add al, bl ; test al, 0xee ; call qword ptr [rsi]
0x000000000012fec3 : add al, bl ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000003339b : add al, byte ptr [r8] ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000133d46 : add al, byte ptr [rax + 0x41180e0a] ; ret
0x000000000002e53e : add al, byte ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000072a12 : add al, byte ptr [rax] ; add al, ch ; push rsi ; ret 8
0x0000000000075eed : add al, byte ptr [rax] ; add al, ch ; wait ; ret 8
0x000000000001bcec : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000f25f5 : add al, byte ptr [rax] ; add byte ptr [rax + 9], cl ; ret 0x3948
0x00000000000e7b90 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; xor esi, esi ; call rax
0x00000000000ecc7e : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x149
0x000000000004a2e9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000eb9bc : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000b307e : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf41
0x000000000001cf22 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000c4254 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e41e6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002fb2a : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000f26d2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x208
0x0000000000006f60 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000c168 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2d
0x0000000000007ba8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7a
0x00000000000facad : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000001f71d : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9b84 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x000000000003339c : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000e7bca : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000087a86 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002920f : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000e796c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x00000000000f1595 : add al, byte ptr [rax] ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000000dcbbb : add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000000000fbe47 : add al, byte ptr [rax] ; call 0xf80d4
0x00000000001050ed : add al, byte ptr [rax] ; cmp dword ptr [rax], edx ; sete al ; ret
0x000000000001c2a3 : add al, byte ptr [rax] ; je 0x1c2b8 ; add rax, rbx ; pop rbx ; ret
0x000000000001c2ce : add al, byte ptr [rax] ; je 0x1c2dd ; ret
0x00000000000d6275 : add al, byte ptr [rax] ; jmp 0xd248b
0x00000000000d6251 : add al, byte ptr [rax] ; jmp 0xd24c2
0x00000000000d622d : add al, byte ptr [rax] ; jmp 0xd24f9
0x0000000000106f84 : add al, byte ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; ret
0x00000000000ff4d3 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r14*4] ; add rax, rcx ; jmp rax
0x00000000001082b6 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000ff49f : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + r14*4] ; add rax, rdx ; jmp rax
0x00000000000fc0a2 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000ff7be : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000fac81 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000e01ac : add al, byte ptr [rax] ; nop ; xor eax, eax ; ret
0x00000000000e0b1a : add al, byte ptr [rax] ; nop dword ptr [rax] ; ret
0x00000000000f876f : add al, byte ptr [rax] ; ret
0x0000000000100aa5 : add al, byte ptr [rax] ; xor eax, eax ; call 0xfcd56
0x0000000000141979 : add al, byte ptr [rcx] ; add ah, ah ; xchg eax, esp ; sti ; jmp qword ptr [rcx]
0x000000000013daab : add al, byte ptr [rdi + 0x43280e0a] ; ret
0x00000000001030e4 : add al, byte ptr gs:[rax] ; ret
0x00000000000f4779 : add al, ch ; adc edx, ebx ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x00000000000f4d65 : add al, ch ; and eax, 0x480000d4 ; mov edi, ebp ; call rdx
0x000000000012d963 : add al, ch ; cdq ; call rsp
0x000000000013031b : add al, ch ; cld ; call qword ptr [rax]
0x0000000000144947 : add al, ch ; cld ; jmp qword ptr [rdi]
0x00000000000e86dd : add al, ch ; cmp eax, 0x5800019a ; pop rbx ; pop rbp ; ret
0x000000000012d473 : add al, ch ; fcomi st(1) ; call qword ptr [rax]
0x000000000010d3af : add al, ch ; fisttp dword ptr [rbp - 1] ; push rbx ; ret
0x0000000000131613 : add al, ch ; jge 0x131619 ; jmp rsp
0x00000000000abd3b : add al, ch ; jmp rsp
0x000000000013f0c7 : add al, ch ; jns 0x13f0c9 ; call rsp
0x00000000001027ed : add al, ch ; lea eax, dword ptr [rdi - 0x76b70001] ; ret
0x000000000012d09b : add al, ch ; mov ah, 0xf0 ; call rax
0x000000000012e873 : add al, ch ; mov al, 0xf8 ; jmp qword ptr [rax]
0x000000000012fa73 : add al, ch ; or bh, bl ; jmp rsp
0x000000000010489f : add al, ch ; or esp, dword ptr [rax - 1] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000006995c : add al, ch ; pop rsi ; ret
0x000000000001f75d : add al, ch ; popfq ; ret
0x0000000000072a14 : add al, ch ; push rsi ; ret 8
0x0000000000025cc7 : add al, ch ; ret
0x00000000000ed3c8 : add al, ch ; ret 0x14d
0x0000000000100bc8 : add al, ch ; ret 0x15
0x00000000000e1e38 : add al, ch ; ret 0x162
0x00000000000d2a38 : add al, ch ; ret 0x17f
0x00000000000e9dc8 : add al, ch ; ret 0x183
0x00000000000e2ab8 : add al, ch ; ret 0x184
0x00000000000d75c8 : add al, ch ; ret 0x2ab
0x00000000000d73c8 : add al, ch ; ret 0x2ad
0x00000000000fdcc8 : add al, ch ; ret 0x44
0x00000000000a84f8 : add al, ch ; ret 0x5d7
0x00000000000898f8 : add al, ch ; ret 0x7c3
0x0000000000072ef8 : add al, ch ; ret 0x92d
0x00000000000696f8 : add al, ch ; ret 0x9c5
0x000000000004e4f8 : add al, ch ; ret 0xb77
0x00000000000286c8 : add al, ch ; ret 0xd9a
0x0000000000108e98 : add al, ch ; ret 0xfe1c
0x0000000000109fc8 : add al, ch ; ret 0xff81
0x000000000010e468 : add al, ch ; ret 0xff8c
0x00000000000fb708 : add al, ch ; ret 0xff96
0x0000000000110f28 : add al, ch ; ret 0xffd5
0x000000000012e2eb : add al, ch ; ret 0xfff7
0x00000000000a2a21 : add al, ch ; ret 5
0x0000000000079a6f : add al, ch ; ret 8
0x0000000000102960 : add al, ch ; sbb al, byte ptr [rsi - 0x76b70001] ; ret
0x0000000000130cb3 : add al, ch ; std ; call rax
0x000000000012e813 : add al, ch ; stosb byte ptr [rdi], al ; clc ; call rax
0x0000000000075eef : add al, ch ; wait ; ret 8
0x000000000012e683 : add al, ch ; xchg eax, edi ; clc ; call qword ptr [rax]
0x000000000012e603 : add al, ch ; xchg eax, esi ; clc ; call rax
0x0000000000052324 : add al, ch ; xchg eax, esi ; ret 8
0x000000000012eedb : add al, cl ; cld ; clc ; call qword ptr [rax]
0x000000000012f853 : add al, cl ; jo 0x12f854 ; call qword ptr [rax]
0x000000000012e913 : add al, cl ; mov ah, 0xf8 ; jmp rax
0x000000000012d753 : add al, cl ; mov bh, 0xf2 ; call rax
0x000000000012ffd3 : add al, cl ; mov bl, 0xfb ; jmp rax
0x000000000012e993 : add al, cl ; mov ch, 0xf8 ; jmp qword ptr [rax]
0x000000000012f22b : add al, cl ; or edi, ecx ; jmp rsp
0x000000000012d48b : add al, cl ; out 0xf1, al ; jmp rsp
0x000000000012eb03 : add al, cl ; ret
0x000000000012eabb : add al, cl ; ret 0xfff8
0x000000000012dbeb : add al, cl ; sal esp, 1 ; call rsp
0x00000000001305db : add al, cl ; sar ah, cl ; call rsp
0x000000000012faa3 : add al, cl ; sbb edi, ebx ; jmp rax
0x0000000000144347 : add al, cl ; sub al, 1 ; add byte ptr [rsp + rbp - 4], al ; jmp qword ptr [rcx]
0x000000000012e22b : add al, cl ; test edi, esi ; call qword ptr [rdx + rax*8]
0x000000000001f0e7 : add al, dh ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret
0x0000000000132c3f : add al, dh ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000014246f : add al, dh ; or eax, 0xc87c0001 ; sti ; jmp qword ptr [rax]
0x000000000013d96f : add al, dh ; ret 0
0x000000000000759f : add al, dh ; ret 0xd
0x000000000014598f : add al, dh ; sahf ; cld ; call qword ptr [rdi]
0x00000000000d8e9e : add al, dh ; sub dword ptr [rdx], 1 ; add rsp, 8 ; ret
0x000000000013d44f : add al, dl ; mov ebp, 0xc32c0000 ; stc ; jmp rcx
0x00000000000f7382 : add bh, bh ; ret
0x000000000012eae8 : add bh, bl ; add byte ptr [rax], al ; cwde ; ret
0x00000000001308c5 : add bh, ch ; call rsp
0x0000000000139095 : add bh, dh ; jmp rcx
0x0000000000101fad : add bl, al ; nop ; xor eax, eax ; ret
0x00000000000f1509 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000f0cc4 : add bl, al ; xor eax, eax ; ret
0x000000000010909d : add bl, byte ptr [rbx - 0x3d] ; mov rax, rbx ; pop rbx ; ret
0x00000000001007ef : add bl, ch ; add byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e07f6 : add bl, ch ; ret 0x1f0f
0x00000000000f2b8a : add bl, ch ; ror byte ptr [rax - 0x7d], 0xc5 ; add dword ptr [rcx - 0x7f], ecx ; ret
0x000000000001b9b7 : add bl, dh ; ret
0x0000000000033bbe : add bl, sil ; ret
0x00000000000f57a8 : add byte ptr [0xffffffff83482b74], bh ; ret
0x000000000013fba3 : add byte ptr [0xffffffffafb80000], ah ; cli ; jmp rcx
0x00000000000f280d : add byte ptr [r13 - 0x77], cl ; ret
0x00000000000e69f4 : add byte ptr [r13 - 0xcf98b40], r8b ; ret
0x00000000000de46a : add byte ptr [r8 + 0x29], r9b ; cli ; xor esi, esi ; call qword ptr [rax]
0x00000000000e768e : add byte ptr [r8 + 0x39], r9b ; ret
0x00000000000fe6bf : add byte ptr [r8 + 0x39], r9b ; ret 0x1274
0x00000000000ec1a2 : add byte ptr [r8 + 0x39], r9b ; ret 0x840f
0x00000000000e7c08 : add byte ptr [r8 + 0xf], r9b ; ret 0x8348
0x00000000000ead35 : add byte ptr [r8 + r8*8 - 0x3fcefc8c], r8b ; ret
0x00000000000e478c : add byte ptr [r8 + r9 - 0xd], r14b ; ret
0x00000000000e6f91 : add byte ptr [r8 - 0x3f], r9b ; jmp 0xe6fa2
0x00000000000eec05 : add byte ptr [r8 - 0x73], cl ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000ef452 : add byte ptr [r8 - 0x73], cl ; dec dword ptr [rax - 0x7b] ; ret 0xa375
0x000000000001c447 : add byte ptr [r8 - 0x73], r9b ; push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000de8cd : add byte ptr [r8 - 0x75], r9b ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000e0ccd : add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000fbd0b : add byte ptr [r8 - 0x7b], r9b ; ret 0x840f
0x00000000000f2542 : add byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rax + rdx + 0x48], 0x89 ; ret 0x8148
0x00000000000e6137 : add byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rdx + rdx*2 + 0x48], 0x89 ; ret 0xffb9
0x00000000000ed3c5 : add byte ptr [r8], al ; add al, ch ; ret 0x14d
0x00000000000f53a5 : add byte ptr [r8], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e62e4 : add byte ptr [r8], r8b ; je 0xe62f6 ; ret
0x00000000000a91d5 : add byte ptr [r9 + r9*4 - 0x19], cl ; call rax
0x00000000000fa8af : add byte ptr [rax + 0x1000], bh ; ret
0x000000000003247e : add byte ptr [rax + 0x1158d48], dl ; ret 0x52
0x00000000000fec5e : add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000012f3eb : add byte ptr [rax + 0x17], bh ; stc ; call rsp
0x000000000013097b : add byte ptr [rax + 0x17], bh ; std ; jmp rsp
0x00000000000fa7de : add byte ptr [rax + 0x1847b60f], dl ; ret
0x000000000008d6a2 : add byte ptr [rax + 0x18740038], al ; call qword ptr [rip + 0x4cc2da]
0x00000000000f9ccf : add byte ptr [rax + 0x18], bh ; syscall ; ret
0x0000000000143daf : add byte ptr [rax + 0x19], al ; cld ; jmp rbx
0x000000000014330f : add byte ptr [rax + 0x1c00011c], dl ; std ; sti ; call qword ptr [rbx]
0x00000000001301fb : add byte ptr [rax + 0x1c], cl ; cld ; jmp qword ptr [rax]
0x000000000012cb5b : add byte ptr [rax + 0x1e], ch ; out dx, eax ; call rax
0x000000000001e942 : add byte ptr [rax + 0x21], cl ; call 0x48c47298
0x000000000001ed44 : add byte ptr [rax + 0x21], cl ; call 0x48c4769a
0x000000000001bc30 : add byte ptr [rax + 0x21], cl ; fmul dword ptr [rax - 0x77] ; ret 0xc148
0x000000000001f0eb : add byte ptr [rax + 0x21], cl ; ret
0x000000000012e3a3 : add byte ptr [rax + 0x22], bh ; clc ; call rsp
0x00000000001309b3 : add byte ptr [rax + 0x22], ch ; std ; jmp qword ptr [rax]
0x00000000000fec6e : add byte ptr [rax + 0x24048b48], dl ; ret
0x00000000000de0ab : add byte ptr [rax + 0x29], cl ; cli ; mov esi, 0xf7 ; call qword ptr [rax]
0x00000000000de46b : add byte ptr [rax + 0x29], cl ; cli ; xor esi, esi ; call qword ptr [rax]
0x000000000001bcee : add byte ptr [rax + 0x29], cl ; ret
0x00000000000e8881 : add byte ptr [rax + 0x29], cl ; ret 0x840f
0x000000000013e0df : add byte ptr [rax + 0x2a], dl ; cli ; call qword ptr [rsi]
0x00000000001441d7 : add byte ptr [rax + 0x2b], bl ; add dword ptr [rax], eax ; adc al, 0x25 ; cld ; call rdi
0x000000000014435f : add byte ptr [rax + 0x2c], ah ; cld ; jmp qword ptr [rcx]
0x000000000013c59f : add byte ptr [rax + 0x2d], al ; clc ; jmp rsp
0x000000000012e263 : add byte ptr [rax + 0x34fff793], cl ; ret
0x00000000000b3de2 : add byte ptr [rax + 0x3875003a], al ; call rax
0x000000000012fb5b : add byte ptr [rax + 0x38], cl ; sti ; jmp qword ptr [rax]
0x000000000002ac3a : add byte ptr [rax + 0x39487fff], al ; ret
0x00000000000fa26f : add byte ptr [rax + 0x39], bh ; syscall ; ret
0x0000000000130a7b : add byte ptr [rax + 0x39], ch ; std ; call rax
0x000000000001d861 : add byte ptr [rax + 0x39], cl ; ret
0x00000000000fe6c0 : add byte ptr [rax + 0x39], cl ; ret 0x1274
0x00000000000ec1a3 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000258ec : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000001cf07 : add byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000100f56 : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp + 4], 1 ; ret
0x0000000000101e15 : add byte ptr [rax + 0x39], cl ; sal byte ptr [rdi + 0x33], 1 ; ret
0x0000000000100d15 : add byte ptr [rax + 0x39], cl ; sal byte ptr [rdi + 0x34], 1 ; ret
0x00000000000f9d2f : add byte ptr [rax + 0x3b], bh ; syscall ; ret
0x000000000013570f : add byte ptr [rax + 0x3c000040], dl ; ret
0x000000000013f92f : add byte ptr [rax + 0x3c0000e2], dh ; stosb byte ptr [rdi], al ; cli ; call rsp
0x000000000013021b : add byte ptr [rax + 0x3d], bh ; cld ; jmp qword ptr [rax]
0x0000000000131837 : add byte ptr [rax + 0x4000001], bh ; stosb byte ptr [rdi], al ; out dx, al ; call qword ptr [rdx]
0x0000000000130243 : add byte ptr [rax + 0x40], cl ; cld ; call rax
0x00000000001449b7 : add byte ptr [rax + 0x42], cl ; cld ; call qword ptr [rdx]
0x00000000001459d7 : add byte ptr [rax + 0x43], bl ; add dword ptr [rax], eax ; mov ah, 0x9f ; cld ; jmp rdi
0x00000000000fc9ae : add byte ptr [rax + 0x493d8948], dl ; cmp ch, byte ptr [rbx] ; ret
0x000000000012cbfb : add byte ptr [rax + 0x4a], bl ; out dx, eax ; call rsp
0x00000000001463ef : add byte ptr [rax + 0x4d], dh ; add dword ptr [rax], eax ; pop rsp ; iretd ; cld ; jmp qword ptr [rdi]
0x00000000000f9cbf : add byte ptr [rax + 0x52], bh ; syscall ; ret
0x000000000012dd1b : add byte ptr [rax + 0x55], ch ; cmc ; jmp rax
0x00000000000f9caf : add byte ptr [rax + 0x57], bh ; syscall ; ret
0x000000000003d528 : add byte ptr [rax + 0x5a], bl ; jmp 0x3d4f3
0x0000000000045730 : add byte ptr [rax + 0x5a], bl ; jmp 0x456fb
0x0000000000045a40 : add byte ptr [rax + 0x5a], bl ; jmp 0x45a0b
0x0000000000045d50 : add byte ptr [rax + 0x5a], bl ; jmp 0x45d1b
0x000000000004da26 : add byte ptr [rax + 0x5a], bl ; jmp 0x4d9f2
0x0000000000054e90 : add byte ptr [rax + 0x5a], bl ; jmp 0x54e5b
0x0000000000055220 : add byte ptr [rax + 0x5a], bl ; jmp 0x551eb
0x0000000000055948 : add byte ptr [rax + 0x5a], bl ; jmp 0x55913
0x0000000000055cf0 : add byte ptr [rax + 0x5a], bl ; jmp 0x55cbb
0x0000000000056090 : add byte ptr [rax + 0x5a], bl ; jmp 0x5605b
0x0000000000056430 : add byte ptr [rax + 0x5a], bl ; jmp 0x563fb
0x00000000000567d0 : add byte ptr [rax + 0x5a], bl ; jmp 0x5679b
0x0000000000056b70 : add byte ptr [rax + 0x5a], bl ; jmp 0x56b3b
0x0000000000056f10 : add byte ptr [rax + 0x5a], bl ; jmp 0x56edb
0x00000000000572b0 : add byte ptr [rax + 0x5a], bl ; jmp 0x5727b
0x0000000000057650 : add byte ptr [rax + 0x5a], bl ; jmp 0x5761b
0x00000000000579f0 : add byte ptr [rax + 0x5a], bl ; jmp 0x579bb
0x0000000000057d90 : add byte ptr [rax + 0x5a], bl ; jmp 0x57d5b
0x0000000000058130 : add byte ptr [rax + 0x5a], bl ; jmp 0x580fb
0x00000000000584d0 : add byte ptr [rax + 0x5a], bl ; jmp 0x5849b
0x0000000000058870 : add byte ptr [rax + 0x5a], bl ; jmp 0x5883b
0x0000000000058c10 : add byte ptr [rax + 0x5a], bl ; jmp 0x58bdb
0x0000000000058fb0 : add byte ptr [rax + 0x5a], bl ; jmp 0x58f7b
0x0000000000059350 : add byte ptr [rax + 0x5a], bl ; jmp 0x5931b
0x00000000000596f0 : add byte ptr [rax + 0x5a], bl ; jmp 0x596bb
0x0000000000059a90 : add byte ptr [rax + 0x5a], bl ; jmp 0x59a5b
0x0000000000059e30 : add byte ptr [rax + 0x5a], bl ; jmp 0x59dfb
0x000000000005a1d0 : add byte ptr [rax + 0x5a], bl ; jmp 0x5a19b
0x000000000005a570 : add byte ptr [rax + 0x5a], bl ; jmp 0x5a53b
0x0000000000089c88 : add byte ptr [rax + 0x5a], bl ; jmp 0x89c53
0x000000000008a0c8 : add byte ptr [rax + 0x5a], bl ; jmp 0x8a093
0x000000000008a508 : add byte ptr [rax + 0x5a], bl ; jmp 0x8a4d3
0x00000000000204d2 : add byte ptr [rax + 0x5a], bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012dd23 : add byte ptr [rax + 0x5b], bh ; cmc ; call qword ptr [rax]
0x00000000000e86e2 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000014251f : add byte ptr [rax + 0x5c00010e], ah ; sar bl, 1 ; call qword ptr [rsi]
0x0000000000130343 : add byte ptr [rax + 0x5d], bl ; cld ; call rax
0x000000000012fbe3 : add byte ptr [rax + 0x5f], ch ; sti ; call rax
0x00000000001376d7 : add byte ptr [rax + 0x60], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff4
0x000000000012f683 : add byte ptr [rax + 0x62], bh ; stc ; call rax
0x00000000001082b7 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000002baa7 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000ff7bf : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000fac82 : add byte ptr [rax + 0x63], cl ; add al, 0xba ; add rax, rdx ; jmp rax
0x000000000012fbeb : add byte ptr [rax + 0x63], cl ; sti ; call qword ptr [rax]
0x000000000012f733 : add byte ptr [rax + 0x69], cl ; stc ; jmp rax
0x000000000012f7b3 : add byte ptr [rax + 0x6a], cl ; stc ; jmp qword ptr [rax]
0x00000000000fa20f : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x0000000000130cdb : add byte ptr [rax + 0x6e], bl ; std ; jmp rsp
0x000000000012e45b : add byte ptr [rax + 0x74], ch ; clc ; jmp rsp
0x000000000010e316 : add byte ptr [rax + 0x75000178], al ; add esi, ebx ; ret
0x000000000010e056 : add byte ptr [rax + 0x75000c78], al ; add esi, ebx ; ret
0x0000000000034026 : add byte ptr [rax + 0x75001c78], al ; add esi, ebx ; ret
0x0000000000104966 : add byte ptr [rax + 0x75003178], al ; add esi, ebx ; ret
0x000000000010b2c6 : add byte ptr [rax + 0x75003978], al ; add dh, bl ; ret
0x000000000010d826 : add byte ptr [rax + 0x75003978], al ; add esi, ebx ; ret
0x00000000000f1356 : add byte ptr [rax + 0x75003c78], al ; add esi, ebx ; ret
0x00000000000e5519 : add byte ptr [rax + 0x75007fff], al ; or bl, dh ; ret
0x000000000012d323 : add byte ptr [rax + 0x7a], ch ; int1 ; call rax
0x0000000000141007 : add byte ptr [rax + 0x7e], ch ; sti ; jmp qword ptr [rdx]
0x00000000000fa25f : add byte ptr [rax + 0x83], bh ; syscall ; ret
0x00000000001420cf : add byte ptr [rax + 0xa], dl ; add dword ptr [rax], eax ; sub al, 0xb1 ; sti ; jmp qword ptr [rdx]
0x0000000000106f37 : add byte ptr [rax + 0xafe167c], al ; sete al ; ret
0x0000000000033b2f : add byte ptr [rax + 0xb745f3f], al ; mov rax, rdi ; ret
0x00000000000ffd1f : add byte ptr [rax + 0xb75003e], al ; ret
0x00000000001402c7 : add byte ptr [rax + 0xd], bl ; sti ; jmp rcx
0x00000000000e46f2 : add byte ptr [rax + 0xf], cl ; add eax, 0x479b9d ; ret
0x00000000000eabac : add byte ptr [rax + 0xf], cl ; ret
0x00000000000e8794 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000e7c65 : add byte ptr [rax + 0xf], cl ; ret 0x8148
0x00000000000e7c09 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000001115d1 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000ea095 : add byte ptr [rax + 0xf], cl ; ret 0xe6e9
0x00000000001117f0 : add byte ptr [rax + 0xf], cl ; ret 0xf66
0x00000000000e881d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000f0cbf : add byte ptr [rax + 1], bh ; ret
0x00000000000e7606 : add byte ptr [rax + 1], cl ; adc al, 6 ; ret
0x000000000001bc83 : add byte ptr [rax + 1], cl ; ret
0x0000000000020f29 : add byte ptr [rax + 1], cl ; ret 0xc149
0x00000000000faf67 : add byte ptr [rax + 4], bh ; ret
0x000000000012d853 : add byte ptr [rax + 5], bh ; jmp qword ptr [rax]
0x000000000002ac37 : add byte ptr [rax + 5], cl ; add byte ptr [rax + 0x39487fff], al ; ret
0x00000000000f1503 : add byte ptr [rax + 5], cl ; sub byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000000000f9c3f : add byte ptr [rax + 6], bh ; syscall ; ret
0x00000000000f25f7 : add byte ptr [rax + 9], cl ; ret 0x3948
0x00000000000ead36 : add byte ptr [rax + rax*8 - 0x3fcefc8c], al ; ret
0x000000000013d8bf : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret 0
0x00000000001030ca : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000140db3 : add byte ptr [rax + rbp*2 - 5], ch ; call rcx
0x000000000001f095 : add byte ptr [rax + rcx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000133c53 : add byte ptr [rax + rcx - 0x10], ch ; call qword ptr [rbx]
0x0000000000131f33 : add byte ptr [rax + rcx - 0x11d80000], dh ; out dx, al ; jmp rsp
0x00000000000e478d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x0000000000142473 : add byte ptr [rax + rcx*8 - 5], bh ; jmp qword ptr [rax]
0x0000000000144ee3 : add byte ptr [rax + rdi + 1], ah ; add al, bl ; movsxd rdi, esp ; jmp qword ptr [rsi]
0x00000000000bb645 : add byte ptr [rax + rdx + 0x5b], dh ; ret
0x0000000000142523 : add byte ptr [rax + rdx*8 - 5], bl ; call qword ptr [rsi]
0x00000000001464a3 : add byte ptr [rax + rdx*8], cl ; cld ; jmp qword ptr [rdi]
0x000000000012e28b : add byte ptr [rax - 0x1300085b], cl ; ret
0x0000000000137f2f : add byte ptr [rax - 0x13ffff98], dh ; push rdi ; cmc ; call rdx
0x000000000012f9bb : add byte ptr [rax - 0x15], cl ; cli ; call rax
0x00000000001307bb : add byte ptr [rax - 0x1a], bl ; cld ; call qword ptr [rax]
0x0000000000132537 : add byte ptr [rax - 0x1bfffff2], bh ; out dx, eax ; jmp rsi
0x000000000012e24b : add byte ptr [rax - 0x23000872], bh ; ret 0
0x000000000013da57 : add byte ptr [rax - 0x24000000], al ; ret
0x00000000000e7602 : add byte ptr [rax - 0x24], ah ; add byte ptr [rax], al ; add qword ptr [rsi + rax], rdx ; ret
0x000000000012ec2b : add byte ptr [rax - 0x24], bh ; clc ; jmp rax
0x000000000013011b : add byte ptr [rax - 0x24], ch ; sti ; jmp rsp
0x000000000013068b : add byte ptr [rax - 0x28], cl ; cld ; jmp qword ptr [rax]
0x00000000001464df : add byte ptr [rax - 0x30], al ; cld ; jmp qword ptr [rdi]
0x000000000013fe7f : add byte ptr [rax - 0x35], al ; cli ; jmp rdi
0x00000000001300b3 : add byte ptr [rax - 0x35], bh ; sti ; jmp rsp
0x000000000012eb33 : add byte ptr [rax - 0x37], ch ; clc ; jmp qword ptr [rax]
0x000000000013debf : add byte ptr [rax - 0x38], al ; add byte ptr [rax], al ; sbb al, 0x23 ; cli ; call qword ptr [rdi]
0x0000000000144e37 : add byte ptr [rax - 0x3bfffec9], bh ; push rdi ; cld ; call qword ptr [rcx]
0x0000000000140f07 : add byte ptr [rax - 0x3bffff08], cl ; jno 0x140f12 ; jmp qword ptr [rdx]
0x0000000000134737 : add byte ptr [rax - 0x3bffffd0], bh ; ret
0x000000000012dbbb : add byte ptr [rax - 0x3c], bh ; hlt ; call qword ptr [rax]
0x00000000000fa17e : add byte ptr [rax - 0x3f7af875], dl ; je 0xfa199 ; ret
0x00000000000e515a : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5171 ; ret
0x00000000000e51ba : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe51d1 ; ret
0x00000000000e521a : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5231 ; ret
0x00000000000e527a : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5291 ; ret
0x00000000000e52ea : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5301 ; ret
0x00000000000e535a : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5371 ; ret
0x00000000000e53ca : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe53e1 ; ret
0x00000000000e543a : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5451 ; ret
0x00000000000e54aa : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe54c1 ; ret
0x00000000000e575a : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5771 ; ret
0x00000000000e57ca : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe57e1 ; ret
0x00000000000e583a : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5851 ; ret
0x00000000000e58aa : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe58c1 ; ret
0x00000000000e591a : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5931 ; ret
0x00000000000e598a : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe59a1 ; ret
0x00000000000e59fa : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5a11 ; ret
0x00000000000e5a6a : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5a81 ; ret
0x00000000000e5ada : add byte ptr [rax - 0x3f7b8001], al ; jne 0xe5af1 ; ret
0x000000000012ea13 : add byte ptr [rax - 0x3f], bh ; clc ; call rsp
0x00000000000e6f92 : add byte ptr [rax - 0x3f], cl ; jmp 0xe6fa1
0x000000000002e833 : add byte ptr [rax - 0x3fce8001], al ; ret
0x000000000014431f : add byte ptr [rax - 0x3fffed4], ah ; sub edi, esp ; jmp qword ptr [rcx]
0x0000000000134d1f : add byte ptr [rax - 0x3ffffca], ah ; int1 ; jmp rcx
0x000000000012d9a3 : add byte ptr [rax - 0x47], cl ; jmp rax
0x00000000001304c3 : add byte ptr [rax - 0x4a], cl ; cld ; jmp rsp
0x0000000000141927 : add byte ptr [rax - 0x4bfffefe], ch ; xchg eax, esp ; sti ; jmp qword ptr [rbx]
0x000000000012ff4b : add byte ptr [rax - 0x56], cl ; sti ; call rsp
0x0000000000131043 : add byte ptr [rax - 0x57], bl ; std ; call rsp
0x0000000000139137 : add byte ptr [rax - 0x5bffff86], bh ; sbb bh, dh ; call rsp
0x000000000012e773 : add byte ptr [rax - 0x5c], ch ; clc ; jmp rax
0x0000000000130403 : add byte ptr [rax - 0x60], bh ; cld ; jmp qword ptr [rax]
0x000000000012fefb : add byte ptr [rax - 0x66], bl ; sti ; jmp qword ptr [rax]
0x00000000000fc132 : add byte ptr [rax - 0x6af0f507], al ; ret 0xf980
0x000000000001e50f : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000000e07ef : add byte ptr [rax - 0x73], cl ; adc eax, 0x35c03 ; jmp 0xe07c4
0x000000000010f70f : add byte ptr [rax - 0x73], cl ; add eax, 0x1bfb4 ; ret
0x00000000000fc0ff : add byte ptr [rax - 0x73], cl ; add eax, 0x2b623 ; ret
0x00000000000fc0ef : add byte ptr [rax - 0x73], cl ; add eax, 0x2b62f ; ret
0x00000000000fc0df : add byte ptr [rax - 0x73], cl ; add eax, 0x2b635 ; ret
0x00000000000fc0cf : add byte ptr [rax - 0x73], cl ; add eax, 0x2b641 ; ret
0x00000000000fc0bf : add byte ptr [rax - 0x73], cl ; add eax, 0x2b65a ; ret
0x00000000000fc0af : add byte ptr [rax - 0x73], cl ; add eax, 0x2b65d ; ret
0x00000000000eab53 : add byte ptr [rax - 0x73], cl ; add eax, 0x4825e5 ; pop rbx ; ret
0x00000000000eaab5 : add byte ptr [rax - 0x73], cl ; add eax, 0x482683 ; pop rbx ; ret
0x00000000000f0f0f : add byte ptr [rax - 0x73], cl ; add eax, 0x6bd289 ; ret
0x00000000000fdd5f : add byte ptr [rax - 0x73], cl ; add eax, 0xeb2ad9 ; ret
0x000000000003143f : add byte ptr [rax - 0x73], cl ; add eax, 0xf8204 ; ret
0x00000000000fea41 : add byte ptr [rax - 0x73], cl ; add qword ptr [rax - 0x7d], rcx ; ret 0x4902
0x00000000000edf96 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000ef453 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7b] ; ret 0xa375
0x000000000001d56d : add byte ptr [rax - 0x73], cl ; dec dword ptr [rcx - 0x75] ; push rsp ; ret 0x4838
0x00000000001040b7 : add byte ptr [rax - 0x73], cl ; push rax ; dec dword ptr [rax - 0x7b] ; ret 0x2f75
0x000000000001c448 : add byte ptr [rax - 0x73], cl ; push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000001eab3 : add byte ptr [rax - 0x73], cl ; push rbx ; dec dword ptr [rax + 1] ; ret
0x00000000000e8339 : add byte ptr [rax - 0x75], cl ; add al, 0xd8 ; pop rbx ; ret
0x0000000000029193 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000db24f : add byte ptr [rax - 0x75], cl ; add eax, 0x26cd99 ; ret
0x00000000000e4797 : add byte ptr [rax - 0x75], cl ; add eax, 0x479c41 ; ret
0x00000000000e476f : add byte ptr [rax - 0x75], cl ; add eax, 0x479c61 ; ret
0x00000000000e46cf : add byte ptr [rax - 0x75], cl ; add eax, 0x479cf9 ; ret
0x00000000000e46af : add byte ptr [rax - 0x75], cl ; add eax, 0x479d11 ; ret
0x00000000000e468f : add byte ptr [rax - 0x75], cl ; add eax, 0x479d29 ; ret
0x000000000010b6af : add byte ptr [rax - 0x75], cl ; add eax, 0xea53e1 ; ret
0x000000000010423f : add byte ptr [rax - 0x75], cl ; add eax, 0xeac6e1 ; ret
0x000000000002e4fb : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000033bea : add byte ptr [rax - 0x75], cl ; and al, 8 ; mov rdx, rax ; jmp 0x33bae
0x00000000000e93e8 : add byte ptr [rax - 0x75], cl ; jnp 0xe9402 ; call rax
0x00000000000e9692 : add byte ptr [rax - 0x75], cl ; jnp 0xe96ac ; call rax
0x00000000000eabe1 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x29], r9b ; ret 0x3948
0x00000000000221a9 : add byte ptr [rax - 0x75], cl ; ret 0x4838
0x000000000002158e : add byte ptr [rax - 0x75], cl ; ret 0x4c38
0x000000000002a979 : add byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret 0x3948
0x0000000000145637 : add byte ptr [rax - 0x76], bh ; cld ; jmp qword ptr [rcx]
0x000000000012e243 : add byte ptr [rax - 0x76], bl ; idiv edi ; lodsb al, byte ptr [rsi] ; ret 0
0x0000000000031ef6 : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x2ee8
0x000000000001f97f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000eac67 : add byte ptr [rax - 0x77], cl ; cmp eax, 0x25d3d1 ; ret
0x00000000000eac9f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x474c11 ; ret
0x000000000010251f : add byte ptr [rax - 0x77], cl ; cmp eax, 0xeae3b9 ; ret
0x000000000010217f : add byte ptr [rax - 0x77], cl ; cmp eax, 0xeae6f9 ; ret
0x00000000000f6a59 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000026954 : add byte ptr [rax - 0x77], cl ; fidiv dword ptr [rcx] ; test byte ptr [rax - 0x77], 0xef ; call qword ptr [rax]
0x00000000000ed687 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8548
0x000000000010464f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x000000000001c85f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x7f] ; ret
0x0000000000062397 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call 0xde5c9
0x00000000000ddb27 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000a19f4 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000108b24 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000030e35 : add byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; call 0xdd0e8
0x0000000000101c5f : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000f4d6a : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rdx
0x00000000000e7b92 : add byte ptr [rax - 0x77], cl ; out dx, eax ; xor esi, esi ; call rax
0x00000000000f5f13 : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x10e8
0x00000000000f60e3 : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x40e8
0x00000000000f5fe2 : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x41e8
0x00000000000f5eda : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x49e8
0x00000000000f68d6 : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x4de8
0x00000000000f611f : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x4e8
0x00000000000280d1 : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x52e8
0x00000000000f5ea1 : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x82e8
0x00000000000f5e68 : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xbbe8
0x0000000000028066 : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xbde8
0x00000000000f615b : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xc8e8
0x000000000010f94b : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xd8e8
0x00000000000f5e2f : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xf4e8
0x000000000002802a : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xf9e8
0x0000000000104826 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000023a58 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000ecc80 : add byte ptr [rax - 0x77], cl ; ret 0x149
0x00000000000efe93 : add byte ptr [rax - 0x77], cl ; ret 0x14d
0x00000000000b3114 : add byte ptr [rax - 0x77], cl ; ret 0x1674
0x00000000000f46b6 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000022644 : add byte ptr [rax - 0x77], cl ; ret 0x2676
0x0000000000024c92 : add byte ptr [rax - 0x77], cl ; ret 0x2876
0x00000000000213aa : add byte ptr [rax - 0x77], cl ; ret 0x3076
0x000000000001d43c : add byte ptr [rax - 0x77], cl ; ret 0x3145
0x00000000000fbe57 : add byte ptr [rax - 0x77], cl ; ret 0x70e8
0x00000000000b1c8c : add byte ptr [rax - 0x77], cl ; ret 0x840f
0x000000000002196d : add byte ptr [rax - 0x77], cl ; ret 0x860f
0x0000000000021319 : add byte ptr [rax - 0x77], cl ; ret 0x870f
0x000000000001bd79 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e6c02 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000001f2b1 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000004a2eb : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000f697e : add byte ptr [rax - 0x77], cl ; ret 0xa9e9
0x00000000000dcfc9 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000029196 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000ff6c6 : add byte ptr [rax - 0x77], cl ; ret 0xd989
0x00000000000f4de2 : add byte ptr [rax - 0x77], cl ; ret 0xe95b
0x00000000000b3080 : add byte ptr [rax - 0x77], cl ; ret 0xf41
0x00000000000ffe5c : add byte ptr [rax - 0x77], cl ; ret 0xf49
0x00000000000fa7b4 : add byte ptr [rax - 0x77], cl ; syscall ; ret
0x00000000001003f0 : add byte ptr [rax - 0x77], cl ; xchg eax, edi ; call 0xffffffffc3100401
0x00000000000deff6 : add byte ptr [rax - 0x77], cl ; xor esi, esi ; mov rax, qword ptr [rax] ; jmp rax
0x00000000000895e2 : add byte ptr [rax - 0x77], r9b ; ret
0x00000000000ead1f : add byte ptr [rax - 0x78], al ; cmp eax, 0x474b89 ; ret
0x00000000000dd0bf : add byte ptr [rax - 0x78], al ; cmp eax, 0x480da1 ; ret
0x000000000001e7ef : add byte ptr [rax - 0x78], al ; cmp eax, 0x53a8a9 ; ret
0x000000000013038b : add byte ptr [rax - 0x7a], bh ; cld ; call qword ptr [rax]
0x0000000000105d4f : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x105d67 ; ret
0x0000000000105e6f : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x105e87 ; ret
0x00000000000f8fb7 : add byte ptr [rax - 0x7b], cl ; leave ; js 0xf8ff6 ; neg rax ; ret
0x000000000001c15f : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbx + rcx + 0x48] ; mov eax, edi ; ret
0x00000000000fbd0c : add byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000032deb : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000003812c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000007a7c4 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 1
0x00000000000a3172 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 7
0x00000000000e0502 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x3949
0x00000000000f2543 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdx + 0x48], 0x89 ; ret 0x8148
0x00000000000b0d3d : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x48], 0x89 ; ret
0x00000000000f0cae : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x14], 0xf3 ; ret
0x00000000000e6138 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rdx*2 + 0x48], 0x89 ; ret 0xffb9
0x00000000000e7dbe : add byte ptr [rax - 0x7bfa72b8], dl ; sbb byte ptr [rax + rax], al ; ret
0x0000000000142b07 : add byte ptr [rax - 0x7bfffeec], cl ; loope 0x142b12 ; call qword ptr [rcx]
0x0000000000033906 : add byte ptr [rax - 0x7cb78001], al ; ret
0x00000000000f7e74 : add byte ptr [rax - 0x7cb7eff4], cl ; ret 0x4801
0x00000000000ec927 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2981545
0x000000000001bc0c : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000108ccf : add byte ptr [rax - 0x7d], cl ; cli ; or byte ptr [rdi + 0xa], dh ; xor eax, eax ; ret
0x00000000000bb641 : add byte ptr [rax - 0x7d], cl ; cmp eax, dword ptr [rax] ; je 0xbb660 ; pop rbx ; ret
0x0000000000102092 : add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rcx], ch ; ret 0x8d48
0x00000000000f0cd6 : add byte ptr [rax - 0x7d], cl ; js 0xf0d5c ; add byte ptr [rbp + 2], dh ; ret
0x00000000000f0d16 : add byte ptr [rax - 0x7d], cl ; js 0xf0d9c ; add byte ptr [rbp + 2], dh ; ret
0x000000000001bb79 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000001cdc6 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002fb2e : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000010d806 : add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000029a92 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000471bf : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000103056 : add byte ptr [rax - 0x7d], cl ; stc ; add dword ptr [rbp + 3], esi ; ret
0x00000000000e61de : add byte ptr [rax - 0x7eb78001], al ; ret 0x8000
0x000000000002dafa : add byte ptr [rax - 0x7eb80000], al ; ret
0x00000000000242e3 : add byte ptr [rax - 0x7f], cl ; ret
0x00000000000f26d6 : add byte ptr [rax - 0x7f], cl ; ret 0x208
0x0000000000029367 : add byte ptr [rax - 0x7f], cl ; ret 0x8000
0x00000000000fbdcf : add byte ptr [rax - 0x80], al ; ljmp ptr [rdi] ; sete al ; ret
0x00000000000def93 : add byte ptr [rax - 0xc538001], al ; ret
0x000000000013086b : add byte ptr [rax - 0xc], bh ; cld ; jmp rsp
0x00000000001431cf : add byte ptr [rax - 0xc], dl ; sti ; call rsi
0x0000000000131203 : add byte ptr [rax - 0xe], cl ; std ; jmp qword ptr [rax]
0x00000000000dc34f : add byte ptr [rax - 1], bh ; ret
0x00000000001412f7 : add byte ptr [rax - 4], bh ; add byte ptr [rax], al ; in al, 0x89 ; sti ; call qword ptr [rbx]
0x000000000012caeb : add byte ptr [rax - 7], cl ; out dx, al ; call qword ptr [rax]
0x000000000013da58 : add byte ptr [rax], 0 ; add ah, bl ; ret
0x0000000000022641 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2676
0x0000000000024c8f : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2876
0x00000000000213a7 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x3076
0x000000000002196a : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x860f
0x0000000000021316 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x870f
0x00000000000ee55d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000242e0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000101073 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000101d63 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x000000000001b9b3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000ff9e3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014649f : add byte ptr [rax], ah ; add qword ptr [rax], r8 ; or al, 0xd0 ; cld ; jmp qword ptr [rdi]
0x000000000013302f : add byte ptr [rax], ah ; pushfq ; out dx, eax ; jmp rcx
0x000000000013d43f : add byte ptr [rax], ah ; ret
0x000000000001a54f : add byte ptr [rax], ah ; ret 0x12
0x00000000000ff23b : add byte ptr [rax], al ; adc byte ptr [rax - 0x7b], cl ; ret 0x850f
0x00000000000fe723 : add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0xfe717 ; ret
0x0000000000143f8e : add byte ptr [rax], al ; adc byte ptr [rcx], ch ; add dword ptr [rax], eax ; fcomp qword ptr [rsi] ; cld ; call rdi
0x000000000013908e : add byte ptr [rax], al ; adc byte ptr [rdx], bh ; add ah, bl ; add bh, dh ; jmp rcx
0x000000000013297f : add byte ptr [rax], al ; adc eax, dword ptr [rax] ; add ah, cl ; insd dword ptr [rdi], dx ; out dx, eax ; jmp qword ptr [rax]
0x000000000013da59 : add byte ptr [rax], al ; add ah, bl ; ret
0x0000000000146151 : add byte ptr [rax], al ; add ah, dl ; add qword ptr [rax], rax ; pop rax ; ret
0x0000000000134382 : add byte ptr [rax], al ; add al, 0x2d ; add byte ptr [rax], al ; call 0xffffffffd7133401
0x000000000013183a : add byte ptr [rax], al ; add al, 0xaa ; out dx, al ; call qword ptr [rdx]
0x0000000000131775 : add byte ptr [rax], al ; add al, bl ; test al, 0xee ; call qword ptr [rsi]
0x000000000001c2cc : add byte ptr [rax], al ; add al, byte ptr [rax] ; je 0x1c2df ; ret
0x00000000000abd39 : add byte ptr [rax], al ; add al, ch ; jmp rsp
0x000000000004c9f5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000ed3c6 : add byte ptr [rax], al ; add al, ch ; ret 0x14d
0x0000000000100bc6 : add byte ptr [rax], al ; add al, ch ; ret 0x15
0x00000000000e1e36 : add byte ptr [rax], al ; add al, ch ; ret 0x162
0x00000000000d75c6 : add byte ptr [rax], al ; add al, ch ; ret 0x2ab
0x00000000000d73c6 : add byte ptr [rax], al ; add al, ch ; ret 0x2ad
0x00000000000fdcc6 : add byte ptr [rax], al ; add al, ch ; ret 0x44
0x0000000000110f26 : add byte ptr [rax], al ; add al, ch ; ret 0xffd5
0x0000000000052322 : add byte ptr [rax], al ; add al, ch ; xchg eax, esi ; ret 8
0x000000000013da45 : add byte ptr [rax], al ; add al, cl ; ret
0x000000000001f0e5 : add byte ptr [rax], al ; add al, dh ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret
0x000000000013d96d : add byte ptr [rax], al ; add al, dh ; ret 0
0x0000000000101fab : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000f0cc2 : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000000000001b9b5 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000003247c : add byte ptr [rax], al ; add byte ptr [rax + 0x1158d48], dl ; ret 0x52
0x00000000000fec5c : add byte ptr [rax], al ; add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000001e940 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; call 0x48c4729a
0x000000000001ed42 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; call 0x48c4769c
0x000000000001bc2e : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; fmul dword ptr [rax - 0x77] ; ret 0xc148
0x00000000000fec6c : add byte ptr [rax], al ; add byte ptr [rax + 0x24048b48], dl ; ret
0x000000000001eb34 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e887f : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x840f
0x0000000000029beb : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000edce5 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000101e13 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; sal byte ptr [rdi + 0x33], 1 ; ret
0x0000000000100d13 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; sal byte ptr [rdi + 0x34], 1 ; ret
0x000000000013570d : add byte ptr [rax], al ; add byte ptr [rax + 0x3c000040], dl ; ret
0x00000000001376d5 : add byte ptr [rax], al ; add byte ptr [rax + 0x60], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff4
0x00000000000e8792 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000e7c63 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8148
0x00000000001115cf : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000ea093 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xe6e9
0x00000000001117ee : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf66
0x00000000000e881b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000f0cbd : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000001f4bd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000f1501 : add byte ptr [rax], al ; add byte ptr [rax + 5], cl ; sub byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000000000013d8bd : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret 0
0x000000000013da55 : add byte ptr [rax], al ; add byte ptr [rax - 0x24000000], al ; ret
0x0000000000134735 : add byte ptr [rax], al ; add byte ptr [rax - 0x3bffffd0], bh ; ret
0x000000000001c590 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000e8337 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0xd8 ; pop rbx ; ret
0x00000000000a19f2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000000f68d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x4de8
0x00000000000e95c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f46b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000022642 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2676
0x0000000000024c90 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2876
0x00000000000213a8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3076
0x000000000002196b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x860f
0x0000000000021317 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x870f
0x000000000001d02f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000001f2af : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000fa7b2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; syscall ; ret
0x0000000000105d4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0x105d69 ; ret
0x0000000000105e6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0x105e89 ; ret
0x000000000001d48a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000102090 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rcx], ch ; ret 0x8d48
0x000000000001bb77 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000337bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002fb2c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000471bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000242e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000f26d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x208
0x0000000000029365 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x8000
0x00000000000dc34d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000013da56 : add byte ptr [rax], al ; add byte ptr [rax], 0 ; add ah, bl ; ret
0x000000000001a54d : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x12
0x00000000000ff239 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax - 0x7b], cl ; ret 0x850f
0x0000000000110f24 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xffd5
0x0000000000024f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000471bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000013da54 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], 0 ; add ah, bl ; ret
0x000000000001a54b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x12
0x00000000000ff237 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax - 0x7b], cl ; ret 0x850f
0x000000000001a549 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x12
0x0000000000001540 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000003b10 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001011d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000001542 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000a172 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x000000000000ba1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1e
0x000000000000c16a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2d
0x000000000000796a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x38
0x000000000000b3d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x41
0x0000000000007baa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7a
0x000000000000a06a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7b
0x00000000000071d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x8f
0x000000000000c79a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x94
0x000000000000a802 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9a
0x0000000000003b12 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000f6a12 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000010f1ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0x00000000000fecc2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000bf8c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000000f14a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor eax, eax ; ret
0x00000000000e8791 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rdx ; ret
0x0000000000101074 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000102edb : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x102ec2 ; ret
0x0000000000103863 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x103877 ; ret
0x0000000000104b9a : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x104baf ; ret
0x00000000000dc34c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f0cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000108bd9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdx + 0x10], rax ; ret
0x00000000000ffebc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000defdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x00000000000f857c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000101d64 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x00000000000fec5b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000fec6b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rsp] ; ret
0x00000000000b8d8b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000e7d9b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x00000000000b5ed8 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000b56c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000f6a13 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000001b91c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000fecc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033d06 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000001544 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000a174 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x000000000000ba1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1e
0x000000000000c16c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2d
0x000000000000796c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x38
0x000000000000b3d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x41
0x0000000000007bac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7a
0x000000000000a06c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7b
0x00000000000071d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x8f
0x000000000000c79c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x94
0x000000000000a804 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9a
0x0000000000003b14 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000ea4ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000e8aec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003977c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; mov rsi, r12 ; call rax
0x000000000013d985 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000000000013da41 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, cl ; ret
0x000000000013d915 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; pushfq ; ret 0
0x00000000000f6a14 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000e6d0d : add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103864 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; ret
0x0000000000104b9b : add byte ptr [rax], al ; add byte ptr [rbp + 8], dh ; ret
0x000000000010f1ad : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0x0000000000033a30 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x50], cl ; dec dword ptr [rcx - 0x7b] ; ret 0x850f
0x0000000000102edc : add byte ptr [rax], al ; add byte ptr [rbp - 0x26], dh ; ret
0x0000000000100fa3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3f6af040], al ; ret
0x00000000000faf2d : add byte ptr [rax], al ; add byte ptr [rbp - 0x52], dh ; ret
0x00000000000fa1cb : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x50f
0x00000000000fe924 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0xa2eb
0x000000000010e09a : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfd8a40], al ; ret
0x00000000000348cd : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000028bd2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001f71e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e9c27 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000001c2f5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1f2cfd3f], al ; ret
0x0000000000101630 : add byte ptr [rax], al ; add byte ptr [rbx - 0x72b7fe18], al ; ret 0xeb08
0x00000000000fb21b : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret 0x3ba
0x00000000000e890a : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x3949
0x00000000001052b0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000029b93 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000023bbb : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x8941
0x0000000000101d65 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x000000000010bd52 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; or byte ptr [r8 + 0x39], r9b ; ret
0x00000000001015bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; push rsi ; jo 0x101550 ; ret
0x00000000000eb389 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret 0x4801
0x00000000000a1fe2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000002305b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x1bf
0x000000000001d849 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x00000000000dc935 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4818
0x000000000008c651 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000008d1ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xeb01
0x00000000000f5767 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000000000225c6 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ror byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000003977d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x00000000000ddb5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8148
0x00000000000fb7ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xb0ba
0x00000000000facae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001333c6 : add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x100e
0x000000000010039b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov byte ptr [rdi + 0x68], 0 ; ret
0x00000000000bf8cb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000000f14ab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor eax, eax ; ret
0x00000000000f8c0d : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000f8606 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x0000000000100f94 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000079a1c : add byte ptr [rax], al ; add dword ptr [rbx + 0x50], edx ; call 0x105cc7
0x0000000000099a07 : add byte ptr [rax], al ; add dword ptr [rcx + 0x54], eax ; push rax ; call 0x105cc8
0x0000000000069a6d : add byte ptr [rax], al ; add dword ptr [rcx + 0x55], eax ; push rax ; call 0x105cc8
0x00000000000599d9 : add byte ptr [rax], al ; add dword ptr [rcx + 0x56], eax ; push rax ; call 0x105cc8
0x000000000001c2f6 : add byte ptr [rax], al ; add ecx, 2 ; shl eax, cl ; ret
0x00000000000e7605 : add byte ptr [rax], al ; add qword ptr [rsi + rax], rdx ; ret
0x00000000000f1502 : add byte ptr [rax], al ; add rax, 0x628 ; ret
0x00000000000e896e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000f13cf : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000fd2b0 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000002a1dd : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000e02a3 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000100fee : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000026b6e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000029019 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000003cd : add byte ptr [rax], al ; and byte ptr [rax], al ; ret 0
0x000000000014649e : add byte ptr [rax], al ; and byte ptr [rsi + 1], cl ; add byte ptr [rax + rdx*8], cl ; cld ; jmp qword ptr [rdi]
0x00000000000f6b35 : add byte ptr [rax], al ; bt rdx, rsi ; jae 0xf6b1f ; ret
0x0000000000075eee : add byte ptr [rax], al ; call 0x102194
0x0000000000079a6e : add byte ptr [rax], al ; call 0x105cc4
0x0000000000112475 : add byte ptr [rax], al ; call 0x10e684
0x000000000012d472 : add byte ptr [rax], al ; call 0x1112c659
0x000000000012d6a2 : add byte ptr [rax], al ; call 0x1112c93d
0x000000000012d722 : add byte ptr [rax], al ; call 0x1112c9da
0x000000000012d7a2 : add byte ptr [rax], al ; call 0x1112ca77
0x000000000012e682 : add byte ptr [rax], al ; call 0x1112df25
0x000000000012e872 : add byte ptr [rax], al ; call 0x2112e12e
0x0000000000133b26 : add byte ptr [rax], al ; call 0x22132b39
0x0000000000052323 : add byte ptr [rax], al ; call 0xde5c4
0x000000000007dffa : add byte ptr [rax], al ; call 0xea244
0x000000000010b0a0 : add byte ptr [rax], al ; call 0xf7394
0x00000000001062bb : add byte ptr [rax], al ; call 0xfa1c8
0x0000000000072a13 : add byte ptr [rax], al ; call 0xfec74
0x000000000012d09a : add byte ptr [rax], al ; call 0xffffffffd112c15a
0x000000000012e602 : add byte ptr [rax], al ; call 0xffffffffd112dea4
0x000000000012e812 : add byte ptr [rax], al ; call 0xffffffffd112e0c8
0x000000000012d962 : add byte ptr [rax], al ; call 0xffffffffd512cd07
0x000000000012ecb2 : add byte ptr [rax], al ; call 0xffffffffd512e5a8
0x000000000013f0c6 : add byte ptr [rax], al ; call 0xffffffffd513eb4b
0x0000000000134386 : add byte ptr [rax], al ; call 0xffffffffd71333fd
0x000000000012e32a : add byte ptr [rax], al ; call 0xffffffffe512db10
0x000000000012f0a2 : add byte ptr [rax], al ; call 0xffffffffe512e9b3
0x00000000000de0b2 : add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000038924 : add byte ptr [rax], al ; call rax
0x0000000000140526 : add byte ptr [rax], al ; clc ; adc ebx, edi ; jmp rsp
0x000000000012f03a : add byte ptr [rax], al ; clc ; add al, 0xf9 ; jmp rax
0x0000000000141976 : add byte ptr [rax], al ; clc ; add al, byte ptr [rcx] ; add ah, ah ; xchg eax, esp ; sti ; jmp qword ptr [rcx]
0x000000000012cbe2 : add byte ptr [rax], al ; clc ; cmp ch, bh ; call rax
0x000000000012eb7a : add byte ptr [rax], al ; clc ; leave ; clc ; call rsp
0x000000000012f1c2 : add byte ptr [rax], al ; clc ; or bh, cl ; jmp rax
0x000000000012f242 : add byte ptr [rax], al ; clc ; or edi, ecx ; jmp qword ptr [rax]
0x000000000012dc22 : add byte ptr [rax], al ; clc ; out dx, al ; hlt ; call rax
0x000000000012edd2 : add byte ptr [rax], al ; clc ; out dx, eax ; clc ; jmp rax
0x000000000013d476 : add byte ptr [rax], al ; clc ; ret
0x000000000012e16a : add byte ptr [rax], al ; clc ; sbb bh, dh ; call qword ptr [rax]
0x000000000012f5fa : add byte ptr [rax], al ; clc ; stc ; call rax
0x000000000012d4d2 : add byte ptr [rax], al ; clc ; sti ; int1 ; call qword ptr [rax]
0x000000000012e60a : add byte ptr [rax], al ; clc ; xchg eax, esi ; clc ; jmp rsp
0x0000000000134c56 : add byte ptr [rax], al ; clc ; xor esi, ecx ; jmp rcx
0x0000000000134d22 : add byte ptr [rax], al ; cld ; int1 ; jmp rcx
0x000000000013fe7a : add byte ptr [rax], al ; cld ; out 0, eax ; add byte ptr [rax - 0x35], al ; cli ; jmp rdi
0x0000000000136c62 : add byte ptr [rax], al ; cld ; sal ebx, cl ; call qword ptr [rbx]
0x00000000000e8793 : add byte ptr [rax], al ; cmovae rax, rdx ; ret
0x00000000000facaf : add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000013f932 : add byte ptr [rax], al ; cmp al, 0xaa ; cli ; call rsp
0x00000000001404b6 : add byte ptr [rax], al ; cmp byte ptr [rax], dl ; sti ; jmp qword ptr [rbx]
0x000000000012cef2 : add byte ptr [rax], al ; cmp byte ptr [rbp - 0x10], al ; call rax
0x00000000001443b6 : add byte ptr [rax], al ; cmp byte ptr [rip + 0x2d540001], ch ; cld ; call qword ptr [rsi]
0x00000000000ffd1e : add byte ptr [rax], al ; cmp byte ptr [rsi], 0 ; jne 0xffd38 ; ret
0x0000000000144ee2 : add byte ptr [rax], al ; cmp byte ptr fs:[rcx], al ; add al, bl ; movsxd rdi, esp ; jmp qword ptr [rsi]
0x000000000008df60 : add byte ptr [rax], al ; cmp dword ptr [rax], 0 ; je 0x8df86 ; call 0xea249
0x00000000000be00f : add byte ptr [rax], al ; cmp dword ptr [rax], 0 ; je 0xbe035 ; call 0xea249
0x00000000001059ee : add byte ptr [rax], al ; cmp edi, 1 ; sete al ; ret
0x0000000000100cae : add byte ptr [rax], al ; cmp qword ptr [rdi], -1 ; sete al ; ret
0x0000000000100d14 : add byte ptr [rax], al ; cmp rax, rdx ; ja 0x100d57 ; ret
0x0000000000101e14 : add byte ptr [rax], al ; cmp rax, rdx ; ja 0x101e56 ; ret
0x000000000012e97a : add byte ptr [rax], al ; cwde ; mov ch, 0xf8 ; jmp rsp
0x000000000012da12 : add byte ptr [rax], al ; cwde ; or ah, dh ; call rax
0x0000000000140b56 : add byte ptr [rax], al ; cwde ; pop rdi ; sti ; call qword ptr [rdi]
0x000000000012eaea : add byte ptr [rax], al ; cwde ; ret
0x000000000012eaa2 : add byte ptr [rax], al ; cwde ; ret 0xfff8
0x000000000012e22a : add byte ptr [rax], al ; enter -0x87b, -1 ; push rsp ; ret 0
0x000000000013debe : add byte ptr [rax], al ; enter 0, 0x1c ; and edi, edx ; call qword ptr [rdi]
0x0000000000144346 : add byte ptr [rax], al ; enter 0x12c, 0 ; sub al, 0xfc ; jmp qword ptr [rcx]
0x000000000012effa : add byte ptr [rax], al ; fadd dword ptr [rcx] ; stc ; call qword ptr [rax]
0x000000000012cf32 : add byte ptr [rax], al ; fcomp dword ptr [rcx - 0x10] ; call qword ptr [rax]
0x000000000013f0c2 : add byte ptr [rax], al ; fiadd dword ptr [rax] ; add al, ch ; jns 0x13f0ce ; call rsp
0x0000000000133b5a : add byte ptr [rax], al ; fsub qword ptr [rax + rax] ; add byte ptr [rax], dl ; or al, dh ; jmp qword ptr [rcx]
0x000000000012dac2 : add byte ptr [rax], al ; fsubr dword ptr [rbp - 0xc] ; jmp rax
0x000000000012f4ba : add byte ptr [rax], al ; fsubr dword ptr [rsi] ; stc ; jmp rsp
0x000000000014435a : add byte ptr [rax], al ; fsubr qword ptr [rcx + rax] ; add byte ptr [rax + 0x2c], ah ; cld ; jmp qword ptr [rcx]
0x000000000012d492 : add byte ptr [rax], al ; fsubr st(6) ; int1 ; call qword ptr [rax]
0x000000000012ca3a : add byte ptr [rax], al ; fsubr st(7) ; out dx, al ; jmp rax
0x0000000000131772 : add byte ptr [rax], al ; hlt ; add byte ptr [rax], al ; add al, bl ; test al, 0xee ; call qword ptr [rsi]
0x000000000013fc8a : add byte ptr [rax], al ; hlt ; mov al, 0xfa ; call qword ptr [rax]
0x0000000000137f72 : add byte ptr [rax], al ; hlt ; push 0x58880000 ; cmc ; call rdx
0x0000000000143b62 : add byte ptr [rax], al ; in al, 0x24 ; add dword ptr [rax], eax ; sbb byte ptr [rbx], dl ; cld ; call qword ptr [rbx]
0x0000000000146462 : add byte ptr [rax], al ; in al, 0x4d ; add dword ptr [rax], eax ; fmul st(7) ; cld ; jmp qword ptr [rdi]
0x000000000013253a : add byte ptr [rax], al ; in al, 0x4f ; out dx, eax ; jmp rsi
0x00000000001412fa : add byte ptr [rax], al ; in al, 0x89 ; sti ; call qword ptr [rbx]
0x000000000014276a : add byte ptr [rax], al ; in al, dx ; adc byte ptr [rcx], al ; add byte ptr [rax], dl ; fdivr st(3) ; jmp rsp
0x000000000013fb6a : add byte ptr [rax], al ; in al, dx ; in al, 0 ; add al, ah ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000013d742 : add byte ptr [rax], al ; in al, dx ; loope 0x13d745 ; jmp qword ptr [rdx]
0x0000000000137f32 : add byte ptr [rax], al ; in al, dx ; push rdi ; cmc ; call rdx
0x000000000013e5ea : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; iretd ; add byte ptr [rax], al ; mov al, 0xd2 ; in eax, dx ; call qword ptr [rbx]
0x0000000000133c52 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or al, dh ; call qword ptr [rbx]
0x0000000000138c52 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000101ff0 : add byte ptr [rax], al ; je 0x102005 ; ret
0x00000000001032f5 : add byte ptr [rax], al ; je 0x103305 ; ret
0x00000000000e62e5 : add byte ptr [rax], al ; je 0xe62f5 ; ret
0x00000000000f0f95 : add byte ptr [rax], al ; je 0xf0fa5 ; ret
0x00000000000f142a : add byte ptr [rax], al ; je 0xf147d ; ret
0x00000000000f1596 : add byte ptr [rax], al ; je 0xf15a5 ; ret
0x00000000000f9b11 : add byte ptr [rax], al ; je 0xf9b22 ; neg edi ; mov dword ptr [rsi], edi ; ret
0x00000000001466fa : add byte ptr [rax], al ; jl 0x146757 ; add dword ptr [rax], eax ; adc dl, 0xfc ; call rdi
0x000000000001b6f9 : add byte ptr [rax], al ; jmp 0x1b529
0x0000000000101076 : add byte ptr [rax], al ; jmp rax
0x0000000000102edd : add byte ptr [rax], al ; jne 0x102ec0 ; ret
0x0000000000103865 : add byte ptr [rax], al ; jne 0x103875 ; ret
0x0000000000104b9c : add byte ptr [rax], al ; jne 0x104bad ; ret
0x000000000004c52f : add byte ptr [rax], al ; jne 0x4c58b ; mov rdi, rax ; call 0xe8789
0x000000000009c538 : add byte ptr [rax], al ; jne 0x9c598 ; mov rdi, rax ; call 0xe8789
0x00000000000e4890 : add byte ptr [rax], al ; jne 0xe4878 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6d0e : add byte ptr [rax], al ; jne 0xe6d28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000faf2e : add byte ptr [rax], al ; jne 0xfaee5 ; ret
0x00000000001463ee : add byte ptr [rax], al ; jo 0x146448 ; add dword ptr [rax], eax ; pop rsp ; iretd ; cld ; jmp qword ptr [rdi]
0x000000000012d852 : add byte ptr [rax], al ; js 0x12d860 ; jmp qword ptr [rax]
0x000000000012dbba : add byte ptr [rax], al ; js 0x12db87 ; hlt ; call qword ptr [rax]
0x000000000012dd22 : add byte ptr [rax], al ; js 0x12dd86 ; cmc ; call qword ptr [rax]
0x000000000012e3a2 : add byte ptr [rax], al ; js 0x12e3cd ; clc ; call rsp
0x000000000012ea12 : add byte ptr [rax], al ; js 0x12e9dc ; clc ; call rsp
0x000000000012ec2a : add byte ptr [rax], al ; js 0x12ec0f ; clc ; jmp rax
0x000000000012f3ea : add byte ptr [rax], al ; js 0x12f40a ; stc ; call rsp
0x00000000001412f6 : add byte ptr [rax], al ; js 0x1412ff ; add byte ptr [rax], al ; in al, 0x89 ; sti ; call qword ptr [rbx]
0x000000000010f70e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x1bfb4] ; ret
0x00000000000fc0fe : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2b623] ; ret
0x00000000000fc0ee : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2b62f] ; ret
0x00000000000fc0de : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2b635] ; ret
0x00000000000fc0ce : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2b641] ; ret
0x00000000000fc0be : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2b65a] ; ret
0x00000000000fdd5e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0xeb2ad9] ; ret
0x000000000003143e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0xf8204] ; ret
0x000000000013f32a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; fadd qword ptr [rax] ; add al, al ; mov dl, bh ; jmp qword ptr [rbx]
0x0000000000133e62 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or al, 0xf0 ; jmp qword ptr [rcx]
0x000000000013302a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax], ah ; pushfq ; out dx, eax ; jmp rcx
0x0000000000131cb2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; shr esi, cl ; call qword ptr [rsi]
0x0000000000133e5e : add byte ptr [rax], al ; loopne 0x133e92 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or al, 0xf0 ; jmp qword ptr [rcx]
0x0000000000136c5e : add byte ptr [rax], al ; loopne 0x136cc0 ; add byte ptr [rax], al ; cld ; sal ebx, cl ; call qword ptr [rbx]
0x000000000013dd5e : add byte ptr [rax], al ; loopne 0x13dd31 ; add byte ptr [rax], al ; mov word ptr [rdx], ss ; cli ; call qword ptr [rcx]
0x000000000013fb6e : add byte ptr [rax], al ; loopne 0x13fb25 ; cli ; call qword ptr [rdx]
0x000000000013fc4e : add byte ptr [rax], al ; loopne 0x13fc07 ; cli ; call qword ptr [rdi]
0x0000000000145632 : add byte ptr [rax], al ; mov ah, 0x3f ; add dword ptr [rax], eax ; js 0x1455cd ; cld ; jmp qword ptr [rcx]
0x0000000000131f32 : add byte ptr [rax], al ; mov ah, 8 ; add byte ptr [rax], al ; sub dh, ch ; out dx, al ; jmp rsp
0x0000000000137f2e : add byte ptr [rax], al ; mov al, 0x68 ; add byte ptr [rax], al ; in al, dx ; push rdi ; cmc ; call rdx
0x000000000013fd6e : add byte ptr [rax], al ; mov al, 0xb9 ; cli ; jmp rbx
0x000000000013e5ee : add byte ptr [rax], al ; mov al, 0xd2 ; in eax, dx ; call qword ptr [rbx]
0x000000000013f92e : add byte ptr [rax], al ; mov al, 0xe2 ; add byte ptr [rax], al ; cmp al, 0xaa ; cli ; call rsp
0x0000000000137f76 : add byte ptr [rax], al ; mov byte ptr [rax - 0xb], bl ; call rdx
0x000000000002e29e : add byte ptr [rax], al ; mov byte ptr [rdi + 0x60], 1 ; ret
0x00000000000f5762 : add byte ptr [rax], al ; mov byte ptr [rdi + 0xe1], 1 ; ret
0x000000000012e15a : add byte ptr [rax], al ; mov byte ptr [rdi + rsi*8], dl ; call rax
0x00000000001030ee : add byte ptr [rax], al ; mov byte ptr [rdi], 1 ; mov byte ptr [rdi + 1], 0 ; ret
0x000000000012cbd2 : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; out dx, eax ; jmp qword ptr [rax]
0x000000000012d32a : add byte ptr [rax], al ; mov byte ptr [rdx - 0xf], bh ; jmp rsp
0x00000000000dd0be : add byte ptr [rax], al ; mov byte ptr [rip + 0x480da1], dil ; ret
0x000000000001b893 : add byte ptr [rax], al ; mov byte ptr [rip + 0x52fbf5], 0 ; ret
0x000000000001e7ee : add byte ptr [rax], al ; mov byte ptr [rip + 0x53a8a9], dil ; ret
0x000000000012cd1a : add byte ptr [rax], al ; mov dl, cl ; out dx, eax ; call rax
0x000000000001c1cb : add byte ptr [rax], al ; mov dword ptr [rdi + 0x10], eax ; ret
0x0000000000105d09 : add byte ptr [rax], al ; mov dword ptr [rdi + 8], 0 ; ret
0x00000000000fa8ae : add byte ptr [rax], al ; mov eax, 0x1000 ; ret
0x00000000000f9cce : add byte ptr [rax], al ; mov eax, 0x18 ; syscall ; ret
0x00000000000fa26e : add byte ptr [rax], al ; mov eax, 0x39 ; syscall ; ret
0x00000000000f9d2e : add byte ptr [rax], al ; mov eax, 0x3b ; syscall ; ret
0x0000000000131836 : add byte ptr [rax], al ; mov eax, 0x4000001 ; stosb byte ptr [rdi], al ; out dx, al ; call qword ptr [rdx]
0x00000000000f9cbe : add byte ptr [rax], al ; mov eax, 0x52 ; syscall ; ret
0x00000000000f9cae : add byte ptr [rax], al ; mov eax, 0x57 ; syscall ; ret
0x00000000000fa20e : add byte ptr [rax], al ; mov eax, 0x6e ; syscall ; ret
0x00000000000fa25e : add byte ptr [rax], al ; mov eax, 0x83 ; syscall ; ret
0x0000000000139136 : add byte ptr [rax], al ; mov eax, 0xa400007a ; sbb bh, dh ; call rsp
0x0000000000134736 : add byte ptr [rax], al ; mov eax, 0xc4000030 ; ret
0x0000000000144e36 : add byte ptr [rax], al ; mov eax, 0xc4000137 ; push rdi ; cld ; call qword ptr [rcx]
0x000000000012e24a : add byte ptr [rax], al ; mov eax, 0xdcfff78e ; ret 0
0x0000000000132536 : add byte ptr [rax], al ; mov eax, 0xe400000e ; out dx, eax ; jmp rsi
0x00000000000dc34e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f0cbe : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000faf66 : add byte ptr [rax], al ; mov eax, 4 ; ret
0x00000000000f9c3e : add byte ptr [rax], al ; mov eax, 6 ; syscall ; ret
0x00000000000e743e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x477d82] ; ret
0x00000000000fe72e : add byte ptr [rax], al ; mov eax, dword ptr [rsi] ; cmp dword ptr [rdi], eax ; setb al ; ret
0x00000000000f593f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d4e2 : add byte ptr [rax], al ; mov esi, 0xccf80000 ; stc ; jmp qword ptr [rax]
0x000000000013d43a : add byte ptr [rax], al ; mov esp, 0x200000bd ; ret
0x0000000000144c3a : add byte ptr [rax], al ; mov esp, 0xa0000135 ; cld ; jmp qword ptr [rdi]
0x0000000000132c3a : add byte ptr [rax], al ; mov esp, 0xf0000015 ; mov ebp, esi ; jmp qword ptr [rcx]
0x00000000000ea473 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000000f1698 : add byte ptr [rax], al ; mov qword ptr [rcx + 0x210], rsi ; ret
0x0000000000105d1d : add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], r10 ; ret
0x0000000000101fa5 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xb8], rdx ; ret
0x00000000001003ef : add byte ptr [rax], al ; mov qword ptr [rdi + 0xe8], rdx ; ret
0x0000000000108bdb : add byte ptr [rax], al ; mov qword ptr [rdx + 0x10], rax ; ret
0x00000000000eac9e : add byte ptr [rax], al ; mov qword ptr [rip + 0x474c11], rdi ; ret
0x000000000010251e : add byte ptr [rax], al ; mov qword ptr [rip + 0xeae3b9], rdi ; ret
0x00000000000fe925 : add byte ptr [rax], al ; mov r10, r8 ; jmp 0xfe8d2
0x00000000000fa1cc : add byte ptr [rax], al ; mov r10, r8 ; syscall ; ret
0x0000000000101fb7 : add byte ptr [rax], al ; mov r10, rcx ; syscall ; ret
0x00000000000f2bde : add byte ptr [rax], al ; mov r9, rax ; jmp 0xf2bad
0x00000000000e8338 : add byte ptr [rax], al ; mov rax, qword ptr [rax + rbx*8] ; pop rbx ; ret
0x00000000000df01d : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; jmp rax
0x00000000000ffebe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000001c33e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 0x10] ; ret
0x00000000000fc07e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x00000000000fc05e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x00000000000defde : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x00000000000e4796 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x479c41] ; ret
0x000000000010423e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0xeac6e1] ; ret
0x00000000000f857e : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000001f97e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000104825 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e93e7 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x10] ; call rax
0x00000000000f477d : add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x0000000000059a87 : add byte ptr [rax], al ; mov rdi, r13 ; call 0x105cc7
0x00000000000a99c0 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x105cc7
0x00000000000bc4a6 : add byte ptr [rax], al ; mov rdi, rax ; call 0xe8787
0x0000000000101f2e : add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000000f4d69 : add byte ptr [rax], al ; mov rdi, rbp ; call rdx
0x00000000000e7b91 : add byte ptr [rax], al ; mov rdi, rbp ; xor esi, esi ; call rax
0x0000000000092749 : add byte ptr [rax], al ; mov rdi, rbx ; mov r13, rbx ; call rax
0x00000000000fa7b3 : add byte ptr [rax], al ; mov rdx, rsi ; syscall ; ret
0x000000000010187e : add byte ptr [rax], al ; mov rsi, r13 ; mov rdi, rbx ; call rdx
0x0000000000101d66 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x00000000001010e6 : add byte ptr [rax], al ; mov rsi, r9 ; jmp rax
0x0000000000108b23 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000030e34 : add byte ptr [rax], al ; mov rsi, rbp ; xor edx, edx ; call 0xdd0e9
0x00000000001010a6 : add byte ptr [rax], al ; mov rsi, rcx ; jmp rax
0x000000000013dd62 : add byte ptr [rax], al ; mov word ptr [rdx], ss ; cli ; call qword ptr [rcx]
0x0000000000135722 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000140522 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; clc ; adc ebx, edi ; jmp rsp
0x00000000001376da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff4
0x000000000013913a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb bh, dh ; call rsp
0x00000000000fec5d : add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000010039c : add byte ptr [rax], al ; nop ; mov byte ptr [rdi + 0x68], 0 ; ret
0x0000000000105fed : add byte ptr [rax], al ; nop ; mov eax, 0x1b ; ret
0x00000000000fec6d : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rsp] ; ret
0x00000000000fa7dd : add byte ptr [rax], al ; nop ; movzx eax, byte ptr [rdi + 0x18] ; ret
0x00000000000b8d8d : add byte ptr [rax], al ; nop ; ret
0x00000000000e7d9d : add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x00000000000bc699 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x0000000000101c5b : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rdi, rbp ; call rax
0x000000000010190b : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rdi, rbx ; call rax
0x00000000000b5eda : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000b56ba : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000014498a : add byte ptr [rax], al ; or al, 0x33 ; add dword ptr [rax], eax ; xor byte ptr [rdx - 4], al ; jmp qword ptr [rdx]
0x000000000012f432 : add byte ptr [rax], al ; or byte ptr [rax], ah ; stc ; call rax
0x000000000012f2e2 : add byte ptr [rax], al ; or byte ptr [rax], dl ; stc ; jmp rax
0x000000000012f4d2 : add byte ptr [rax], al ; or byte ptr [rdi], ch ; stc ; jmp qword ptr [rax]
0x000000000012dad2 : add byte ptr [rax], al ; or byte ptr [rdx - 0xc], dh ; jmp qword ptr [rax]
0x000000000012d2e2 : add byte ptr [rax], al ; or byte ptr [rdx - 0xf], dh ; jmp rsp
0x000000000012e42a : add byte ptr [rax], al ; or byte ptr [rsi - 8], ah ; jmp qword ptr [rax]
0x000000000012ca4a : add byte ptr [rax], al ; or cl, dh ; out dx, al ; call qword ptr [rax]
0x000000000013fc86 : add byte ptr [rax], al ; or dh, ah ; add byte ptr [rax], al ; hlt ; mov al, 0xfa ; call qword ptr [rax]
0x0000000000141f7f : add byte ptr [rax], al ; or dword ptr [rcx], eax ; add ah, bl ; stosb byte ptr [rdi], al ; sti ; jmp qword ptr [rax]
0x00000000001459d6 : add byte ptr [rax], al ; pop rax ; add dword ptr [r8], eax ; mov ah, 0x9f ; cld ; jmp rdi
0x000000000012cbfa : add byte ptr [rax], al ; pop rax ; out dx, eax ; call rsp
0x000000000012ead2 : add byte ptr [rax], al ; pop rax ; ret
0x000000000012ea82 : add byte ptr [rax], al ; pop rax ; ret 0xfff8
0x0000000000133ed6 : add byte ptr [rax], al ; pop rax ; sub byte ptr [rax], al ; add ah, al ; or al, 0xf0 ; jmp qword ptr [rcx]
0x00000000000f6a15 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000001b91e : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000028bd3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001f71f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7bcb : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000033cd8 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000348ce : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001464da : add byte ptr [rax], al ; pop rsp ; add qword ptr [rax], r8 ; sar spl, 1 ; jmp qword ptr [rdi]
0x000000000013e0da : add byte ptr [rax], al ; pop rsp ; retf 0 ; push rax ; sub bh, dl ; call qword ptr [rsi]
0x000000000012e25a : add byte ptr [rax], al ; push 0x20fff793 ; ret
0x00000000001420ce : add byte ptr [rax], al ; push rax ; or al, byte ptr [rcx] ; add byte ptr [rcx + rsi*4], ch ; sti ; jmp qword ptr [rdx]
0x000000000013e0de : add byte ptr [rax], al ; push rax ; sub bh, dl ; call qword ptr [rsi]
0x000000000013d91a : add byte ptr [rax], al ; pushfq ; ret 0
0x0000000000001546 : add byte ptr [rax], al ; ret
0x000000000013d8c2 : add byte ptr [rax], al ; ret 0
0x000000000000a176 : add byte ptr [rax], al ; ret 0x15
0x000000000000ba1e : add byte ptr [rax], al ; ret 0x1e
0x000000000000c16e : add byte ptr [rax], al ; ret 0x2d
0x000000000000796e : add byte ptr [rax], al ; ret 0x38
0x000000000000b3d6 : add byte ptr [rax], al ; ret 0x41
0x0000000000007bae : add byte ptr [rax], al ; ret 0x7a
0x000000000000a06e : add byte ptr [rax], al ; ret 0x7b
0x00000000000071d6 : add byte ptr [rax], al ; ret 0x8f
0x000000000000c79e : add byte ptr [rax], al ; ret 0x94
0x000000000000a806 : add byte ptr [rax], al ; ret 0x9a
0x000000000012ea7a : add byte ptr [rax], al ; ret 0xfff8
0x0000000000003b16 : add byte ptr [rax], al ; ret 1
0x00000000000010aa : add byte ptr [rax], al ; ret 2
0x00000000000012d6 : add byte ptr [rax], al ; ret 3
0x0000000000001a3e : add byte ptr [rax], al ; ret 6
0x000000000013fe7e : add byte ptr [rax], al ; retf ; cli ; jmp rdi
0x000000000013d73e : add byte ptr [rax], al ; rol al, 0 ; add ah, ch ; loope 0x13d749 ; jmp qword ptr [rdx]
0x000000000012d13a : add byte ptr [rax], al ; sal rax, cl ; jmp qword ptr [rax]
0x000000000013d44e : add byte ptr [rax], al ; sar byte ptr [rbp - 0x3cd40000], 1 ; stc ; jmp rcx
0x000000000013dec2 : add byte ptr [rax], al ; sbb al, 0x23 ; cli ; call qword ptr [rdi]
0x000000000012dc2a : add byte ptr [rax], al ; sbb bh, ch ; hlt ; jmp rsp
0x000000000012ecca : add byte ptr [rax], al ; sbb bl, ch ; clc ; call qword ptr [rax]
0x000000000012cad2 : add byte ptr [rax], al ; sbb cl, bh ; out dx, al ; call rsp
0x00000000001431ca : add byte ptr [rax], al ; sbb r8, qword ptr [rcx] ; add byte ptr [rax - 0xc], dl ; sti ; call rsi
0x00000000000f9d66 : add byte ptr [rax], al ; sete al ; add rsp, 0x20 ; ret
0x000000000012caea : add byte ptr [rax], al ; stc ; out dx, al ; call qword ptr [rax]
0x000000000013d8be : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000143daa : add byte ptr [rax], al ; sub al, 0x27 ; add dword ptr [rax], eax ; sbb esp, edi ; jmp rbx
0x000000000013d452 : add byte ptr [rax], al ; sub al, 0xc3 ; stc ; jmp rcx
0x000000000012d8b2 : add byte ptr [rax], al ; sub byte ptr [rax], bh ; call rax
0x000000000012dfb2 : add byte ptr [rax], al ; sub byte ptr [rbp - 0xa], cl ; call rax
0x000000000012da82 : add byte ptr [rax], al ; sub byte ptr [rdx - 0xc], dl ; call rax
0x000000000012dcda : add byte ptr [rax], al ; sub byte ptr [rdx], bh ; cmc ; call rax
0x0000000000131f36 : add byte ptr [rax], al ; sub dh, ch ; out dx, al ; jmp rsp
0x000000000012eb92 : add byte ptr [rax], al ; sub dl, cl ; clc ; call qword ptr [rax]
0x000000000001f02e : add byte ptr [rax], al ; sub rsi, 0x10 ; mov qword ptr [rdi], rsi ; ret
0x00000000000faf1b : add byte ptr [rax], al ; syscall ; mov eax, 1 ; ret
0x00000000000fac35 : add byte ptr [rax], al ; syscall ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000f9b53 : add byte ptr [rax], al ; syscall ; ret
0x000000000012f402 : add byte ptr [rax], al ; test al, 0x17 ; stc ; call qword ptr [rax]
0x000000000012e852 : add byte ptr [rax], al ; test al, 0xb0 ; clc ; call rax
0x000000000012ea2a : add byte ptr [rax], al ; test al, 0xc1 ; clc ; call qword ptr [rax]
0x0000000000141926 : add byte ptr [rax], al ; test al, 2 ; add dword ptr [rax], eax ; mov ah, 0x94 ; sti ; jmp qword ptr [rbx]
0x000000000010e09b : add byte ptr [rax], al ; test eax, eax ; jne 0x10e0aa ; ret
0x0000000000028356 : add byte ptr [rax], al ; test eax, eax ; jne 0x2836f ; pop rbx ; ret
0x0000000000100fa4 : add byte ptr [rax], al ; test eax, eax ; setne al ; ret
0x00000000001006e8 : add byte ptr [rax], al ; test rax, rax ; je 0x1006ff ; jmp rax
0x0000000000105d4e : add byte ptr [rax], al ; test rcx, rcx ; jne 0x105d68 ; ret
0x0000000000105e6e : add byte ptr [rax], al ; test rcx, rcx ; jne 0x105e88 ; ret
0x00000000001449b2 : add byte ptr [rax], al ; xor al, 0x33 ; add dword ptr [rax], eax ; cld ; call qword ptr [rdx]
0x00000000001463b2 : add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; sub bh, cl ; cld ; jmp qword ptr [rdi]
0x00000000001423b2 : add byte ptr [rax], al ; xor al, 0xd ; add dword ptr [rax], eax ; mov bl, al ; sti ; call qword ptr [rsi]
0x00000000001404b2 : add byte ptr [rax], al ; xor al, 0xee ; add byte ptr [rax], al ; cmp byte ptr [rax], dl ; sti ; jmp qword ptr [rbx]
0x00000000001425ae : add byte ptr [rax], al ; xor byte ptr [rdi], cl ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; sar ebx, 1 ; jmp qword ptr [rcx]
0x0000000000131cae : add byte ptr [rax], al ; xor byte ptr [rsi], al ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; shr esi, cl ; call qword ptr [rsi]
0x00000000000e8ade : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000031196 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000001e1be : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000010230c : add byte ptr [rax], al ; xor edi, edi ; call rax
0x000000000003977e : add byte ptr [rax], al ; xor edx, edx ; mov rsi, r12 ; call rax
0x00000000000dc33e : add byte ptr [rax], al ; xor esi, esi ; call qword ptr [rax]
0x00000000000e7b0f : add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000000e77a2 : add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x000000000001f94e : add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call 0x1bb69
0x00000000000e796d : add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000001404b7 : add byte ptr [rax], bh ; adc bl, bh ; jmp qword ptr [rbx]
0x000000000013101b : add byte ptr [rax], bh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rax
0x000000000012f9eb : add byte ptr [rax], bh ; idiv edx ; call rsp
0x0000000000130dbb : add byte ptr [rax], bh ; js 0x130dc0 ; jmp rsp
0x000000000012eacb : add byte ptr [rax], bh ; ret
0x000000000012ea73 : add byte ptr [rax], bh ; ret 0xfff8
0x000000000012f68b : add byte ptr [rax], bh ; stc ; call qword ptr [rax]
0x000000000012fbab : add byte ptr [rax], bh ; sti ; jmp rax
0x00000000001443b7 : add byte ptr [rax], bh ; sub eax, 0x2d540001 ; cld ; call qword ptr [rsi]
0x000000000012cea3 : add byte ptr [rax], bh ; xor dh, al ; call rsp
0x00000000001312bb : add byte ptr [rax], bl ; adc edi, esi ; jmp rax
0x0000000000143b67 : add byte ptr [rax], bl ; adc edi, esp ; call qword ptr [rbx]
0x0000000000130673 : add byte ptr [rax], bl ; fdivr st(4) ; jmp rsp
0x000000000012d81b : add byte ptr [rax], bl ; in al, 0xf2 ; call qword ptr [rax]
0x000000000012d013 : add byte ptr [rax], bl ; jl 0x12d00b ; call rax
0x000000000012cca3 : add byte ptr [rax], bl ; mov bl, 0xef ; call rax
0x00000000001304bb : add byte ptr [rax], bl ; mov dh, 0xfc ; call rax
0x0000000000130fe3 : add byte ptr [rax], bl ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x000000000012dc2b : add byte ptr [rax], bl ; out dx, eax ; hlt ; jmp rsp
0x000000000012f79b : add byte ptr [rax], bl ; push -7 ; jmp rsp
0x0000000000131113 : add byte ptr [rax], bl ; ret
0x000000000012ea63 : add byte ptr [rax], bl ; ret 0xfff8
0x000000000012cad3 : add byte ptr [rax], bl ; stc ; out dx, al ; call rsp
0x00000000001301db : add byte ptr [rax], bl ; sti ; call rsp
0x000000000012e4eb : add byte ptr [rax], bl ; xchg eax, edx ; clc ; jmp rsp
0x0000000000145ba7 : add byte ptr [rax], ch ; add dword ptr [r8], r8d ; mov ah, 0xa5 ; cld ; jmp qword ptr [rsi]
0x000000000012d8b3 : add byte ptr [rax], ch ; cmp bl, dh ; call rax
0x000000000012dcdb : add byte ptr [rax], ch ; cmp dh, ch ; call rax
0x00000000001463b7 : add byte ptr [rax], ch ; iretd ; cld ; jmp qword ptr [rdi]
0x0000000000130db3 : add byte ptr [rax], ch ; js 0x130db8 ; call rax
0x000000000012ccab : add byte ptr [rax], ch ; mov bl, 0xef ; jmp rsp
0x0000000000133257 : add byte ptr [rax], ch ; mov cl, 0xef ; jmp rsp
0x0000000000131093 : add byte ptr [rax], ch ; mov dl, 0xfd ; jmp qword ptr [rax]
0x0000000000131f37 : add byte ptr [rax], ch ; out dx, al ; out dx, al ; jmp rsp
0x0000000000130c53 : add byte ptr [rax], ch ; pop rsp ; std ; call rax
0x000000000012da83 : add byte ptr [rax], ch ; push rdx ; hlt ; call rax
0x000000000012e26b : add byte ptr [rax], ch ; pushfq ; idiv edi ; ret
0x000000000012eac3 : add byte ptr [rax], ch ; ret
0x000000000012ea6b : add byte ptr [rax], ch ; ret 0xfff8
0x00000000001310fb : add byte ptr [rax], ch ; ret 0xfffd
0x000000000013117b : add byte ptr [rax], ch ; sar ch, 1 ; jmp rax
0x000000000012e623 : add byte ptr [rax], ch ; xchg eax, edi ; clc ; jmp qword ptr [rax]
0x000000000012e5a3 : add byte ptr [rax], ch ; xchg eax, esi ; clc ; jmp rax
0x000000000012f2e3 : add byte ptr [rax], cl ; adc cl, bh ; jmp rax
0x000000000012f433 : add byte ptr [rax], cl ; and cl, bh ; call rax
0x000000000012e42b : add byte ptr [rax], cl ; clc ; jmp qword ptr [rax]
0x000000000013066b : add byte ptr [rax], cl ; fdivr st(4) ; call rax
0x000000000012ca4b : add byte ptr [rax], cl ; int1 ; out dx, al ; call qword ptr [rax]
0x000000000012d2e3 : add byte ptr [rax], cl ; jb 0x12d2dc ; jmp rsp
0x000000000012dad3 : add byte ptr [rax], cl ; jb 0x12dacf ; jmp qword ptr [rax]
0x000000000012f8f3 : add byte ptr [rax], cl ; jle 0x12f8f4 ; call qword ptr [rax]
0x00000000001304db : add byte ptr [rax], cl ; mov bh, 0xfc ; jmp qword ptr [rax]
0x0000000000130913 : add byte ptr [rax], cl ; or ch, bh ; call rsp
0x000000000013fc87 : add byte ptr [rax], cl ; out 0, al ; add ah, dh ; mov al, 0xfa ; call qword ptr [rax]
0x0000000000130c1b : add byte ptr [rax], cl ; pop rax ; std ; call rax
0x000000000012f793 : add byte ptr [rax], cl ; push -7 ; call rax
0x000000000013d987 : add byte ptr [rax], cl ; ret
0x000000000012e2e3 : add byte ptr [rax], cl ; ret 0xfff7
0x000000000012ea5b : add byte ptr [rax], cl ; ret 0xfff8
0x00000000001310f3 : add byte ptr [rax], cl ; ret 0xfffd
0x00000000001305f3 : add byte ptr [rax], cl ; sar esp, cl ; call qword ptr [rax]
0x000000000012f603 : add byte ptr [rax], cl ; stc ; jmp rsp
0x0000000000130e7b : add byte ptr [rax], cl ; test ch, bh ; call qword ptr [rax]
0x000000000014498f : add byte ptr [rax], dh ; cld ; jmp qword ptr [rdx]
0x0000000000004a4f : add byte ptr [rax], dh ; ret
0x00000000001425af : add byte ptr [rax], dh ; sgdt ptr [rax] ; lodsb al, byte ptr [rsi] ; sar ebx, 1 ; jmp qword ptr [rcx]
0x0000000000140daf : add byte ptr [rax], dh ; test dword ptr [rax], 0xfb686c00 ; call rcx
0x000000000013da43 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, cl ; ret
0x000000000013d917 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pushfq ; ret 0
0x00000000000fa8b1 : add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x00000000000fe724 : add byte ptr [rax], dl ; add byte ptr [rbp - 0x19], dh ; ret
0x000000000014276f : add byte ptr [rax], dl ; fdivr st(3) ; jmp rsp
0x000000000013908f : add byte ptr [rax], dl ; jp 0x13909b ; add ah, bl ; add bh, dh ; jmp rcx
0x0000000000133b5f : add byte ptr [rax], dl ; or al, dh ; jmp qword ptr [rcx]
0x000000000013184f : add byte ptr [rax], dl ; stosb byte ptr [rdi], al ; out dx, al ; call qword ptr [rdx]
0x0000000000100fed : add byte ptr [rax], r8b ; add rsp, 8 ; jmp rax
0x00000000000b0d65 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001030ad : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x00000000000ffd1d : add byte ptr [rax], r8b ; cmp byte ptr [rsi], 0 ; jne 0xffd39 ; ret
0x00000000001059ed : add byte ptr [rax], r8b ; cmp edi, 1 ; sete al ; ret
0x000000000012ca39 : add byte ptr [rax], r8b ; fsubr st(7) ; out dx, al ; jmp rax
0x000000000010111d : add byte ptr [rax], r8b ; jmp rax
0x000000000002e29d : add byte ptr [rax], r8b ; mov byte ptr [rdi + 0x60], 1 ; ret
0x00000000000fa8ad : add byte ptr [rax], r8b ; mov eax, 0x1000 ; ret
0x0000000000106d65 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00000000000faf65 : add byte ptr [rax], r8b ; mov eax, 4 ; ret
0x00000000000fc07d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x000000000001f97d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000bc4a5 : add byte ptr [rax], r8b ; mov rdi, rax ; call 0xe8788
0x0000000000101f2d : add byte ptr [rax], r8b ; mov rdi, rbp ; call rax
0x000000000010187d : add byte ptr [rax], r8b ; mov rsi, r13 ; mov rdi, rbx ; call rdx
0x00000000001010e5 : add byte ptr [rax], r8b ; mov rsi, r9 ; jmp rax
0x00000000001010a5 : add byte ptr [rax], r8b ; mov rsi, rcx ; jmp rax
0x000000000012ca49 : add byte ptr [rax], r8b ; or cl, dh ; out dx, al ; call qword ptr [rax]
0x00000000000e8635 : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000000313b5 : add byte ptr [rax], r8b ; ret
0x000000000012cad1 : add byte ptr [rax], r8b ; sbb cl, bh ; out dx, al ; call rsp
0x000000000012cae9 : add byte ptr [rax], r8b ; stc ; out dx, al ; call qword ptr [rax]
0x00000000000e8add : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000031195 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x000000000001e1bd : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000028b36 : add byte ptr [rbp + 0x17], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9aae : add byte ptr [rbp + 0x31], al ; leave ; xor r8d, r8d ; call 0x105cc9
0x00000000000fa1ea : add byte ptr [rbp + 0x31], al ; ror byte ptr [rbp - 0x77], 0xc2 ; syscall ; ret
0x00000000000f3d84 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x7f], cl ; ret
0x00000000000b3de5 : add byte ptr [rbp + 0x38], dh ; call rax
0x00000000000f6a16 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000e6a4e : add byte ptr [rbp + 0x480d74c0], al ; add esp, 8 ; ret
0x000000000004c530 : add byte ptr [rbp + 0x4f], dh ; mov rdi, rax ; call 0xe8788
0x000000000009c539 : add byte ptr [rbp + 0x53], dh ; mov rdi, rax ; call 0xe8788
0x0000000000028357 : add byte ptr [rbp + 0x5b0c75c0], al ; ret
0x0000000000033ce3 : add byte ptr [rbp + 0xa], dh ; ret
0x00000000000b0d7b : add byte ptr [rbp + 0xa], dh ; xor eax, eax ; pop rbx ; ret
0x00000000000ffd22 : add byte ptr [rbp + 0xb], dh ; ret
0x00000000000fd251 : add byte ptr [rbp + 0xc], dh ; add rsp, 0x28 ; ret
0x00000000000e6d0f : add byte ptr [rbp + 0xe], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0cdb : add byte ptr [rbp + 2], dh ; ret
0x000000000003402a : add byte ptr [rbp + 3], dh ; ret
0x000000000010b7b7 : add byte ptr [rbp + 6], dh ; pop rbx ; ret
0x00000000000e563e : add byte ptr [rbp + 7], dh ; ret
0x000000000010dccd : add byte ptr [rbp + 8], dh ; mov eax, ebx ; pop rbx ; ret
0x00000000000e551d : add byte ptr [rbp + 8], dh ; ret
0x0000000000107c60 : add byte ptr [rbp + rbp + 0x48], dh ; add esp, 8 ; ret
0x00000000001443bb : add byte ptr [rbp + rbp - 4], dl ; call qword ptr [rsi]
0x00000000000e3eb1 : add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0x00000000000659c9 : add byte ptr [rbp + rcx*4 + 0x35], cl ; ret
0x0000000000033a32 : add byte ptr [rbp + rcx*4 + 0x50], cl ; dec dword ptr [rcx - 0x7b] ; ret 0x850f
0x0000000000132c3b : add byte ptr [rbp + rdx - 0x74100000], bh ; out dx, al ; jmp qword ptr [rcx]
0x0000000000144c3b : add byte ptr [rbp + rsi + 0x4ca00001], bh ; cld ; jmp qword ptr [rdi]
0x000000000007b473 : add byte ptr [rbp - 0x17818b40], al ; ret
0x0000000000044573 : add byte ptr [rbp - 0x17e48b40], al ; ret
0x00000000000fe726 : add byte ptr [rbp - 0x19], dh ; ret
0x0000000000001f44 : add byte ptr [rbp - 0x1d], dl ; sar byte ptr [rax - 0x44], cl ; in al, dx ; call rdi
0x00000000000e4891 : add byte ptr [rbp - 0x24], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102ede : add byte ptr [rbp - 0x26], dh ; ret
0x000000000010dde9 : add byte ptr [rbp - 0x3f60f040], al ; ret
0x0000000000100fa5 : add byte ptr [rbp - 0x3f6af040], al ; ret
0x00000000000faf2f : add byte ptr [rbp - 0x52], dh ; ret
0x000000000003339e : add byte ptr [rbp - 0x77], cl ; ret
0x00000000000fa1cd : add byte ptr [rbp - 0x77], cl ; ret 0x50f
0x00000000000fe926 : add byte ptr [rbp - 0x77], cl ; ret 0xa2eb
0x00000000000291d9 : add byte ptr [rbp - 0x77], cl ; ret 0xc149
0x000000000001c95b : add byte ptr [rbp - 0x77], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x870f
0x00000000000e9266 : add byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], 0x95 ; ret 0x394d
0x00000000000b0df7 : add byte ptr [rbp - 0x7c], al ; in al, 0x74 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000111119 : add byte ptr [rbp - 0x7cb7feb6], cl ; ret 0x4802
0x00000000000ff93f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000f80e7 : add byte ptr [rbp - 0xa], dh ; ret
0x00000000000f69b5 : add byte ptr [rbp - 0xcf98a0a], al ; ret
0x00000000000e69f5 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000010e09c : add byte ptr [rbp - 0xcfd8a40], al ; ret
0x00000000000f807e : add byte ptr [rbp - 0xd], dh ; ret
0x0000000000116e98 : add byte ptr [rbp - 0xf], dl ; call rax
0x000000000008df61 : add byte ptr [rbx + 0x16740038], al ; call 0xea248
0x00000000000fae2f : add byte ptr [rbx + 0x27508e6], al ; ret
0x00000000000348cf : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000d13df : add byte ptr [rbx + 0x4887ce05], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db448 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000028bd4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001f720 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e7bcc : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007b471 : add byte ptr [rbx + 0x74c08500], cl ; jle 0x7b469 ; ret
0x000000000007dd71 : add byte ptr [rbx + 0x74c08500], cl ; jle 0x7dd69 ; ret
0x0000000000080671 : add byte ptr [rbx + 0x74c08500], cl ; jle 0x80669 ; ret
0x0000000000044571 : add byte ptr [rbx + 0x74c08500], cl ; sbb ebp, eax ; ret
0x000000000004f872 : add byte ptr [rbx + 0x74c98508], cl ; sbb ebp, eax ; ret 0x9a9
0x0000000000067b71 : add byte ptr [rbx + 0x74ff8538], cl ; sbb ebp, eax ; ret
0x00000000000ddc72 : add byte ptr [rbx + 0x74ff8538], cl ; sbb ebp, eax ; ret 0xc5
0x00000000000d6216 : add byte ptr [rbx + 0xfc08503], cl ; test ah, dl ; ret 0xffff
0x00000000000d61f2 : add byte ptr [rbx + 0xfc08503], cl ; test byte ptr [rdi], ch ; ret
0x00000000000d625e : add byte ptr [rbx + 0xfc08503], cl ; test byte ptr [rsi], bl ; ret 0xffff
0x00000000000d61aa : add byte ptr [rbx + 0xfc08503], cl ; test ch, ah ; ret
0x00000000000e0515 : add byte ptr [rbx + 9], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000013d453 : add byte ptr [rbx + rax*8], ch ; stc ; jmp rcx
0x00000000001431cb : add byte ptr [rbx + rbx + 1], cl ; add byte ptr [rax - 0xc], dl ; sti ; call rsi
0x00000000000a7775 : add byte ptr [rbx + rdx - 0x18], dh ; ret
0x000000000014498b : add byte ptr [rbx + rsi], cl ; add dword ptr [rax], eax ; xor byte ptr [rdx - 4], al ; jmp qword ptr [rdx]
0x00000000001449b3 : add byte ptr [rbx + rsi], dh ; add dword ptr [rax], eax ; cld ; call qword ptr [rdx]
0x000000000001c2f7 : add byte ptr [rbx - 0x1f2cfd3f], al ; ret
0x00000000000e47a6 : add byte ptr [rbx - 0x3f7aa7c0], cl ; jne 0xe47b9 ; ret
0x00000000000e47f6 : add byte ptr [rbx - 0x3f7aa7c0], cl ; jne 0xe4809 ; ret
0x0000000000033696 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x336a9 ; ret
0x0000000000101632 : add byte ptr [rbx - 0x72b7fe18], al ; ret 0xeb08
0x0000000000105fc8 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000001063c6 : add byte ptr [rbx - 9], bl ; fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000000a484f : add byte ptr [rbx], bh ; add cl, byte ptr [rdi] ; ret
0x000000000013dec3 : add byte ptr [rbx], bl ; cli ; call qword ptr [rdi]
0x00000000000e3776 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb21d : add byte ptr [rcx + 0x21], cl ; ret 0x3ba
0x00000000000e890c : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x3949
0x00000000000f5940 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000ccbf3 : add byte ptr [rcx + 0x58d48f1], cl ; ret
0x00000000000c6ff3 : add byte ptr [rcx + 0x58d48f9], cl ; ret
0x00000000000bfd11 : add byte ptr [rcx + 0x5e], bl ; jmp 0xbfcdd
0x0000000000029b95 : add byte ptr [rcx + 1], cl ; ret
0x0000000000023bbd : add byte ptr [rcx + 1], cl ; ret 0x8941
0x00000000000f2a61 : add byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000131823 : add byte ptr [rcx + rax - 0x56080000], ah ; out dx, al ; call qword ptr [rdx]
0x000000000013302b : add byte ptr [rcx + rbx - 0x63e00000], ch ; out dx, eax ; jmp rcx
0x000000000001c2a4 : add byte ptr [rcx + rcx + 0x48], dh ; add eax, ebx ; pop rbx ; ret
0x0000000000059a88 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x105cc6
0x000000000010187f : add byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, rbx ; call rdx
0x00000000000395eb : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; call rax
0x00000000000a91d6 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000927ed : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov r13, r12 ; call rax
0x00000000000927ec : add byte ptr [rcx + rcx*4 - 0x19], r9b ; mov r13, r12 ; call rax
0x00000000001010e7 : add byte ptr [rcx + rcx*4 - 0x32], cl ; jmp rax
0x0000000000101d67 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000389ae : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, rbx ; call 0x34c29
0x00000000000a99c1 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x105cc6
0x00000000000389d8 : add byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r14 ; call 0x34c29
0x0000000000101a3f : add byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, rbx ; call rax
0x00000000000a238f : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r15 ; call 0xde5c9
0x0000000000141003 : add byte ptr [rcx + rdi*8 + 0x7e680000], al ; sti ; jmp qword ptr [rdx]
0x00000000001420d3 : add byte ptr [rcx + rsi*4], ch ; sti ; jmp qword ptr [rdx]
0x000000000008d7af : add byte ptr [rcx - 0x1976b316], cl ; mov rdi, rbx ; call rax
0x00000000001423b3 : add byte ptr [rcx - 0x3c77ffff], dh ; sti ; call qword ptr [rsi]
0x000000000002dc28 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000000ab089 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 - 0x77] ; ret 0xc148
0x000000000010bd54 : add byte ptr [rcx - 0x73], cl ; or byte ptr [r8 + 0x39], r9b ; ret
0x0000000000022cef : add byte ptr [rcx - 0x73], cl ; push rsi ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000001015bf : add byte ptr [rcx - 0x75], al ; push rsi ; jo 0x10154e ; ret
0x00000000000ec19f : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 + 0x39], r9b ; ret 0x840f
0x0000000000028f17 : add byte ptr [rcx - 0x75], cl ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000eb09a : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret 0x4801
0x00000000000a1fe4 : add byte ptr [rcx - 0x77], al ; ret
0x000000000003334f : add byte ptr [rcx - 0x77], cl ; ret
0x000000000002305d : add byte ptr [rcx - 0x77], cl ; ret 0x1bf
0x00000000000a67ff : add byte ptr [rcx - 0x77], cl ; ret 0x2949
0x00000000000f44c0 : add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x000000000001d84b : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x00000000000f188e : add byte ptr [rcx - 0x77], cl ; ret 0xc931
0x00000000000287d5 : add byte ptr [rcx - 0x77], cl ; ret 0xf66
0x00000000000dc937 : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4818
0x0000000000071437 : add byte ptr [rcx - 0x7d], cl ; inc byte ptr [rax + 0x77] ; ret 0x8948
0x000000000008bf27 : add byte ptr [rcx - 0x7d], cl ; inc byte ptr [rax + 0x77] ; ret 0x894c
0x0000000000093127 : add byte ptr [rcx - 0x7d], cl ; inc dword ptr [rax + 0x77] ; ret 0x894c
0x0000000000087a88 : add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000f3e63 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000f84d6 : add byte ptr [rcx - 0x7d], cl ; ret 0x4301
0x0000000000029211 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000232ff : add byte ptr [rcx - 0x7d], cl ; ret 0x4d10
0x000000000008d1ef : add byte ptr [rcx - 0x7d], cl ; ret 0xeb01
0x0000000000000363 : add byte ptr [rcx - 0x7ff7fd6c], ah ; ret 0x24c
0x00000000000b310f : add byte ptr [rcx - 0x80], al ; cmp al, 2 ; add byte ptr [rax - 0x77], cl ; ret 0x1674
0x00000000000b1c87 : add byte ptr [rcx - 0x80], al ; cmp al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0x840f
0x00000000001463b3 : add byte ptr [rcx*2 - 0x30d7ffff], dh ; cld ; jmp qword ptr [rdi]
0x000000000012265f : add byte ptr [rcx], ah ; sti ; jmp qword ptr [rax]
0x00000000000e2ab6 : add byte ptr [rcx], al ; add al, ch ; ret 0x184
0x0000000000079a6c : add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x105cc6
0x0000000000059a85 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdi, r13 ; call 0x105cc9
0x00000000000a99be : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x105cc9
0x00000000000282ce : add byte ptr [rcx], al ; add rsp, 0x28 ; ret
0x0000000000100e10 : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001b9ad : add byte ptr [rcx], al ; pop rbp ; ret
0x00000000001007f1 : add byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099a08 : add byte ptr [rcx], al ; push r12 ; push rax ; call 0x105cc7
0x0000000000069a6e : add byte ptr [rcx], al ; push r13 ; push rax ; call 0x105cc7
0x00000000000599da : add byte ptr [rcx], al ; push r14 ; push rax ; call 0x105cc7
0x0000000000079a1d : add byte ptr [rcx], al ; push rbx ; push rax ; call 0x105cc6
0x00000000000f5769 : add byte ptr [rcx], al ; ret
0x00000000000225c8 : add byte ptr [rcx], al ; ror byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000010ece6 : add byte ptr [rcx], dh ; rol byte ptr [rcx + rcx*4 - 0x3e], 0xe8 ; jmp rax
0x000000000003977f : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x0000000000100aa6 : add byte ptr [rcx], dh ; shr al, 0xa2 ; ret 0xffff
0x00000000000e796e : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000001f94f : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call 0x1bb68
0x00000000000e62e6 : add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000082a63 : add byte ptr [rdi + rcx - 0x4a], al ; jo 0x82a92 ; call 0xfec78
0x00000000001463f3 : add byte ptr [rdi + rcx*8 - 4], bl ; jmp qword ptr [rdi]
0x0000000000145633 : add byte ptr [rdi + rdi - 0x7587ffff], dh ; cld ; jmp qword ptr [rcx]
0x0000000000143dab : add byte ptr [rdi], ch ; add dword ptr [rax], eax ; sbb esp, edi ; jmp rbx
0x00000000000fac36 : add byte ptr [rdi], cl ; add eax, 0xf85d8b48 ; leave ; ret
0x00000000000a405c : add byte ptr [rdi], cl ; mov dh, 0x46 ; add al, 0x89 ; ret 0xe283
0x00000000000ddb5f : add byte ptr [rdi], cl ; ret 0x8148
0x00000000000fb7bc : add byte ptr [rdi], cl ; ret 0xb0ba
0x00000000000facb0 : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000000ed4df : add byte ptr [rdi], cl ; test byte ptr [rdx], al ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000cc644 : add byte ptr [rdi], cl ; xchg eax, esi ; ror dword ptr [rdi], -0x79 ; push rsp ; ret
0x00000000000cbb40 : add byte ptr [rdi], cl ; xchg eax, esi ; ror dword ptr [rdi], -0x79 ; ret 0xca
0x00000000000cc5d2 : add byte ptr [rdi], cl ; xchg eax, esi ; ror dword ptr [rdi], -0x79 ; stosd dword ptr [rdi], eax ; ret
0x00000000000cc758 : add byte ptr [rdi], cl ; xchg eax, esi ; ror dword ptr [rdi], -0x79 ; xchg eax, ecx ; ret 0
0x00000000000ff4d4 : add byte ptr [rdx + 0x63], cl ; add al, 0xb1 ; add rax, rcx ; jmp rax
0x00000000000ff4a0 : add byte ptr [rdx + 0x63], cl ; add al, 0xb2 ; add rax, rdx ; jmp rax
0x00000000000facab : add byte ptr [rdx + 2], bh ; cmove eax, edx ; ret
0x000000000013183b : add byte ptr [rdx + rbp*4], al ; out dx, al ; call qword ptr [rdx]
0x000000000013f933 : add byte ptr [rdx + rbp*4], bh ; cli ; call rsp
0x000000000013f0c3 : add byte ptr [rdx + rbx*8], al ; add al, ch ; jns 0x13f0cd ; call rsp
0x0000000000033cb3 : add byte ptr [rdx + rcx - 0xd], dh ; ret
0x00000000000f142b : add byte ptr [rdx + rcx*2 - 0xd], dh ; ret
0x000000000013e0db : add byte ptr [rdx + rcx*8], bl ; add byte ptr [rax + 0x2a], dl ; cli ; call qword ptr [rsi]
0x0000000000000800 : add byte ptr [rdx - 0x18], al ; or byte ptr [rax + rax], al ; ret
0x000000000001c2a2 : add byte ptr [rdx], al ; add byte ptr [rcx + rcx + 0x48], dh ; add eax, ebx ; pop rbx ; ret
0x000000000001c2cd : add byte ptr [rdx], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x000000000000034e : add byte ptr [rdx], al ; add cl, byte ptr [rax] ; ret 0xe408
0x00000000001333c8 : add byte ptr [rdx], al ; ret 0x100e
0x00000000001230f4 : add byte ptr [rip + 0x34f0fffc], dh ; cld ; jmp rax
0x00000000000fdd21 : add byte ptr [rip + 0xfffff], bh ; je 0xfdd39 ; ret
0x000000000001c2cf : add byte ptr [rsi + rax - 0xd], dh ; ret
0x0000000000140523 : add byte ptr [rsi + rbp*8 + 0x11f80000], ah ; sti ; jmp rsp
0x00000000001404b3 : add byte ptr [rsi + rbp*8], dh ; add byte ptr [rax], al ; cmp byte ptr [rax], dl ; sti ; jmp qword ptr [rbx]
0x000000000014039b : add byte ptr [rsi + rcx - 5], dl ; call qword ptr [rcx]
0x00000000001464db : add byte ptr [rsi + rcx*2 + 1], bl ; add byte ptr [rax - 0x30], al ; cld ; jmp qword ptr [rdi]
0x00000000000b8a39 : add byte ptr [rsi + rdx - 0x18], dh ; call qword ptr [rdi]
0x00000000000b8cfd : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010039d : add byte ptr [rsi - 0x70], ah ; mov byte ptr [rdi + 0x68], 0 ; ret
0x00000000000e742d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rip + 0x477d92], edi ; ret
0x00000000000fdced : add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 8] ; ret
0x00000000000bf8cd : add byte ptr [rsi - 0x70], ah ; ret
0x00000000000e01ad : add byte ptr [rsi - 0x70], ah ; xor eax, eax ; ret
0x000000000014434b : add byte ptr [rsp + rbp - 4], al ; jmp qword ptr [rcx]
0x00000000001402c3 : add byte ptr [rsp + rbp*8], al ; add byte ptr [rax + 0xd], bl ; sti ; jmp rcx
0x000000000013f32b : add byte ptr [rsp + rbx*8 - 0x77400000], ch ; cli ; jmp qword ptr [rbx]
0x0000000000101ff1 : add byte ptr [rsp + rcx - 0xd], dh ; ret
0x000000000014633b : add byte ptr [rsp + rcx*2 - 0x313fffff], bh ; cld ; jmp qword ptr [rdi]
0x0000000000100bc5 : add byte ptr ds:[rax], al ; add al, ch ; ret 0x15
0x00000000000ffd21 : add byte ptr ds:[rbp + 0xb], dh ; ret
0x0000000000107c5f : add byte ptr ds:[rbp + rbp + 0x48], dh ; add esp, 8 ; ret
0x00000000000fa1ca : add byte ptr gs:[rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x50f
0x000000000012265e : add byte ptr gs:[rcx], ah ; sti ; jmp qword ptr [rax]
0x0000000000134d21 : add byte ptr ss:[rax], al ; cld ; int1 ; jmp rcx
0x000000000012e2e8 : add ch, 0 ; add al, ch ; ret 0xfff7
0x00000000000f5810 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000001453f9 : add ch, byte ptr [rdi + 0xa] ; ret
0x000000000006af67 : add cl, byte ptr [rax + 1] ; fmul dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000045a3e : add cl, byte ptr [rax + rax] ; pop rax ; pop rdx ; jmp 0x45a0d
0x0000000000028f1a : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000000350 : add cl, byte ptr [rax] ; ret 0xe408
0x00000000000a4851 : add cl, byte ptr [rdi] ; ret
0x000000000003d547 : add cl, ch ; ret
0x00000000000d6882 : add cl, ch ; ret 0xffb2
0x000000000006b2d1 : add cl, ch ; ret 0xfffb
0x000000000009856c : add cl, ch ; ret 0xfffc
0x00000000000de4b3 : add cl, ch ; ret 0xfffd
0x00000000000d6252 : add cl, ch ; ret 0xffff
0x000000000010f88d : add dh, al ; adc byte ptr [r8], r8b ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000031507 : add dh, al ; jb 0x31516 ; mov byte ptr [rdi + 0x73], 1 ; ret
0x00000000000f5763 : add dh, al ; xchg ecx, esp ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000000000f155d : add dh, al ; xor byte ptr [rax + 8], 0x5b ; ret
0x000000000003369d : add dh, bl ; ret
0x0000000000104eba : add dh, byte ptr [rbp + 0xb] ; add rsp, 0x48 ; ret
0x0000000000106470 : add dh, byte ptr [rbp + rcx + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fd301 : add dh, byte ptr [rcx] ; imul eax, dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000fa12e : add dh, byte ptr [rdi + rax + 0x5b] ; ret
0x00000000000df5b5 : add dh, dh ; ret
0x00000000000fe6ab : add dh, dh ; ret 0x7501
0x00000000000df344 : add dh, dh ; ret 0xf07
0x00000000000f7381 : add dil, r15b ; ret
0x000000000001c2fa : add dl, bl ; loopne 0x1c2f5 ; ret
0x00000000001424ca : add dl, byte ptr [rsi + rcx + 8] ; ret
0x0000000000134a42 : add dword ptr [r15], 2 ; ret
0x00000000000ff941 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000001459d9 : add dword ptr [r8], eax ; mov ah, 0x9f ; cld ; jmp rdi
0x00000000000d8b45 : add dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001304f9 : add dword ptr [r8], r8d ; cwde ; ret
0x0000000000145ba9 : add dword ptr [r8], r8d ; mov ah, 0xa5 ; cld ; jmp qword ptr [rsi]
0x0000000000130579 : add dword ptr [r8], r8d ; mov cl, dl ; cld ; jmp rax
0x00000000001030f4 : add dword ptr [r8], r8d ; ret
0x00000000001012bd : add dword ptr [r9 + r9*4 - 1], r8d ; mov dword ptr [rbx + 0x70], eax ; call qword ptr [rbx]
0x00000000000287ae : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000020877 : add dword ptr [rax + 0x29], ecx ; ret 0xc031
0x00000000000fc798 : add dword ptr [rax + 0x31], ecx ; ret 0x4551
0x00000000000ddee3 : add dword ptr [rax + 0x39487fff], eax ; ret
0x00000000000df3ed : add dword ptr [rax + 0x39487fff], eax ; ret 0xd72
0x000000000002dce4 : add dword ptr [rax + 0x394c7fff], eax ; ret
0x000000000002eddb : add dword ptr [rax + 0x394c7fff], eax ; ret 0x972
0x00000000000f72f2 : add dword ptr [rax + 0x39], ecx ; cli ; jne 0xf72f0 ; xor eax, eax ; ret
0x00000000000f732c : add dword ptr [rax + 0x39], ecx ; cli ; jne 0xf7327 ; ret
0x00000000000f98d0 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000e016c : add dword ptr [rax + 0x39], ecx ; ret 0x6476
0x00000000000f7ff5 : add dword ptr [rax + 0x39], ecx ; ret 0xe575
0x00000000000f7369 : add dword ptr [rax + 0x39], ecx ; ret 0xe975
0x00000000000f813d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x000000000001d1c9 : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x0000000000106759 : add dword ptr [rax + 0x39], ecx ; ret 0xf175
0x0000000000106d59 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0xf], 1 ; xor eax, eax ; ret
0x00000000000f8e3e : add dword ptr [rax + 0x39], ecx ; sal dword ptr [rbp - 0x14], 1 ; ret
0x00000000000f7976 : add dword ptr [rax + 0x39], ecx ; sal dword ptr [rbp - 0xc], 1 ; ret
0x000000000010e138 : add dword ptr [rax + 0x63], ecx ; add al, 0x83 ; add rax, rbx ; jmp rax
0x00000000000fc328 : add dword ptr [rax + 0x63], ecx ; ret 0x8b48
0x00000000000f80e3 : add dword ptr [rax + 0x7500073c], eax ; div bl ; ret
0x00000000000f807a : add dword ptr [rax + 0x7500ff7f], eax ; ret
0x00000000000cd8bb : add dword ptr [rax + 1], ecx ; enter 0x3589, -0x11 ; ret 0x48
0x00000000000cd90c : add dword ptr [rax + 1], ecx ; enter 0x3589, -0x62 ; ret 0x48
0x00000000000cd86a : add dword ptr [rax + 1], ecx ; enter 0x3589, 0x40 ; ret
0x00000000000cd95d : add dword ptr [rax + 1], ecx ; enter 0x3589, 0x4d ; ret 0x48
0x00000000000cef32 : add dword ptr [rax + 1], ecx ; ret 0x3589
0x0000000000032fdb : add dword ptr [rax + 3], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000101635 : add dword ptr [rax - 0x73], ecx ; ret 0xeb08
0x00000000000f8f94 : add dword ptr [rax - 0x77], ecx ; jne 0xf8fc4 ; ret
0x00000000000f0ee8 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000008db8b : add dword ptr [rax - 0x77], ecx ; ret 0xc148
0x00000000000e761b : add dword ptr [rax - 0x7d], ecx ; clc ; jne 0xe7618 ; ret
0x00000000000e7a8b : add dword ptr [rax - 0x7d], ecx ; clc ; jne 0xe7a88 ; ret
0x00000000000f7802 : add dword ptr [rax - 0x7d], ecx ; cli ; push qword ptr [rbp - 0x11] ; ret
0x00000000000f1677 : add dword ptr [rax - 0x7d], ecx ; cli ; push qword ptr [rbp - 0x16] ; ret
0x00000000000a7e1b : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ffad8 : add dword ptr [rax - 0x7d], ecx ; ret 0x4508
0x000000000010cc37 : add dword ptr [rax - 0x7d], ecx ; ret 0x4802
0x00000000000cefe5 : add dword ptr [rax - 0x7d], ecx ; ret 0x4902
0x000000000010e4a1 : add dword ptr [rax - 0x7d], ecx ; ret 0x6602
0x00000000000a8203 : add dword ptr [rax - 0x7d], ecx ; ret 0xeb01
0x0000000000109be7 : add dword ptr [rax - 0x7d], ecx ; ret 0xf30
0x00000000000202bc : add dword ptr [rax - 0x7f], ecx ; ret
0x00000000000260d9 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008c650 : add dword ptr [rax], 0 ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000012d3a9 : add dword ptr [rax], 0xf1a3b800 ; jmp rsp
0x000000000010ddf8 : add dword ptr [rax], 1 ; ret
0x00000000001441da : add dword ptr [rax], eax ; adc al, 0x25 ; cld ; call rdi
0x000000000014276e : add dword ptr [rax], eax ; adc al, bl ; sti ; jmp rsp
0x00000000001466fe : add dword ptr [rax], eax ; adc dl, 0xfc ; call rdi
0x000000000010d3ad : add dword ptr [rax], eax ; add al, ch ; fisttp dword ptr [rbp - 1] ; push rbx ; ret
0x000000000006995a : add dword ptr [rax], eax ; add al, ch ; pop rsi ; ret
0x0000000000025cc5 : add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000e9dc6 : add dword ptr [rax], eax ; add al, ch ; ret 0x183
0x00000000000a84f6 : add dword ptr [rax], eax ; add al, ch ; ret 0x5d7
0x00000000000898f6 : add dword ptr [rax], eax ; add al, ch ; ret 0x7c3
0x0000000000072ef6 : add dword ptr [rax], eax ; add al, ch ; ret 0x92d
0x00000000000696f6 : add dword ptr [rax], eax ; add al, ch ; ret 0x9c5
0x000000000004e4f6 : add dword ptr [rax], eax ; add al, ch ; ret 0xb77
0x00000000000286c6 : add dword ptr [rax], eax ; add al, ch ; ret 0xd9a
0x0000000000109fc6 : add dword ptr [rax], eax ; add al, ch ; ret 0xff81
0x0000000000079a6d : add dword ptr [rax], eax ; add al, ch ; ret 8
0x00000000000f57a6 : add dword ptr [rax], eax ; add byte ptr [0xffffffff83482b74], bh ; ret
0x00000000000e9c83 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x000000000001bc81 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x00000000000fc130 : add dword ptr [rax], eax ; add byte ptr [rax - 0x6af0f507], al ; ret 0xf980
0x000000000002e4f9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000e93e6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; jnp 0xe9404 ; call rax
0x00000000000e9690 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; jnp 0xe96ae ; call rax
0x000000000001bd77 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004a402 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000002aa7f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000c3cb3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003352d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000029a90 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000110f22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xffd5
0x0000000000029017 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010242b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000000faf2c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0xfaee7 ; ret
0x0000000000105d1b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], r10 ; ret
0x00000000000296ed : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9c26 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000033cd6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000027d18 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013184d : add dword ptr [rax], eax ; add byte ptr [rax], dl ; stosb byte ptr [rdi], al ; out dx, al ; call qword ptr [rdx]
0x00000000000e3eaf : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0x00000000000e488f : add dword ptr [rax], eax ; add byte ptr [rbp - 0x24], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000291d7 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0xc149
0x000000000002afe6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000029a28 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000110901 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000059a86 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x105cc8
0x00000000000a99bf : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x105cc8
0x000000000002dc26 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000000f4a13 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000f188c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0xc931
0x00000000000cc642 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esi ; ror dword ptr [rdi], -0x79 ; push rsp ; ret
0x00000000000cbb3e : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esi ; ror dword ptr [rdi], -0x79 ; ret 0xca
0x00000000000cc5d0 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esi ; ror dword ptr [rdi], -0x79 ; stosd dword ptr [rdi], eax ; ret
0x00000000000cc756 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esi ; ror dword ptr [rdi], -0x79 ; xchg eax, ecx ; ret 0
0x0000000000131839 : add dword ptr [rax], eax ; add byte ptr [rdx + rbp*4], al ; out dx, al ; call qword ptr [rdx]
0x00000000000df5b3 : add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000001c05f : add dword ptr [rax], eax ; add rsp, 0x18 ; ret
0x00000000000e8ec9 : add dword ptr [rax], eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013031a : add dword ptr [rax], eax ; call 0x1112ff72
0x0000000000144946 : add dword ptr [rax], eax ; call 0x28144593
0x00000000000007ff : add dword ptr [rax], eax ; call 0xffffffffc3000c16
0x0000000000130cb2 : add dword ptr [rax], eax ; call 0xffffffffd1130a25
0x000000000012fa72 : add dword ptr [rax], eax ; call 0xffffffffe512f588
0x000000000013062a : add dword ptr [rax], eax ; call 0xffffffffe513030a
0x0000000000131612 : add dword ptr [rax], eax ; call 0xffffffffe513149b
0x0000000000130cf2 : add dword ptr [rax], eax ; clc ; outsb dx, byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x000000000012ff8a : add dword ptr [rax], eax ; clc ; scasd eax, dword ptr [rdi] ; sti ; call rax
0x00000000001449b6 : add dword ptr [rax], eax ; cld ; call qword ptr [rdx]
0x0000000000130242 : add dword ptr [rax], eax ; cld ; call rax
0x0000000000144322 : add dword ptr [rax], eax ; cld ; sub edi, esp ; jmp qword ptr [rcx]
0x0000000000130142 : add dword ptr [rax], eax ; cmp bh, bl ; sti ; jmp rsp
0x000000000012f9ea : add dword ptr [rax], eax ; cmp bh, dh ; cli ; call rsp
0x000000000012fb5a : add dword ptr [rax], eax ; cmp bl, dil ; jmp qword ptr [rax]
0x0000000000130dba : add dword ptr [rax], eax ; cmp byte ptr [rax - 3], bh ; jmp rsp
0x000000000012f68a : add dword ptr [rax], eax ; cmp byte ptr [rbp - 7], ah ; call qword ptr [rax]
0x000000000012fbaa : add dword ptr [rax], eax ; cmp byte ptr [rcx - 5], al ; jmp rax
0x0000000000130122 : add dword ptr [rax], eax ; cmp ch, bl ; sti ; jmp qword ptr [rax]
0x00000000001311ca : add dword ptr [rax], eax ; cmp cl, ch ; std ; call qword ptr [rax]
0x000000000012f83a : add dword ptr [rax], eax ; cwde ; jo 0x12f83d ; call rsp
0x0000000000145546 : add dword ptr [rax], eax ; cwde ; mov ah, bh ; call qword ptr [rax]
0x00000000001304fa : add dword ptr [rax], eax ; cwde ; ret
0x0000000000130a02 : add dword ptr [rax], eax ; cwde ; std ; jmp rax
0x0000000000131432 : add dword ptr [rax], eax ; fcom dword ptr [rdi - 2] ; jmp rsp
0x0000000000143f92 : add dword ptr [rax], eax ; fcomp qword ptr [rsi] ; cld ; call rdi
0x0000000000130a52 : add dword ptr [rax], eax ; fdiv dword ptr [rdi] ; std ; call qword ptr [rax]
0x00000000001301e2 : add dword ptr [rax], eax ; fdiv st(5) ; sti ; jmp qword ptr [rax]
0x000000000013089a : add dword ptr [rax], eax ; fdivr st(1) ; cld ; call rax
0x000000000013068a : add dword ptr [rax], eax ; fdivr st(4) ; jmp qword ptr [rax]
0x0000000000146466 : add dword ptr [rax], eax ; fmul st(7) ; cld ; jmp qword ptr [rdi]
0x0000000000144ee6 : add dword ptr [rax], eax ; fsub dword ptr [rbx - 4] ; jmp qword ptr [rsi]
0x000000000012f7fa : add dword ptr [rax], eax ; fsubr dword ptr [rdx - 7] ; call rsp
0x000000000014197a : add dword ptr [rax], eax ; in al, 0x94 ; sti ; jmp qword ptr [rcx]
0x0000000000142472 : add dword ptr [rax], eax ; jl 0x142443 ; sti ; jmp qword ptr [rax]
0x000000000010e319 : add dword ptr [rax], eax ; jne 0x10e325 ; ret
0x000000000012f682 : add dword ptr [rax], eax ; js 0x12f6ed ; stc ; call rax
0x00000000001300b2 : add dword ptr [rax], eax ; js 0x130086 ; sti ; jmp rsp
0x000000000013021a : add dword ptr [rax], eax ; js 0x130260 ; cld ; jmp qword ptr [rax]
0x000000000013038a : add dword ptr [rax], eax ; js 0x130319 ; cld ; call qword ptr [rax]
0x0000000000130402 : add dword ptr [rax], eax ; js 0x1303ab ; cld ; jmp qword ptr [rax]
0x0000000000130401 : add dword ptr [rax], eax ; js 0x1303ac ; cld ; jmp qword ptr [rax]
0x000000000013086a : add dword ptr [rax], eax ; js 0x130867 ; cld ; jmp rsp
0x000000000013097a : add dword ptr [rax], eax ; js 0x13099a ; std ; jmp rsp
0x0000000000145636 : add dword ptr [rax], eax ; js 0x1455c9 ; cld ; jmp qword ptr [rcx]
0x00000000001425b2 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; sar ebx, 1 ; jmp qword ptr [rcx]
0x000000000014192a : add dword ptr [rax], eax ; mov ah, 0x94 ; sti ; jmp qword ptr [rbx]
0x00000000001459da : add dword ptr [rax], eax ; mov ah, 0x9f ; cld ; jmp rdi
0x0000000000145baa : add dword ptr [rax], eax ; mov ah, 0xa5 ; cld ; jmp qword ptr [rsi]
0x00000000001423b6 : add dword ptr [rax], eax ; mov bl, al ; sti ; call qword ptr [rsi]
0x0000000000130d3a : add dword ptr [rax], eax ; mov byte ptr [rdi - 3], ch ; call rsp
0x000000000012fc02 : add dword ptr [rax], eax ; mov byte ptr [rdi - 5], ch ; jmp rax
0x00000000001308c2 : add dword ptr [rax], eax ; mov byte ptr [rdx], al ; std ; call rsp
0x00000000001307b2 : add dword ptr [rax], eax ; mov ch, ah ; cld ; call rsp
0x000000000012f922 : add dword ptr [rax], eax ; mov ch, al ; cli ; call qword ptr [rax]
0x000000000013057a : add dword ptr [rax], eax ; mov cl, dl ; cld ; jmp rax
0x000000000012fa3a : add dword ptr [rax], eax ; mov dh, bh ; cli ; jmp qword ptr [rax]
0x00000000001311fa : add dword ptr [rax], eax ; mov dh, ch ; std ; call rsp
0x00000000001304c2 : add dword ptr [rax], eax ; mov sil, 0xfc ; jmp rsp
0x000000000010f10a : add dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000010f443 : add dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000012fbea : add dword ptr [rax], eax ; movsxd rdi, ebx ; call qword ptr [rax]
0x00000000000ece7b : add dword ptr [rax], eax ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001464a2 : add dword ptr [rax], eax ; or al, 0xd0 ; cld ; jmp qword ptr [rdi]
0x000000000013066a : add dword ptr [rax], eax ; or al, bl ; cld ; call rax
0x000000000012f95a : add dword ptr [rax], eax ; or bh, bl ; cli ; jmp qword ptr [rax]
0x00000000001305f2 : add dword ptr [rax], eax ; or bl, dl ; cld ; call qword ptr [rax]
0x0000000000130c1a : add dword ptr [rax], eax ; or byte ptr [rax - 3], bl ; call rax
0x0000000000130912 : add dword ptr [rax], eax ; or byte ptr [rax], cl ; std ; call rsp
0x000000000012f812 : add dword ptr [rax], eax ; or byte ptr [rbx - 7], ch ; call qword ptr [rax]
0x000000000012f792 : add dword ptr [rax], eax ; or byte ptr [rdx - 7], ch ; call rax
0x000000000012f8f2 : add dword ptr [rax], eax ; or byte ptr [rsi - 7], bh ; call qword ptr [rax]
0x00000000001307ba : add dword ptr [rax], eax ; pop rax ; out 0xfc, al ; call qword ptr [rax]
0x0000000000130cda : add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; std ; jmp rsp
0x0000000000130342 : add dword ptr [rax], eax ; pop rax ; pop rbp ; cld ; call rax
0x00000000000e86e1 : add dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000146156 : add dword ptr [rax], eax ; pop rax ; ret
0x00000000001463f2 : add dword ptr [rax], eax ; pop rsp ; iretd ; cld ; jmp qword ptr [rdi]
0x0000000000142522 : add dword ptr [rax], eax ; pop rsp ; sar bl, 1 ; call qword ptr [rsi]
0x000000000012f7b2 : add dword ptr [rax], eax ; push -7 ; jmp qword ptr [rax]
0x00000000001431ce : add dword ptr [rax], eax ; push rax ; hlt ; sti ; call rsi
0x000000000014232e : add dword ptr [rax], eax ; push rax ; ret 0xfffb
0x00000000000e6a9e : add dword ptr [rax], eax ; ret
0x000000000014633e : add dword ptr [rax], eax ; ror dh, 0xfc ; jmp qword ptr [rdi]
0x00000000001464de : add dword ptr [rax], eax ; sar spl, 1 ; jmp qword ptr [rdi]
0x00000000001301fa : add dword ptr [rax], eax ; sbb al, 0xfc ; jmp qword ptr [rax]
0x0000000000143312 : add dword ptr [rax], eax ; sbb al, 0xfd ; sti ; call qword ptr [rbx]
0x0000000000130672 : add dword ptr [rax], eax ; sbb al, bl ; cld ; jmp rsp
0x0000000000143b66 : add dword ptr [rax], eax ; sbb byte ptr [rbx], dl ; cld ; call qword ptr [rbx]
0x000000000013158a : add dword ptr [rax], eax ; sbb byte ptr [rdi - 2], ch ; jmp rsp
0x000000000012f79a : add dword ptr [rax], eax ; sbb byte ptr [rdx - 7], ch ; jmp rsp
0x00000000001300ba : add dword ptr [rax], eax ; sbb dh, cl ; sti ; call qword ptr [rax]
0x00000000001301da : add dword ptr [rax], eax ; sbb dl, dh ; sti ; call rsp
0x0000000000143dae : add dword ptr [rax], eax ; sbb esp, edi ; jmp rbx
0x0000000000131202 : add dword ptr [rax], eax ; std ; jmp qword ptr [rax]
0x000000000012ff4a : add dword ptr [rax], eax ; stosb byte ptr [rdi], al ; sti ; call rsp
0x00000000001420d2 : add dword ptr [rax], eax ; sub al, 0xb1 ; sti ; jmp qword ptr [rdx]
0x000000000014434a : add dword ptr [rax], eax ; sub al, 0xfc ; jmp qword ptr [rcx]
0x000000000013117a : add dword ptr [rax], eax ; sub al, dl ; std ; jmp rax
0x00000000001463b6 : add dword ptr [rax], eax ; sub bh, cl ; cld ; jmp qword ptr [rdi]
0x0000000000130db2 : add dword ptr [rax], eax ; sub byte ptr [rax - 3], bh ; call rax
0x0000000000131502 : add dword ptr [rax], eax ; sub byte ptr [rbx - 2], ch ; jmp rax
0x000000000012ff92 : add dword ptr [rax], eax ; test al, 0xb0 ; sti ; jmp rsp
0x0000000000142b0a : add dword ptr [rax], eax ; test cl, ah ; sti ; call qword ptr [rcx]
0x000000000014498e : add dword ptr [rax], eax ; xor byte ptr [rdx - 4], al ; jmp qword ptr [rdx]
0x00000000000defcd : add dword ptr [rax], eax ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000103429 : add dword ptr [rax], ecx ; ret 0x5488
0x00000000000e528f : add dword ptr [rax], edi ; ret 0xee7c
0x00000000001022e9 : add dword ptr [rax], esp ; ret
0x00000000001304c1 : add dword ptr [rax], r8d ; mov sil, 0xfc ; jmp rsp
0x00000000001071e0 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; sbb rax, -1 ; ret
0x000000000010305a : add dword ptr [rbp + 3], esi ; ret
0x00000000000b0d0f : add dword ptr [rbp - 0x22], esi ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f8fe8 : add dword ptr [rbp - 0x2e], esi ; ret
0x000000000008dcb4 : add dword ptr [rbp - 0x7b], ecx ; test byte ptr [rcx + 0xf], 0x44 ; ret 0x8949
0x0000000000079a1e : add dword ptr [rbx + 0x50], edx ; call 0x105cc5
0x00000000000f9ed0 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; ret
0x00000000001007f2 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000103b02 : add dword ptr [rbx + rbx*2 - 0x7d], esi ; ret
0x00000000000f8e83 : add dword ptr [rbx - 0x2d7a78ec], ecx ; jne 0xf8e89 ; ret
0x00000000000fd038 : add dword ptr [rbx - 0x3189f006], eax ; ret
0x00000000000fcf89 : add dword ptr [rbx - 0x3289f606], eax ; ret
0x00000000000fefa8 : add dword ptr [rcx + 0x39], ecx ; sal dword ptr [rbp - 0x3e], cl ; pop rbx ; ret
0x0000000000099a09 : add dword ptr [rcx + 0x54], eax ; push rax ; call 0x105cc6
0x0000000000069a6f : add dword ptr [rcx + 0x55], eax ; push rax ; call 0x105cc6
0x00000000000599db : add dword ptr [rcx + 0x56], eax ; push rax ; call 0x105cc6
0x00000000000fc68b : add dword ptr [rcx + 1], eax ; ret 0x144
0x00000000000fac9c : add dword ptr [rcx + rcx - 0xd], esi ; ret
0x000000000010de19 : add dword ptr [rcx + rcx*4 + 3], esp ; pop rbx ; ret
0x00000000001012be : add dword ptr [rcx + rcx*4 - 1], eax ; mov dword ptr [rbx + 0x70], eax ; call qword ptr [rbx]
0x0000000000021e4d : add dword ptr [rcx - 0x77], ecx ; ret 0x8b41
0x0000000000025d96 : add dword ptr [rcx - 0x7b], ecx ; ret
0x00000000000229ec : add dword ptr [rcx - 0x7d], ecx ; ret 0x4810
0x00000000000f2b90 : add dword ptr [rcx - 0x7f], ecx ; ret
0x000000000012f681 : add dword ptr [rcx], eax ; add byte ptr [rax + 0x62], bh ; stc ; call rax
0x000000000012f689 : add dword ptr [rcx], eax ; add byte ptr [rax], bh ; stc ; call qword ptr [rax]
0x00000000001014fa : add dword ptr [rcx], edi ; ret
0x0000000000029923 : add dword ptr [rcx], edi ; ret 0x8f0f
0x00000000000e7a73 : add dword ptr [rdi + rax*8], edx ; ret
0x00000000000e62e3 : add dword ptr [rdi], 0 ; je 0xe62f7 ; ret
0x0000000000134a43 : add dword ptr [rdi], 2 ; ret
0x00000000001367db : add dword ptr [rdi], 3 ; ret
0x0000000000138e9e : add dword ptr [rdi], 3 ; ret 0xa02
0x00000000000f805f : add dword ptr [rdi], ecx ; mov dh, 0x10 ; cmp dl, cl ; jne 0xf8061 ; ret
0x00000000000f80b9 : add dword ptr [rdi], ecx ; mov esi, 0x75d28417 ; out dx, eax ; ret
0x00000000000faa94 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x895b
0x00000000000215b0 : add dword ptr [rdx - 0x75], ecx ; ret 0x4838
0x0000000000133980 : add dword ptr [rdx], 0x4f ; ret
0x0000000000143424 : add dword ptr [rdx], 0x5a ; ret
0x000000000013e678 : add dword ptr [rdx], 0x74 ; ret
0x0000000000075eec : add dword ptr [rdx], eax ; add byte ptr [rax], al ; call 0x102196
0x00000000000fe721 : add dword ptr [rip + 0x100000], edi ; jne 0xfe719 ; ret
0x00000000000f0d25 : add dword ptr [rip + 0x6bf475], edi ; ret
0x00000000000e7608 : add dword ptr [rsi + rax], edx ; ret
0x000000000013418e : add dword ptr [rsp], 0xa ; ret
0x00000000000e3eae : add dword ptr ds:[rax], eax ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0x00000000000e8ec8 : add dword ptr ds:[rax], eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000145545 : add dword ptr ds:[rax], eax ; cwde ; mov ah, bh ; call qword ptr [rax]
0x000000000010ddf7 : add dword ptr fs:[rax], 1 ; ret
0x0000000000130241 : add dword ptr ss:[rax], eax ; cld ; call rax
0x0000000000130219 : add dword ptr ss:[rax], eax ; js 0x130261 ; cld ; jmp qword ptr [rax]
0x000000000001edcf : add eax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000001c284 : add eax, 0x10 ; ret
0x0000000000028b42 : add eax, 0x100b04 ; ret
0x0000000000028a98 : add eax, 0x100bae ; ret
0x0000000000104bcd : add eax, 0x18c48348 ; ret
0x000000000010f862 : add eax, 0x19de4 ; ret
0x000000000010f712 : add eax, 0x1bfb4 ; ret
0x000000000010b752 : add eax, 0x1def4 ; ret
0x0000000000101c5a : add eax, 0x1f0f0000 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000001e8bb : add eax, 0x200298 ; mov qword ptr [rsi], rax ; ret
0x0000000000106f81 : add eax, 0x22ae7 ; mov qword ptr [rdx + 0x10], rax ; ret
0x00000000000f5491 : add eax, 0x254bda ; add rsp, 8 ; ret
0x00000000001030e2 : add eax, 0x26564 ; ret
0x00000000000db252 : add eax, 0x26cd99 ; ret
0x00000000000fc102 : add eax, 0x2b623 ; ret
0x00000000000fc0f2 : add eax, 0x2b62f ; ret
0x00000000000fc0e2 : add eax, 0x2b635 ; ret
0x00000000000fc0d2 : add eax, 0x2b641 ; ret
0x00000000000fc0c2 : add eax, 0x2b65a ; ret
0x00000000000fc0b2 : add eax, 0x2b65d ; ret
0x000000000001d6e8 : add eax, 0x32da9b ; mov dword ptr [rbx + 0x10], eax ; pop rbx ; ret
0x00000000000e7dc2 : add eax, 0x41884 ; ret
0x000000000010e49c : add eax, 0x428d3174 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6602
0x00000000000e830c : add eax, 0x4774c7 ; add rsp, 8 ; ret
0x00000000000e82cb : add eax, 0x477508 ; ret
0x00000000000e7441 : add eax, 0x477d82 ; ret
0x00000000000e4789 : add eax, 0x4796fe ; je 0xe47a0 ; ret
0x00000000000e470b : add eax, 0x479b88 ; ret
0x00000000000e46f6 : add eax, 0x479b9d ; ret
0x00000000000e479a : add eax, 0x479c41 ; ret
0x00000000000e4772 : add eax, 0x479c61 ; ret
0x00000000000e4752 : add eax, 0x479c91 ; ret
0x00000000000e46d2 : add eax, 0x479cf9 ; ret
0x00000000000e46b2 : add eax, 0x479d11 ; ret
0x00000000000e4692 : add eax, 0x479d29 ; ret
0x00000000000eab56 : add eax, 0x4825e5 ; pop rbx ; ret
0x00000000000eaab8 : add eax, 0x482683 ; pop rbx ; ret
0x00000000000eaa7d : add eax, 0x4826be ; ret
0x0000000000111856 : add eax, 0x4a8d7f74 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4802
0x00000000000a91d2 : add eax, 0x4b2bf1 ; mov rdi, r12 ; call rax
0x00000000000a91a4 : add eax, 0x4b2c1f ; je 0xa91de ; call rax
0x0000000000032594 : add eax, 0x529797 ; xor esi, esi ; call qword ptr [rax]
0x0000000000025a0a : add eax, 0x536321 ; call qword ptr [rax]
0x00000000000e4d87 : add eax, 0x58fffff4 ; pop rdx ; leave ; ret
0x000000000004572e : add eax, 0x5a58000c ; jmp 0x456fd
0x00000000000d4a3f : add eax, 0x5c415d5b ; ret
0x00000000000f1505 : add eax, 0x628 ; ret
0x000000000012f7b1 : add eax, 0x6a480001 ; stc ; jmp qword ptr [rax]
0x000000000012f7f9 : add eax, 0x6ad80001 ; stc ; call rsp
0x000000000012f811 : add eax, 0x6b080001 ; stc ; call qword ptr [rax]
0x00000000000f69a2 : add eax, 0x6b9829 ; mov dword ptr [rax], edx ; ret
0x00000000000f0f12 : add eax, 0x6bd289 ; ret
0x000000000001f50b : add eax, 0x748b4800 ; and al, 8 ; call r14
0x000000000001d73f : add eax, 0x83480000 ; call qword ptr [rax]
0x00000000000fc732 : add eax, 0x89000002 ; ret 0x349
0x00000000000efe91 : add eax, 0x89480000 ; ret 0x14d
0x000000000001c7a0 : add eax, 0x8d480000 ; push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000ab087 : add eax, 0x8d490000 ; dec dword ptr [r8 - 0x77] ; ret 0xc148
0x0000000000003059 : add eax, 0xa82345b8 ; ret 0x4e99
0x000000000002135d : add eax, 0xc3834800 ; adc byte ptr [rcx - 0x7f], cl ; ret
0x0000000000069d4d : add eax, 0xe9fffff9 ; ret
0x000000000010e072 : add eax, 0xea2b21 ; ret
0x000000000010c252 : add eax, 0xea4812 ; ret
0x000000000010b707 : add eax, 0xea538c ; add rsp, 8 ; ret
0x000000000010b6b2 : add eax, 0xea53e1 ; ret
0x0000000000104242 : add eax, 0xeac6e1 ; ret
0x00000000001040ab : add eax, 0xeac878 ; add rsp, 0x28 ; ret
0x0000000000103039 : add eax, 0xead88e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fdd62 : add eax, 0xeb2ad9 ; ret
0x0000000000031442 : add eax, 0xf8204 ; ret
0x00000000000fac38 : add eax, 0xf85d8b48 ; leave ; ret
0x00000000001022de : add eax, 0xffd394c ; xchg eax, edx ; ret 0xd389
0x00000000000f8da7 : add eax, 1 ; cmp rsi, rax ; jne 0xf8da9 ; ret
0x00000000000fadc1 : add eax, 1 ; ret
0x000000000002fd34 : add eax, 8 ; cmp rdx, rax ; jne 0x2fd38 ; ret
0x0000000000030124 : add eax, 8 ; cmp rdx, rax ; jne 0x30128 ; ret
0x0000000000100c99 : add eax, dword ptr [0] ; ret
0x000000000001f0e9 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret
0x00000000000ec361 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000001d85f : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000258ea : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000001cf05 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000001bc0a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000032fdd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f9b74 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x000000000001c959 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x870f
0x0000000000111117 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7cb7feb6], cl ; ret 0x4802
0x00000000000e04c9 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000eb098 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret 0x4801
0x00000000000bc0b9 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000000034c : add eax, dword ptr [rax] ; add byte ptr [rdx], al ; add cl, byte ptr [rax] ; ret 0xe408
0x0000000000102480 : add eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e072c : add eax, dword ptr [rax] ; jmp 0xe06fc
0x00000000000e07f5 : add eax, dword ptr [rax] ; jmp 0xe07be
0x00000000000bb668 : add eax, dword ptr [rax] ; mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000e27ae : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000b8d40 : add eax, dword ptr [rax] ; nop word ptr [rax + rax] ; ret
0x00000000000f0940 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000d6260 : add eax, dword ptr [rbp + 0x1e840fc0] ; ret 0xffff
0x00000000000d61f4 : add eax, dword ptr [rbp + 0x2f840fc0] ; ret
0x00000000000d4a3b : add eax, dword ptr [rbp + 0x5b0575c0] ; pop rbp ; pop r12 ; ret
0x00000000000d623c : add eax, dword ptr [rbp + 0x79840fc0] ; ret 0xffff
0x00000000000d61ac : add eax, dword ptr [rbp - 0x1a7bf040] ; ret
0x00000000000d6218 : add eax, dword ptr [rbp - 0x2b7bf040] ; ret 0xffff
0x00000000000d61d0 : add eax, dword ptr [rbp - 0x757bf040] ; ret
0x000000000012f731 : add eax, dword ptr [rcx] ; add byte ptr [rax + 0x69], cl ; stc ; jmp rax
0x00000000001049d6 : add eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000bc0b8 : add eax, dword ptr cs:[rax] ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000ff035 : add eax, ebx ; jmp rax
0x000000000001c2a8 : add eax, ebx ; pop rbx ; ret
0x000000000002cff0 : add eax, ecx ; jmp rax
0x000000000002baad : add eax, edx ; jmp rax
0x00000000000f9dba : add eax, edx ; ret
0x00000000000fff52 : add eax, esi ; ret
0x00000000000def90 : add eax, esi ; xchg dword ptr [rax], eax ; cmp bh, 0x7f ; lodsb al, byte ptr [rsi] ; ret
0x0000000000135036 : add ebp, dword ptr [rax + 0x8070c01] ; ret
0x00000000000f11dc : add ebx, 0x10 ; mov rdi, r12 ; call rax
0x00000000000f11a4 : add ebx, 0x10 ; mov rsi, r12 ; mov rdi, r13 ; call rax
0x00000000001014dd : add ebx, 1 ; call r12
0x00000000000f9efa : add ebx, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000f0a28 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e07f3 : add ebx, dword ptr [rbx + rax] ; jmp 0xe07c0
0x00000000000f7fac : add ebx, eax ; nop ; xor eax, eax ; ret
0x00000000000f7974 : add ecx, 1 ; cmp rcx, rdx ; jne 0xf7979 ; ret
0x00000000000f7539 : add ecx, 1 ; cmp rdx, rcx ; ja 0xf7539 ; pop rbx ; ret
0x00000000000f77d9 : add ecx, 1 ; cmp rdx, rcx ; jg 0xf77d9 ; pop rbx ; ret
0x00000000000f7561 : add ecx, 1 ; cmp rdx, rcx ; jne 0xf7561 ; ret
0x00000000000f7829 : add ecx, 1 ; cmp rdx, rcx ; jne 0xf7829 ; ret
0x00000000000f8d47 : add ecx, 1 ; cmp rdx, rcx ; jne 0xf8d41 ; ret
0x000000000001c2f8 : add ecx, 2 ; shl eax, cl ; ret
0x000000000001b9e9 : add ecx, 8 ; cmp rcx, rax ; jne 0x1b9e9 ; ret
0x00000000000db5b5 : add ecx, dword ptr [rax + 0x39] ; ret 0x1072
0x000000000013b4c1 : add ecx, dword ptr [rax + 0x8070c02] ; ret
0x00000000000ddee0 : add ecx, dword ptr [rax + 5] ; add dword ptr [rax + 0x39487fff], eax ; ret
0x00000000000df3ea : add ecx, dword ptr [rax + 5] ; add dword ptr [rax + 0x39487fff], eax ; ret 0xd72
0x000000000002e4fe : add ecx, dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000e628a : add ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x7f] ; ret 0x8000
0x00000000000e958c : add ecx, dword ptr [rax - 0x73] ; push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000e6f2a : add ecx, dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000f119d : add ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdx + 0x48], 0x83 ; ret
0x0000000000024ab3 : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f9098 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000e6f96 : add ecx, dword ptr [rax - 0x7f] ; ret
0x000000000002aa3e : add ecx, dword ptr [rax - 0x7f] ; ret 0x7fff
0x000000000001cda5 : add ecx, dword ptr [rax - 0x7f] ; ret 0x8000
0x0000000000028f21 : add ecx, dword ptr [rax - 0x7f] ; ret 0x8001
0x0000000000055946 : add ecx, dword ptr [rbx] ; add byte ptr [rax + 0x5a], bl ; jmp 0x55915
0x000000000013d99e : add ecx, dword ptr [rcx + 0xe] ; and byte ptr [rdx], al ; ret
0x0000000000029201 : add ecx, dword ptr [rcx - 0x7f] ; ret
0x00000000000291e0 : add ecx, dword ptr [rcx - 0x7f] ; ret 0x7fff
0x0000000000028ec2 : add ecx, dword ptr [rcx - 0x7f] ; ret 0x8001
0x000000000002e243 : add ecx, eax ; mov qword ptr [r10], r9 ; mov qword ptr [rdx], rcx ; pop rbx ; ret
0x000000000012effd : add ecx, edi ; call qword ptr [rax]
0x00000000000f7930 : add edi, 0x10 ; cmp rsi, rdi ; ja 0xf7929 ; ret
0x00000000000313d4 : add edi, 0x7fff8000 ; jmp r8
0x00000000000f732a : add edi, 1 ; cmp rdx, rdi ; jne 0xf7329 ; ret
0x00000000000e53df : add edi, dword ptr [rax] ; ret 0xee7c
0x000000000001f499 : add edi, ebp ; call r14
0x000000000002e431 : add edi, esi ; lea rsi, qword ptr [rdi + rbx] ; call rax
0x000000000002e42e : add edi, esp ; add rdi, r14 ; lea rsi, qword ptr [rdi + rbx] ; call rax
0x000000000010d808 : add edx, 0x20 ; cmp rcx, rdx ; jne 0x10d809 ; ret
0x00000000000339bb : add edx, 0x7fff8001 ; call qword ptr [r14]
0x0000000000032be9 : add edx, 0x7fff8001 ; call qword ptr [rax]
0x00000000000df21e : add edx, 0x7fff8001 ; call rax
0x00000000000fefa6 : add edx, 1 ; cmp r11, rdx ; jne 0xfef77 ; pop rbx ; ret
0x00000000000fefa6 : add edx, 1 ; cmp r11, rdx ; jne 0xfef79 ; pop rbx ; ret
0x00000000000f8e3c : add edx, 1 ; cmp rcx, rdx ; jne 0xf8e39 ; ret
0x000000000013d2d6 : add edx, dword ptr [rax + 0x8070c01] ; ret
0x00000000000fa5a9 : add edx, ebx ; loop 0xfa5ac ; shl byte ptr [rax], cl ; adc al, 7 ; ret
0x00000000000e06df : add edx, ecx ; jmp rdx
0x00000000000fd036 : add esi, 1 ; cmp edx, 0xf ; jbe 0xfd015 ; ret
0x00000000000fcf87 : add esi, 1 ; cmp edx, 9 ; jbe 0xfcf65 ; ret
0x00000000001030f2 : add esi, eax ; add dword ptr [r8], r8d ; ret
0x00000000000fab65 : add esi, eax ; and rsi, r8 ; sub rsi, rdi ; call r12
0x000000000003150b : add esi, eax ; jae 0x31516 ; ret
0x000000000003402c : add esi, ebx ; ret
0x0000000000107ee9 : add esi, edi ; jmp rsi
0x00000000000ea0dc : add esp, 0x10 ; lea rax, qword ptr [rdx + 1] ; pop rbx ; ret
0x000000000010513b : add esp, 0x10 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039f50 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000113d4c : add esp, 0x10 ; pop rbp ; ret
0x00000000000f9db5 : add esp, 0x10 ; pop rbx ; add rax, rdx ; ret
0x00000000000e47e1 : add esp, 0x10 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000001c615 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001c0b4 : add esp, 0x10 ; pop rbx ; ret
0x000000000002e6d1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8971 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000027d66 : add esp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e969a : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000217b5 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001bb3c : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000001c062 : add esp, 0x18 ; ret
0x00000000000e9c31 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fcc9d : add esp, 0x198 ; ret
0x00000000001108fe : add esp, 0x1a8 ; pop rbx ; pop rbp ; ret
0x0000000000113002 : add esp, 0x20 ; leave ; ret
0x0000000000034558 : add esp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000104026 : add esp, 0x20 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001148de : add esp, 0x20 ; pop rbp ; ret
0x00000000001145d9 : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000000296cf : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f0e7 : add esp, 0x20 ; pop rbx ; ret
0x00000000000f9c88 : add esp, 0x20 ; ret
0x00000000000e79c2 : add esp, 0x220 ; pop rbx ; ret
0x00000000000e7bc7 : add esp, 0x228 ; pop rbx ; pop rbp ; ret
0x00000000000f9fb7 : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000002ab68 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000047ff0 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000282d1 : add esp, 0x28 ; ret
0x0000000000113eb7 : add esp, 0x30 ; pop rbp ; ret
0x00000000000f57cb : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000283d0 : add esp, 0x30 ; pop rbx ; ret
0x000000000010e452 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004d66b : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000077843 : add esp, 0x38 ; ret
0x00000000000dc8dd : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d979b : add esp, 0x40 ; pop rbx ; ret
0x00000000000fb513 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000da08f : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000104ebe : add esp, 0x48 ; ret
0x00000000000fa6ae : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a1e0 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000e02a6 : add esp, 0x60 ; pop rbx ; ret
0x000000000002c88b : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002c37e : add esp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fceb5 : add esp, 0xd0 ; pop rbx ; ret
0x00000000000fca53 : add esp, 0xd8 ; ret
0x00000000000480ed : add esp, 0xe8 ; ret
0x000000000010fa67 : add esp, 0xf8 ; pop rbx ; pop rbp ; ret
0x0000000000049836 : add esp, 0xf8 ; ret
0x000000000001edcb : add esp, 8 ; add rax, 0x10 ; pop rbx ; pop rbp ; ret
0x0000000000100ff1 : add esp, 8 ; jmp rax
0x0000000000034834 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fb7e4 : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000001024ba : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000026960 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003107f : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000001139b9 : add esp, 8 ; mov rax, rsi ; mov rdx, rdi ; ret
0x00000000000e01f0 : add esp, 8 ; movzx eax, al ; ret
0x00000000000343ca : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000033e08 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001bbc6 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001b513 : add esp, 8 ; ret
0x0000000000026bb3 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000001b89 : add esp, eax ; adc al, byte ptr [rcx - 0x74] ; ret 0x4b17
0x00000000001227ad : add esp, edi ; jmp qword ptr [rax]
0x00000000001367da : add qword ptr [r15], 3 ; ret
0x00000000000e9c82 : add qword ptr [r8], r8 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e93e5 : add qword ptr [r8], r8 ; add byte ptr [rax - 0x75], cl ; jnp 0xe9405 ; call rax
0x00000000000e968f : add qword ptr [r8], r8 ; add byte ptr [rax - 0x75], cl ; jnp 0xe96af ; call rax
0x0000000000146465 : add qword ptr [r8], r8 ; fmul st(7) ; cld ; jmp qword ptr [rdi]
0x00000000001307b1 : add qword ptr [r8], r8 ; mov ch, ah ; cld ; call rsp
0x00000000001307b9 : add qword ptr [r8], r8 ; pop rax ; out 0xfc, al ; call qword ptr [rax]
0x00000000001463f1 : add qword ptr [r8], r8 ; pop rsp ; iretd ; cld ; jmp qword ptr [rdi]
0x00000000001463b5 : add qword ptr [r8], r8 ; sub bh, cl ; cld ; jmp qword ptr [rdi]
0x0000000000130629 : add qword ptr [r8], rax ; call 0xffffffffe513030b
0x0000000000130689 : add qword ptr [r8], rax ; fdivr st(4) ; jmp qword ptr [rax]
0x000000000011111b : add qword ptr [rax - 0x7d], rcx ; ret 0x4802
0x00000000000fea44 : add qword ptr [rax - 0x7d], rcx ; ret 0x4902
0x000000000001ea5e : add qword ptr [rax], r8 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001464a1 : add qword ptr [rax], r8 ; or al, 0xd0 ; cld ; jmp qword ptr [rdi]
0x000000000014633d : add qword ptr [rax], r8 ; ror dh, 0xfc ; jmp qword ptr [rdi]
0x00000000001464dd : add qword ptr [rax], r8 ; sar spl, 1 ; jmp qword ptr [rdi]
0x0000000000130669 : add qword ptr [rax], rax ; or al, bl ; cld ; call rax
0x00000000001305f1 : add qword ptr [rax], rax ; or bl, dl ; cld ; call qword ptr [rax]
0x0000000000146155 : add qword ptr [rax], rax ; pop rax ; ret
0x0000000000130671 : add qword ptr [rax], rax ; sbb al, bl ; cld ; jmp rsp
0x00000000000e7a72 : add qword ptr [rdi + rax*8], rdx ; ret
0x00000000000f0d24 : add qword ptr [rip + 0x6bf475], rdi ; ret
0x00000000000e7607 : add qword ptr [rsi + rax], rdx ; ret
0x000000000001f498 : add r15, rbp ; call r14
0x00000000000ef896 : add r8b, bpl ; ret
0x000000000004a2e8 : add r8b, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000001dfb0 : add r8d, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002135c : add rax, -0x3c7cb800 ; adc byte ptr [rcx - 0x7f], cl ; ret
0x000000000001edce : add rax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000001c283 : add rax, 0x10 ; ret
0x000000000001e8ba : add rax, 0x200298 ; mov qword ptr [rsi], rax ; ret
0x00000000000f1504 : add rax, 0x628 ; ret
0x000000000002fd33 : add rax, 8 ; cmp rdx, rax ; jne 0x2fd39 ; ret
0x0000000000030123 : add rax, 8 ; cmp rdx, rax ; jne 0x30129 ; ret
0x0000000000100c98 : add rax, qword ptr [0] ; ret
0x00000000001049d5 : add rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000100c97 : add rax, qword ptr fs:[0] ; ret
0x00000000000ff034 : add rax, rbx ; jmp rax
0x000000000001c2a7 : add rax, rbx ; pop rbx ; ret
0x000000000002cfef : add rax, rcx ; jmp rax
0x000000000002baac : add rax, rdx ; jmp rax
0x00000000000f9db9 : add rax, rdx ; ret
0x00000000000fff51 : add rax, rsi ; ret
0x00000000000f11db : add rbx, 0x10 ; mov rdi, r12 ; call rax
0x00000000000f9ef9 : add rbx, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000313d3 : add rdi, 0x7fff8000 ; jmp r8
0x000000000002e430 : add rdi, r14 ; lea rsi, qword ptr [rdi + rbx] ; call rax
0x00000000000339ba : add rdx, 0x7fff8001 ; call qword ptr [r14]
0x0000000000032be8 : add rdx, 0x7fff8001 ; call qword ptr [rax]
0x00000000000df21d : add rdx, 0x7fff8001 ; call rax
0x00000000000fefa5 : add rdx, 1 ; cmp r11, rdx ; jne 0xfef78 ; pop rbx ; ret
0x00000000000e06de : add rdx, rcx ; jmp rdx
0x0000000000107ee8 : add rsi, rdi ; jmp rsi
0x00000000000ea0db : add rsp, 0x10 ; lea rax, qword ptr [rdx + 1] ; pop rbx ; ret
0x0000000000039f4f : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000113d4b : add rsp, 0x10 ; pop rbp ; ret
0x00000000000f9db4 : add rsp, 0x10 ; pop rbx ; add rax, rdx ; ret
0x00000000000e47e0 : add rsp, 0x10 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000001c614 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001c0b3 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000e8970 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000027d65 : add rsp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e9699 : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000001bb3b : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000001c061 : add rsp, 0x18 ; ret
0x00000000000e9c30 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fcc9c : add rsp, 0x198 ; ret
0x00000000001108fd : add rsp, 0x1a8 ; pop rbx ; pop rbp ; ret
0x0000000000113001 : add rsp, 0x20 ; leave ; ret
0x0000000000034557 : add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x00000000001148dd : add rsp, 0x20 ; pop rbp ; ret
0x00000000001145d8 : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000000296ce : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f0e6 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f9c87 : add rsp, 0x20 ; ret
0x00000000000e79c1 : add rsp, 0x220 ; pop rbx ; ret
0x00000000000e7bc6 : add rsp, 0x228 ; pop rbx ; pop rbp ; ret
0x00000000000f9fb6 : add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000047fef : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000282d0 : add rsp, 0x28 ; ret
0x0000000000113eb6 : add rsp, 0x30 ; pop rbp ; ret
0x00000000000f57ca : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000283cf : add rsp, 0x30 ; pop rbx ; ret
0x000000000004d66a : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000077842 : add rsp, 0x38 ; ret
0x00000000000dc8dc : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d979a : add rsp, 0x40 ; pop rbx ; ret
0x00000000000da08e : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000104ebd : add rsp, 0x48 ; ret
0x00000000000fa6ad : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a1df : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000e02a5 : add rsp, 0x60 ; pop rbx ; ret
0x00000000000fceb4 : add rsp, 0xd0 ; pop rbx ; ret
0x00000000000fca52 : add rsp, 0xd8 ; ret
0x00000000000480ec : add rsp, 0xe8 ; ret
0x000000000010fa66 : add rsp, 0xf8 ; pop rbx ; pop rbp ; ret
0x0000000000049835 : add rsp, 0xf8 ; ret
0x0000000000100ff0 : add rsp, 8 ; jmp rax
0x0000000000034833 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fb7e3 : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000001024b9 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000002695f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003107e : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000e01ef : add rsp, 8 ; movzx eax, al ; ret
0x00000000000343c9 : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000001bbc5 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001b512 : add rsp, 8 ; ret
0x0000000000026bb2 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000130c19 : add word ptr [rax], ax ; or byte ptr [rax - 3], bl ; call rax
0x0000000000133b5d : and al, 0 ; add byte ptr [rax], dl ; or al, dh ; jmp qword ptr [rcx]
0x00000000000f4fab : and al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104081 : and al, 0x10 ; call rax
0x00000000000f4489 : and al, 0x10 ; mov dword ptr [rsp + 8], ecx ; mov rdi, rsi ; call rax
0x000000000010407c : and al, 0x18 ; lea rdi, qword ptr [rsp + 0x10] ; call rax
0x000000000008d774 : and al, 0x18 ; mov edx, ebp ; mov rdi, rbx ; call rax
0x0000000000025233 : and al, 0x18 ; mov rsi, r13 ; call 0x21457
0x0000000000020e5a : and al, 0x20 ; call 0xdd0e4
0x000000000010a744 : and al, 0x20 ; mov rsi, rbp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000020e55 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r11 ; call 0xdd0e9
0x00000000000df6a8 : and al, 0x31 ; test byte ptr [rax + 0x29], 0xfa ; call qword ptr [r15]
0x00000000000223a1 : and al, 0x39 ; ret 0x840f
0x00000000000269fc : and al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000104c4c : and al, 0x48 ; add esp, 0x18 ; ret
0x00000000000e7a6d : and al, 0x48 ; mov edx, dword ptr [rsi + rax*8] ; add qword ptr [rdi + rax*8], rdx ; ret
0x000000000001de9d : and al, 0x48 ; mov edx, eax ; jmp 0x1de4f
0x00000000000fb840 : and al, 0x5b ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000024b8a : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e3633 : and al, 0x60 ; add al, 0 ; add al, ch ; ret
0x00000000001044b9 : and al, 0x75 ; mov byte ptr [rax - 0x7d], cl ; ret
0x0000000000002a4b : and al, 0xa1 ; jb 0x2a4f ; cmp edi, edx ; mov cl, 9 ; ret
0x00000000001115cd : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f9c85 : and al, 0xb8 ; add rsp, 0x20 ; ret
0x00000000000f4d7f : and al, 0xc ; mov rdi, rbp ; call rax
0x00000000000f33f7 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001117ec : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf66
0x000000000004d627 : and al, 0xe8 ; ret
0x0000000000025a18 : and al, 0xe8 ; ret 0xe83
0x000000000006c1cc : and al, 0xeb ; ret
0x0000000000108cb8 : and al, 0xf ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001070dd : and al, 0xf ; jmp 0x1070a6
0x00000000001070dc : and al, 0xf ; jmp 0x1070a7
0x00000000000f145d : and al, 0xf0 ; movaps xmmword ptr [rcx + rdx], xmm0 ; ret
0x0000000000104cb9 : and al, 0xff ; je 0x104cf0 ; add rsp, 0x28 ; ret
0x0000000000104da0 : and al, 0xff ; jne 0x104dd8 ; add rsp, 0x28 ; ret
0x0000000000104bfc : and al, 0xff ; sete al ; add rsp, 0x18 ; ret
0x000000000012fec1 : and al, 1 ; add al, bl ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x0000000000143b65 : and al, 1 ; add byte ptr [rax], bl ; adc edi, esp ; call qword ptr [rbx]
0x00000000000fd24f : and al, 8 ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x28 ; ret
0x0000000000104eb8 : and al, 8 ; add dh, byte ptr [rbp + 0xb] ; add rsp, 0x48 ; ret
0x000000000001f496 : and al, 8 ; add r15, rbp ; call r14
0x00000000001059c2 : and al, 8 ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000268e5 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000b3e15 : and al, 8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000fd799 : and al, 8 ; call r12
0x000000000001f510 : and al, 8 ; call r14
0x00000000000f170a : and al, 8 ; call rcx
0x00000000000f1711 : and al, 8 ; mov dword ptr [rdx + 8], eax ; add rsp, 0x18 ; ret
0x00000000000f472a : and al, 8 ; mov rdi, r12 ; call rax
0x0000000000108546 : and al, 8 ; mov rdi, r15 ; call rax
0x00000000001013c3 : and al, 8 ; mov rdi, rax ; call rdx
0x00000000000f448d : and al, 8 ; mov rdi, rsi ; call rax
0x0000000000033bee : and al, 8 ; mov rdx, rax ; jmp 0x33baa
0x0000000000033bed : and al, 8 ; mov rdx, rax ; jmp 0x33bab
0x0000000000032786 : and al, 8 ; mov rdx, rcx ; xor esi, esi ; call qword ptr [rax]
0x0000000000033a73 : and al, 8 ; sub rdx, rdi ; xor esi, esi ; call qword ptr [r14]
0x0000000000032754 : and al, 8 ; sub rdx, rdi ; xor esi, esi ; call qword ptr [rax]
0x000000000012e3a5 : and bh, al ; call rsp
0x00000000001309b5 : and bh, ch ; jmp qword ptr [rax]
0x00000000000f9d6e : and bl, al ; mov eax, 0xba ; syscall ; ret
0x00000000000e87f7 : and bl, dh ; ret
0x00000000000eb789 : and byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000010d0c8 : and byte ptr [rax + 0x39], cl ; ret 0xea75
0x000000000010c81a : and byte ptr [rax + 0x39], cl ; ret 0xf075
0x00000000001010da : and byte ptr [rax + 0x39], cl ; sal byte ptr [rbp + 8], 1 ; ret
0x000000000010d80a : and byte ptr [rax + 0x39], cl ; sal dword ptr [rbp - 0x10], 1 ; ret
0x0000000000112108 : and byte ptr [rax + 0xf], cl ; ret 0x8c89
0x000000000000049b : and byte ptr [rax - 0x33e6ab7b], 0x18 ; adc al, byte ptr [rcx] ; ret 0x8010
0x000000000010a745 : and byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000f6934 : and byte ptr [rax - 0x77], cl ; pop rax ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000031898 : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000fa789 : and byte ptr [rax - 0x80], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b66c : and byte ptr [rax - 2], al ; call qword ptr [rax]
0x00000000000f16cf : and byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x00000000000f4ea3 : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001e8be : and byte ptr [rax], al ; mov qword ptr [rsi], rax ; ret
0x00000000000f7ba3 : and byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000003cf : and byte ptr [rax], al ; ret 0
0x0000000000116e90 : and byte ptr [rbp - 0xf], dl ; call qword ptr [rax]
0x00000000001145db : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0x000000000002e01e : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000296d1 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000000350b : and byte ptr [rbx + 0x73], ch ; mov edx, 0x80d5bb25 ; ret 0x8e4e
0x0000000000104028 : and byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000fa5ae : and byte ptr [rdi + rax], dl ; ret
0x00000000001065ef : and byte ptr [rdi - 0x20], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000eb78a : and byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000000e764f : and byte ptr [rdx], al ; add byte ptr [rax], al ; call rax
0x00000000000e7b8f : and byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, rbp ; xor esi, esi ; call rax
0x00000000000e79c4 : and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e7b0d : and byte ptr [rdx], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000000e77a0 : and byte ptr [rdx], al ; add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x00000000000e796b : and byte ptr [rdx], al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000013d9a1 : and byte ptr [rdx], al ; ret
0x00000000000e878f : and byte ptr [rdx], bh ; cmovae rax, rdx ; ret
0x0000000000117723 : and byte ptr [rip - 0x1ffff590], ah ; pop rsi ; int1 ; call rax
0x00000000001464a0 : and byte ptr [rsi + 1], cl ; add byte ptr [rax + rdx*8], cl ; cld ; jmp qword ptr [rdi]
0x00000000000f16d0 : and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000000000777bf : and byte ptr [rsi], cl ; add rsp, 0x28 ; ret
0x000000000007783f : and byte ptr [rsi], cl ; add rsp, 0x38 ; ret
0x00000000001230ac : and byte ptr [rsi], dh ; cld ; call qword ptr [rax]
0x000000000007783e : and byte ptr es:[rsi], cl ; add rsp, 0x38 ; ret
0x000000000012f435 : and cl, bh ; call rax
0x00000000000e9f2d : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000113004 : and cl, cl ; ret
0x00000000000f9c97 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; ret
0x0000000000100aa3 : and dword ptr [rbx + 2], edi ; add byte ptr [rcx], dh ; shr al, 0xa2 ; ret 0xffff
0x000000000003812a : and dword ptr [rbx], ecx ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000031b1 : and dword ptr [rcx], edi ; ret
0x0000000000023059 : and dword ptr [rdx + 0x49000000], 0xffffff89 ; ret 0x1bf
0x0000000000100c9b : and eax, 0 ; ret
0x0000000000104234 : and eax, 0x10 ; ret
0x000000000005536b : and eax, 0x3907e283 ; ret 0x1e7c
0x00000000000f4d67 : and eax, 0x480000d4 ; mov edi, ebp ; call rdx
0x00000000000f0f77 : and eax, 0x5d5b0000 ; pop r12 ; ret
0x00000000000f57aa : and eax, 0x83482b74 ; ret
0x00000000000e02da : and eax, 0x8c48348 ; ret
0x000000000012fef9 : and eax, 0x9a580001 ; sti ; jmp qword ptr [rax]
0x0000000000117724 : and eax, 0xe0000a70 ; pop rsi ; int1 ; call rax
0x00000000000dd3c4 : and eax, 0xe8000000 ; ret
0x00000000000fdd06 : and eax, 0xfffff ; ret
0x000000000001c316 : and eax, 0xffffff ; ret
0x00000000000fa5fb : and eax, 1 ; ret
0x000000000001c329 : and eax, 3 ; ret
0x000000000005dfa7 : and eax, ebp ; ret
0x00000000000c0ba8 : and eax, ebp ; ret 0x3e0
0x000000000008eba8 : and eax, ebp ; ret 0x700
0x00000000000842a8 : and eax, ebp ; ret 0x7a9
0x000000000007d9a8 : and eax, ebp ; ret 0x812
0x000000000005f6a8 : and eax, ebp ; ret 0x9f5
0x000000000005d1a8 : and eax, ebp ; ret 0xa1a
0x0000000000122660 : and ebx, esi ; sti ; jmp qword ptr [rax]
0x00000000000302d2 : and ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002ce4c : and ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000a81ff : and ecx, dword ptr [rdi] ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb01
0x0000000000034c92 : and edi, 7 ; cmp edi, edx ; setl al ; ret
0x000000000013dec5 : and edi, edx ; call qword ptr [rdi]
0x000000000001f06c : and esi, 0x3f ; or esi, eax ; mov byte ptr [rdx + 7], sil ; ret
0x00000000000fae30 : and esi, 8 ; jne 0xfae3d ; ret
0x00000000000fab68 : and esi, eax ; sub rsi, rdi ; call r12
0x00000000000f8f99 : and esi, ebx ; ret
0x000000000003123a : and esp, 0xffffffe0 ; call qword ptr [rbx]
0x00000000000e87f6 : and r11b, r14b ; ret
0x0000000000031239 : and r12, 0xffffffffffffffe0 ; call qword ptr [rbx]
0x00000000000fab67 : and rsi, r8 ; sub rsi, rdi ; call r12
0x00000000000f6b3a : bnd jae 0xf6b1a ; ret
0x0000000000058fad : bswap ebp ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x58f7e
0x00000000000f6b38 : bt edx, esi ; jae 0xf6b1c ; ret
0x00000000000f6b62 : bt esi, edx ; jb 0xf6b76 ; ret
0x00000000000f6b37 : bt rdx, rsi ; jae 0xf6b1d ; ret
0x00000000000f6b61 : bt rsi, rdx ; jb 0xf6b77 ; ret
0x00000000000f9d16 : call 0x100e2667
0x0000000000075ef0 : call 0x102192
0x00000000000d0e79 : call 0x102198
0x00000000000599df : call 0x105cc2
0x0000000000112477 : call 0x10e682
0x0000000000112d6c : call 0x10f072
0x000000000010e464 : call 0x10f7a6
0x000000000012d474 : call 0x1112c657
0x000000000012d6a4 : call 0x1112c93b
0x000000000012d724 : call 0x1112c9d8
0x000000000012d7a4 : call 0x1112ca75
0x000000000012e684 : call 0x1112df23
0x000000000013031c : call 0x1112ff70
0x000000000010f83a : call 0x1bb02
0x000000000001f955 : call 0x1bb62
0x000000000012e874 : call 0x2112e12c
0x0000000000025238 : call 0x21452
0x0000000000133b28 : call 0x22132b37
0x0000000000144948 : call 0x28144591
0x00000000000e24c7 : call 0x2bf46
0x000000000003896f : call 0x34c22
0x000000000001d4ab : call 0x48c45dfb
0x000000000001e945 : call 0x48c47295
0x000000000001ed47 : call 0x48c47697
0x000000000002a0e8 : call 0x48c9da3d
0x000000000008d9ab : call 0x48cb62fb
0x000000000008db63 : call 0x48cb64b3
0x000000000008dbb3 : call 0x48cb6503
0x00000000000aadec : call 0x48cd373c
0x00000000000aafd3 : call 0x48cd3923
0x00000000000ab015 : call 0x48cd3965
0x00000000000aed28 : call 0x48cd7678
0x00000000000af065 : call 0x48cd79b5
0x00000000000af0b0 : call 0x48cd7a00
0x00000000000b1995 : call 0x48cda2e5
0x00000000000b1bc3 : call 0x48cda513
0x00000000000b1c13 : call 0x48cda563
0x00000000000b9be4 : call 0x48ce2534
0x00000000000b9ddb : call 0x48ce272b
0x00000000000b9e1b : call 0x48ce276b
0x00000000000bc109 : call 0x48ce4a59
0x00000000000bc311 : call 0x48ce4c61
0x00000000000bc35c : call 0x48ce4cac
0x000000000012f958 : call 0x812fa6e
0x0000000000020e5c : call 0xdd0e2
0x000000000001cd80 : call 0xdd0e9
0x0000000000052325 : call 0xde5c2
0x00000000000e1aa2 : call 0xe0b28
0x00000000000a6ed8 : call 0xe3192
0x0000000000087dbc : call 0xe3196
0x0000000000077ec7 : call 0xe4192
0x00000000001149ba : call 0xe4c48
0x000000000005a780 : call 0xe69f2
0x000000000006bd23 : call 0xe7f52
0x000000000004c536 : call 0xe8782
0x000000000004c545 : call 0xe87c2
0x000000000005dfc7 : call 0xea242
0x00000000000f64c0 : call 0xeab69
0x000000000010b0a2 : call 0xf7392
0x00000000000fbe49 : call 0xf80d2
0x00000000000e4391 : call 0xfa0b8
0x00000000000e22fe : call 0xfa0b9
0x00000000000e231e : call 0xfa129
0x00000000001062bd : call 0xfa1c6
0x00000000000e22ef : call 0xfaf89
0x00000000000de4af : call 0xfccb6
0x00000000000203fa : call 0xfccb7
0x00000000000e5fb1 : call 0xfccb8
0x0000000000100aa9 : call 0xfcd52
0x00000000000cf802 : call 0xfcd56
0x00000000000d61be : call 0xfcd57
0x0000000000112c3b : call 0xfd36482
0x0000000000042a4e : call 0xfec72
0x00000000000f9b3a : call 0xff12490
0x00000000001073b5 : call 0xffffffff89594c34
0x000000000012e2ec : call 0xffffffffa512dabc
0x0000000000002fea : call 0xffffffffc21d489e
0x000000000008db8a : call 0xffffffffc2922394
0x00000000000aefd2 : call 0xffffffffc29437dc
0x00000000000afb5e : call 0xffffffffc2944368
0x00000000000b10d2 : call 0xffffffffc29458dc
0x00000000000b1b36 : call 0xffffffffc2946340
0x00000000000b1bea : call 0xffffffffc29463f4
0x00000000000b2862 : call 0xffffffffc294706c
0x00000000000b33aa : call 0xffffffffc2947bb4
0x00000000000b3462 : call 0xffffffffc2947c6c
0x00000000000ec92a : call 0xffffffffc2981542
0x00000000000ee46b : call 0xffffffffc2983083
0x0000000000000802 : call 0xffffffffc3000c13
0x0000000000000801 : call 0xffffffffc3000c14
0x00000000000480ef : call 0xffffffffc30480f8
0x0000000000048112 : call 0xffffffffc304811b
0x000000000004826a : call 0xffffffffc3048273
0x000000000004828a : call 0xffffffffc3048293
0x0000000000048348 : call 0xffffffffc3048351
0x000000000004836a : call 0xffffffffc3048373
0x00000000000484bf : call 0xffffffffc30484c8
0x00000000000484e2 : call 0xffffffffc30484eb
0x000000000004863a : call 0xffffffffc3048643
0x000000000004865a : call 0xffffffffc3048663
0x0000000000048aaa : call 0xffffffffc3048ab3
0x0000000000048aca : call 0xffffffffc3048ad3
0x0000000000048b83 : call 0xffffffffc3048b8c
0x0000000000048bad : call 0xffffffffc3048bb6
0x00000000000493ba : call 0xffffffffc30493c3
0x00000000000493da : call 0xffffffffc30493e3
0x000000000001c328 : call 0xffffffffc305a3b4
0x00000000000926ca : call 0xffffffffc30926d3
0x00000000000926ea : call 0xffffffffc30926f3
0x00000000000a898f : call 0xffffffffc30a8998
0x00000000000a89b2 : call 0xffffffffc30a89bb
0x00000000000a8b1a : call 0xffffffffc30a8b23
0x00000000000a8b3a : call 0xffffffffc30a8b43
0x00000000000a8c9a : call 0xffffffffc30a8ca3
0x00000000000a8cba : call 0xffffffffc30a8cc3
0x00000000000a8e1f : call 0xffffffffc30a8e28
0x00000000000a8e42 : call 0xffffffffc30a8e4b
0x00000000000a8faa : call 0xffffffffc30a8fb3
0x00000000000a8fca : call 0xffffffffc30a8fd3
0x00000000000a912a : call 0xffffffffc30a9133
0x00000000000a914a : call 0xffffffffc30a9153
0x00000000001003f4 : call 0xffffffffc31003fd
0x000000000001d026 : call 0xffffffffc346097b
0x0000000000025d95 : call 0xffffffffc387a69f
0x000000000002631d : call 0xffffffffc387ac27
0x00000000000e6fcd : call 0xffffffffc391b7d9
0x000000000012d09c : call 0xffffffffd112c158
0x000000000012e604 : call 0xffffffffd112dea2
0x000000000012e814 : call 0xffffffffd112e0c6
0x0000000000130cb4 : call 0xffffffffd1130a23
0x000000000012d964 : call 0xffffffffd512cd05
0x000000000012ecb4 : call 0xffffffffd512e5a6
0x000000000013f0c8 : call 0xffffffffd513eb49
0x0000000000134388 : call 0xffffffffd71333fb
0x000000000012e32c : call 0xffffffffe512db0e
0x000000000012f0a4 : call 0xffffffffe512e9b1
0x000000000012fa74 : call 0xffffffffe512f586
0x000000000013062c : call 0xffffffffe5130308
0x0000000000131614 : call 0xffffffffe5131499
0x0000000000114b09 : call qword ptr [r12 + rbx*8]
0x000000000003397e : call qword ptr [r14]
0x00000000000df6ae : call qword ptr [r15]
0x000000000013124f : call qword ptr [rax + rcx*4 + 0x6880001]
0x000000000008994e : call qword ptr [rax - 0x18]
0x0000000000033ed6 : call qword ptr [rax]
0x000000000003123d : call qword ptr [rbx]
0x000000000013dd67 : call qword ptr [rcx]
0x00000000000b8a3d : call qword ptr [rdi]
0x000000000012e22f : call qword ptr [rdx + rax*8]
0x000000000013182b : call qword ptr [rdx]
0x000000000008d6d7 : call qword ptr [rip + 0x4cc2ab]
0x000000000008d6a8 : call qword ptr [rip + 0x4cc2da]
0x000000000002b5ad : call qword ptr [rsi]
0x0000000000114b0a : call qword ptr [rsp + rbx*8]
0x00000000000fab6d : call r12
0x000000000001f49b : call r14
0x00000000001021c4 : call rax
0x0000000000114781 : call rbx
0x0000000000026cdb : call rcx
0x0000000000001f4b : call rdi
0x00000000000f4d6e : call rdx
0x000000000001f49c : call rsi
0x00000000000a87bd : call rsp
0x00000000000af9b9 : cdq ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000103862 : cdq ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x103878 ; ret
0x00000000000e06dd : cdq ; add rdx, rcx ; jmp rdx
0x000000000012d965 : cdq ; call rsp
0x00000000000f69b3 : cdq ; imul eax, dword ptr [rax], -0x7b ; div byte ptr [rbp + 6] ; ret
0x00000000000e072a : cdq ; pop rdi ; add eax, dword ptr [rax] ; jmp 0xe06fe
0x000000000007c3e3 : cdq ; ret
0x0000000000002d48 : cdq ; ret 0x28fb
0x000000000002a47b : cdq ; ret 0xe
0x00000000000025e9 : cdq ; sar byte ptr [rdx - 0x413c6459], cl ; test al, 0x9b ; ret
0x0000000000140528 : clc ; adc ebx, edi ; jmp rsp
0x0000000000122940 : clc ; adc edi, esp ; call qword ptr [rax]
0x000000000012f03c : clc ; add al, 0xf9 ; jmp rax
0x0000000000141978 : clc ; add al, byte ptr [rcx] ; add ah, ah ; xchg eax, esp ; sti ; jmp qword ptr [rcx]
0x000000000010fa69 : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000012f3e9 : clc ; add byte ptr [rax], al ; js 0x12f40b ; stc ; call rsp
0x00000000000ea472 : clc ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000012f401 : clc ; add byte ptr [rax], al ; test al, 0x17 ; stc ; call qword ptr [rax]
0x0000000000001f43 : clc ; add byte ptr [rbp - 0x1d], dl ; sar byte ptr [rax - 0x44], cl ; in al, dx ; call rdi
0x00000000000fac9b : clc ; add dword ptr [rcx + rcx - 0xd], esi ; ret
0x00000000000fa5fa : clc ; and eax, 1 ; ret
0x000000000012e686 : clc ; call qword ptr [rax]
0x000000000012e606 : clc ; call rax
0x000000000012e3a6 : clc ; call rsp
0x000000000012cbe4 : clc ; cmp ch, bh ; call rax
0x0000000000002a4e : clc ; cmp edi, edx ; mov cl, 9 ; ret
0x00000000000f8e59 : clc ; cmp rax, r8 ; jbe 0xf8e1e ; xor eax, eax ; ret
0x00000000000fef13 : clc ; cmp rax, rcx ; jne 0xfef0f ; pop rbx ; ret
0x000000000012ea5e : clc ; dec dword ptr [rax + 0x180000dd] ; ret 0xfff8
0x0000000000114591 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000012e86e : clc ; dec dword ptr [rax + rbx*8] ; add byte ptr [rax], al ; call 0x2112e132
0x00000000000fb8f0 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012e90e : clc ; dec esp ; fld dword ptr [rax] ; add al, cl ; mov ah, 0xf8 ; jmp rax
0x000000000012ec26 : clc ; dec esp ; loop 0x12ec34 ; add byte ptr [rax - 0x24], bh ; clc ; jmp rax
0x000000000012edce : clc ; dec esp ; out 0, eax ; add al, bh ; out dx, eax ; clc ; jmp rax
0x0000000000001f75 : clc ; fsub qword ptr [rdi + 0x2c4d28ef] ; ret 0xda
0x000000000012e39e : clc ; inc eax ; enter 0, 0x78 ; and bh, al ; call rsp
0x000000000012ea0e : clc ; inc eax ; fadd qword ptr [rax] ; add byte ptr [rax - 0x3f], bh ; clc ; call rsp
0x000000000012eb76 : clc ; inc eax ; loopne 0x12eb84 ; add al, bh ; leave ; clc ; call rsp
0x000000000012d4c5 : clc ; int1 ; call rax
0x0000000000104b0b : clc ; ja 0x104b58 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012e42e : clc ; jmp qword ptr [rax]
0x000000000012e49e : clc ; jmp rax
0x000000000012e45e : clc ; jmp rsp
0x00000000000e761e : clc ; jne 0xe7615 ; ret
0x00000000000e7a8e : clc ; jne 0xe7a85 ; ret
0x000000000012eb7c : clc ; leave ; clc ; call rsp
0x00000000000fac3c : clc ; leave ; ret
0x000000000012e4e6 : clc ; ljmp ptr [rbp + rcx*8 - 0x6de80000] ; clc ; jmp rsp
0x000000000005642e : clc ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x563fd
0x000000000012f1c4 : clc ; or bh, cl ; jmp rax
0x000000000012f244 : clc ; or edi, ecx ; jmp qword ptr [rax]
0x000000000012dc24 : clc ; out dx, al ; hlt ; call rax
0x000000000012edd4 : clc ; out dx, eax ; clc ; jmp rax
0x0000000000130cf4 : clc ; outsb dx, byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x00000000000ecac2 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ea6e : clc ; push qword ptr [rax + 0x380000dd] ; ret 0xfff8
0x000000000012eac6 : clc ; push qword ptr [rax + 0x380000de] ; ret
0x000000000012ea56 : clc ; push qword ptr [rbp + rbx*8] ; add byte ptr [rax], cl ; ret 0xfff8
0x000000000012e426 : clc ; push rax ; retf 0 ; or byte ptr [rsi - 8], ah ; jmp qword ptr [rax]
0x000000000001c167 : clc ; ret
0x00000000000d04a4 : clc ; ret 4
0x00000000001310ec : clc ; sar ebp, -1 ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x1310fd ; add byte ptr [rax], cl ; ret 0xfffd
0x000000000012e16c : clc ; sbb bh, dh ; call qword ptr [rax]
0x000000000012ff8c : clc ; scasd eax, dword ptr [rdi] ; sti ; call rax
0x000000000012f5fc : clc ; stc ; call rax
0x0000000000122714 : clc ; stc ; sti ; call qword ptr [rax]
0x0000000000122688 : clc ; sti ; call qword ptr [rax]
0x000000000012d4d4 : clc ; sti ; int1 ; call qword ptr [rax]
0x000000000012e60c : clc ; xchg eax, esi ; clc ; jmp rsp
0x0000000000134c58 : clc ; xor esi, ecx ; jmp rcx
0x00000000001412f9 : cld ; add byte ptr [rax], al ; in al, 0x89 ; sti ; call qword ptr [rbx]
0x000000000012f4d1 : cld ; add byte ptr [rax], al ; or byte ptr [rdi], ch ; stc ; jmp qword ptr [rax]
0x000000000012cae8 : cld ; add byte ptr [rax], r8b ; stc ; out dx, al ; call qword ptr [rax]
0x000000000010bbc4 : cld ; add dword ptr [rax], eax ; add al, ch ; ret
0x000000000012f810 : cld ; add eax, 0x6b080001 ; stc ; call qword ptr [rax]
0x00000000001305f0 : cld ; add qword ptr [rax], rax ; or bl, dl ; cld ; call qword ptr [rax]
0x00000000001228ee : cld ; call qword ptr [rax]
0x0000000000143b6a : cld ; call qword ptr [rbx]
0x0000000000144e3e : cld ; call qword ptr [rcx]
0x0000000000145992 : cld ; call qword ptr [rdi]
0x00000000001449ba : cld ; call qword ptr [rdx]
0x00000000001443be : cld ; call qword ptr [rsi]
0x00000000001230be : cld ; call rax
0x000000000014377a : cld ; call rcx
0x0000000000143f96 : cld ; call rdi
0x00000000001460e6 : cld ; call rsi
0x0000000000122812 : cld ; call rsp
0x000000000012f400 : cld ; clc ; add byte ptr [rax], al ; test al, 0x17 ; stc ; call qword ptr [rax]
0x000000000012eedd : cld ; clc ; call qword ptr [rax]
0x00000000001226d4 : cld ; cmc ; sti ; jmp rsp
0x0000000000130318 : cld ; cmp al, byte ptr [rcx] ; add al, ch ; cld ; call qword ptr [rax]
0x00000000001304d6 : cld ; dec dword ptr [rax*2 - 0x48f7ffff] ; cld ; jmp qword ptr [rax]
0x00000000001227aa : cld ; dec dword ptr [rax] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000122882 : cld ; dec dword ptr [rax] ; or al, 0xfc ; jmp qword ptr [rax]
0x0000000000130686 : cld ; dec dword ptr [rbx + rcx*2] ; add dword ptr [rax], eax ; fdivr st(4) ; jmp qword ptr [rax]
0x0000000000130216 : cld ; dec dword ptr [rsi + rsi] ; add dword ptr [rax], eax ; js 0x130264 ; cld ; jmp qword ptr [rax]
0x0000000000122936 : cld ; dec eax ; adc edi, esp ; jmp rax
0x00000000001304f6 : cld ; dec esp ; add dword ptr [r8], r8d ; cwde ; ret
0x0000000000130576 : cld ; dec esp ; add dword ptr [r8], r8d ; mov cl, dl ; cld ; jmp rax
0x0000000000122846 : cld ; dec esp ; or ah, bh ; jmp rsp
0x000000000012eff8 : cld ; in eax, dx ; add byte ptr [rax], al ; fadd dword ptr [rcx] ; stc ; call qword ptr [rax]
0x00000000001228e6 : cld ; inc dword ptr [rax + 0x10] ; cld ; ljmp ptr [rax] ; adc ah, bh ; call qword ptr [rax]
0x00000000001230a2 : cld ; inc dword ptr [rax + 0x36] ; cld ; push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x0000000000130896 : cld ; inc dword ptr [rax - 0x27fffeac] ; stc ; cld ; call rax
0x00000000001230f2 : cld ; inc dword ptr [rax] ; xor eax, 0x34f0fffc ; cld ; jmp rax
0x00000000001307ae : cld ; inc eax ; add qword ptr [r8], r8 ; mov ch, ah ; cld ; call rsp
0x0000000000134d24 : cld ; int1 ; jmp rcx
0x0000000000131108 : cld ; jg 0x131111 ; add al, bl ; ret 0xfffd
0x00000000001227ae : cld ; jmp qword ptr [rax]
0x0000000000144326 : cld ; jmp qword ptr [rcx]
0x000000000014494a : cld ; jmp qword ptr [rdi]
0x0000000000144992 : cld ; jmp qword ptr [rdx]
0x0000000000144eea : cld ; jmp qword ptr [rsi]
0x00000000001228f6 : cld ; jmp rax
0x0000000000143db2 : cld ; jmp rbx
0x00000000001459de : cld ; jmp rdi
0x0000000000122ab6 : cld ; jmp rsi
0x000000000012284a : cld ; jmp rsp
0x0000000000130866 : cld ; ljmp ptr [rax + 0x78000153] ; hlt ; cld ; jmp rsp
0x00000000001228ea : cld ; ljmp ptr [rax] ; adc ah, bh ; call qword ptr [rax]
0x000000000012dbb8 : cld ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; js 0x12db89 ; hlt ; call qword ptr [rax]
0x000000000005608e : cld ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5605d
0x000000000012f8f0 : cld ; or byte ptr [rcx], al ; add byte ptr [rax], cl ; jle 0x12f8f7 ; call qword ptr [rax]
0x000000000013fe7c : cld ; out 0, eax ; add byte ptr [rax - 0x35], al ; cli ; jmp rdi
0x00000000000de4b0 : cld ; out 1, eax ; add cl, ch ; ret 0xfffd
0x0000000000122842 : cld ; push qword ptr [rax + rcx + 0x8ccfffc] ; cld ; jmp rsp
0x0000000000122932 : cld ; push qword ptr [rax - 0x370003ed] ; adc edi, esp ; jmp rax
0x00000000001230a6 : cld ; push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x00000000001230e6 : cld ; push qword ptr [rax] ; xor eax, 0x3520fffc ; cld ; call qword ptr [rax]
0x00000000001227a6 : cld ; push rax ; add ah, bh ; dec dword ptr [rax] ; add esp, edi ; jmp qword ptr [rax]
0x000000000012287e : cld ; push rax ; or edi, esp ; dec dword ptr [rax] ; or al, 0xfc ; jmp qword ptr [rax]
0x00000000001230f6 : cld ; push rax ; xor al, 0xfc ; jmp rax
0x00000000001230b6 : cld ; push rax ; xor eax, 0x35e0fffc ; cld ; call rax
0x00000000001303fe : cld ; push rsp ; add dword ptr [rax], eax ; js 0x1303af ; cld ; jmp qword ptr [rax]
0x00000000000e1a80 : cld ; ret
0x000000000012e680 : cld ; rol dword ptr [rax], 1 ; add al, ch ; xchg eax, edi ; clc ; call qword ptr [rax]
0x0000000000136c64 : cld ; sal ebx, cl ; call qword ptr [rbx]
0x00000000000e3700 : cld ; scasb al, byte ptr [rdi] ; add byte ptr [r8 - 0x77], r9b ; ret
0x0000000000144324 : cld ; sub edi, esp ; jmp qword ptr [rcx]
0x000000000012d4d0 : cld ; xchg dword ptr [rax], eax ; add al, bh ; sti ; int1 ; call qword ptr [rax]
0x000000000012d7a0 : cld ; xchg eax, ebx ; add byte ptr [rax], al ; call 0x1112ca79
0x000000000012d720 : cld ; xchg eax, ecx ; add byte ptr [rax], al ; call 0x1112c9dc
0x00000000000f580f : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000fc327 : cli ; add dword ptr [rax + 0x63], ecx ; ret 0x8b48
0x000000000010e49b : cli ; add eax, 0x428d3174 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6602
0x0000000000111855 : cli ; add eax, 0x4a8d7f74 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4802
0x00000000000339b9 : cli ; add rdx, 0x7fff8001 ; call qword ptr [r14]
0x0000000000032be7 : cli ; add rdx, 0x7fff8001 ; call qword ptr [rax]
0x00000000000df21c : cli ; add rdx, 0x7fff8001 ; call rax
0x0000000000113ba1 : cli ; add rsp, 8 ; ret
0x0000000000031238 : cli ; and r12, 0xffffffffffffffe0 ; call qword ptr [rbx]
0x00000000000df6ad : cli ; call qword ptr [r15]
0x000000000012f926 : cli ; call qword ptr [rax]
0x000000000013dd66 : cli ; call qword ptr [rcx]
0x000000000013dec6 : cli ; call qword ptr [rdi]
0x000000000013fb72 : cli ; call qword ptr [rdx]
0x000000000013e0e2 : cli ; call qword ptr [rsi]
0x000000000012f9be : cli ; call rax
0x000000000013f852 : cli ; call rdx
0x000000000012f9ee : cli ; call rsp
0x00000000000026b2 : cli ; cmp eax, 0xedd4b27b ; ret 0xae7d
0x000000000012fa36 : cli ; dec dword ptr [rdi + rcx] ; add dword ptr [rax], eax ; mov dh, bh ; cli ; jmp qword ptr [rax]
0x000000000012f95e : cli ; jmp qword ptr [rax]
0x000000000013f332 : cli ; jmp qword ptr [rbx]
0x00000000000312e3 : cli ; jmp rax
0x000000000013fd72 : cli ; jmp rbx
0x000000000013fbaa : cli ; jmp rcx
0x000000000013fe82 : cli ; jmp rdi
0x00000000000f72f5 : cli ; jne 0xf72ed ; xor eax, eax ; ret
0x00000000000f732f : cli ; jne 0xf7324 ; ret
0x00000000000fda4f : cli ; jo 0xfda65 ; xchg eax, esp ; ret 0x841
0x0000000000002a50 : cli ; mov cl, 9 ; ret
0x00000000000de0ae : cli ; mov esi, 0xf7 ; call qword ptr [rax]
0x0000000000033a98 : cli ; mov rdi, r15 ; call qword ptr [r14]
0x0000000000108cd2 : cli ; or byte ptr [rdi + 0xa], dh ; xor eax, eax ; ret
0x00000000000fcf8b : cli ; or dword ptr [rsi - 0x33], esi ; ret
0x00000000000fd03a : cli ; pcmpeqd mm1, mm6 ; ret
0x00000000000f7805 : cli ; push qword ptr [rbp - 0x11] ; ret
0x00000000000f167a : cli ; push qword ptr [rbp - 0x16] ; ret
0x000000000009c382 : cli ; ret
0x00000000000fe608 : cli ; shl rcx, 0x20 ; or rdx, rcx ; ret
0x0000000000033a77 : cli ; xor esi, esi ; call qword ptr [r14]
0x0000000000032758 : cli ; xor esi, esi ; call qword ptr [rax]
0x000000000010f796 : cmc ; adc al, 0xea ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ea832 : cmc ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000012f2e1 : cmc ; add byte ptr [rax], al ; or byte ptr [rax], dl ; stc ; jmp rax
0x000000000012dd26 : cmc ; call qword ptr [rax]
0x000000000012dcde : cmc ; call rax
0x0000000000137f36 : cmc ; call rdx
0x00000000000e5b97 : cmc ; in eax, 0xff ; lcall ptr [rax + 0x5a] ; leave ; ret
0x000000000012dd66 : cmc ; jmp qword ptr [rax]
0x000000000012dc66 : cmc ; jmp rax
0x00000000000e2f07 : cmc ; mov dh, 0x47 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000001bb9 : cmc ; mov esi, 0xab7b7e3 ; ret
0x000000000012dc5e : cmc ; push qword ptr [rax - 0x47ffff58] ; or dh, ch ; jmp rax
0x00000000000f8e8a : cmc ; ret
0x000000000010b337 : cmc ; ret 0x23
0x00000000001301e5 : cmc ; sti ; jmp qword ptr [rax]
0x00000000001226d5 : cmc ; sti ; jmp rsp
0x000000000001b897 : cmc ; sti ; push rdx ; add byte ptr [rax], al ; ret
0x0000000000024e58 : cmova edx, ecx ; call qword ptr [rax]
0x0000000000024e57 : cmova rdx, rcx ; call qword ptr [rax]
0x00000000000e8796 : cmovae eax, edx ; ret
0x00000000000e8795 : cmovae rax, rdx ; ret
0x0000000000026cd5 : cmovbe edx, eax ; mov rdi, r15 ; call rcx
0x0000000000026cd4 : cmovbe rdx, rax ; mov rdi, r15 ; call rcx
0x00000000000e46f4 : cmove eax, dword ptr [rip + 0x479b9d] ; ret
0x00000000000facb1 : cmove eax, edx ; ret
0x00000000000e46f3 : cmove rax, qword ptr [rip + 0x479b9d] ; ret
0x00000000000f91a2 : cmovge ecx, dword ptr [rdi] ; ret
0x00000000000f91a1 : cmovge rcx, qword ptr [rdi] ; ret
0x00000000000f08ff : cmovne eax, edi ; ret
0x00000000000e7c0b : cmovne eax, edx ; add rsp, 8 ; ret
0x00000000000f08fe : cmovne rax, rdi ; ret
0x00000000000e7c0a : cmovne rax, rdx ; add rsp, 8 ; ret
0x00000000000f8f53 : cmovns eax, ecx ; ret
0x00000000000f8f52 : cmovns rax, rcx ; ret
0x0000000000108cb9 : cmovs eax, dword ptr [rbx + 0x5d5b18c4] ; ret
0x0000000000109928 : cmovs eax, dword ptr [rbx - 0x1776f73c] ; pop rbx ; pop rbp ; ret
0x00000000001024b8 : cmovs eax, dword ptr [rbx - 0x2f76f73c] ; pop rbx ; pop rbp ; ret
0x0000000000106008 : cmovs ecx, dword ptr [rbx - 0x74b7f7b9] ; add al, 0xf0 ; ret
0x0000000000108d48 : cmovs ecx, dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000000f1359 : cmp al, 0 ; jne 0xf1365 ; ret
0x0000000000097a00 : cmp al, 0x1f ; add byte ptr [rax - 0x77], r9b ; ret
0x0000000000104d9f : cmp al, 0x24 ; push qword ptr [rbp + 0x2c] ; add rsp, 0x28 ; ret
0x0000000000104cb8 : cmp al, 0x24 ; push qword ptr [rbx + rbp + 0x48] ; add esp, 0x28 ; ret
0x000000000013f934 : cmp al, 0xaa ; cli ; call rsp
0x000000000010200e : cmp al, 0xc2 ; mov eax, 1 ; ret
0x000000000010b09b : cmp al, 0xc2 ; mov edx, 8 ; call 0xf7399
0x00000000000dd838 : cmp al, 0xe ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000012d59d : cmp al, 0xf2 ; call rsp
0x00000000000e6be2 : cmp al, 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e6c00 : cmp al, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000b3112 : cmp al, 2 ; add byte ptr [rax - 0x77], cl ; ret 0x1674
0x00000000000b1c8a : cmp al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0x840f
0x00000000000f80e5 : cmp al, 7 ; add byte ptr [rbp - 0xa], dh ; ret
0x00000000000b3de4 : cmp al, byte ptr [rax] ; jne 0xb3e24 ; call rax
0x00000000000f2512 : cmp al, byte ptr [rax] ; jne 0xf2525 ; ret
0x000000000001c22b : cmp al, byte ptr [rax] ; setne al ; ret
0x000000000001c26b : cmp al, byte ptr [rbx] ; sete al ; ret
0x0000000000130319 : cmp al, byte ptr [rcx] ; add al, ch ; cld ; call qword ptr [rax]
0x000000000001c24b : cmp al, byte ptr [rdx] ; sete al ; ret
0x00000000000f737b : cmp al, cl ; setge al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000fbdd1 : cmp bh, 0x2f ; sete al ; ret
0x00000000000e563b : cmp bh, 0x7f ; add byte ptr [rbp + 7], dh ; ret
0x00000000000e551a : cmp bh, 0x7f ; add byte ptr [rbp + 8], dh ; ret
0x00000000000339be : cmp bh, 0x7f ; call qword ptr [r14]
0x0000000000033ed3 : cmp bh, 0x7f ; call qword ptr [rax]
0x00000000000df221 : cmp bh, 0x7f ; call rax
0x00000000000e6188 : cmp bh, 0x7f ; cmp rcx, rax ; jae 0xe61a1 ; pop rbx ; ret
0x00000000000313d7 : cmp bh, 0x7f ; jmp r8
0x00000000000def94 : cmp bh, 0x7f ; lodsb al, byte ptr [rsi] ; ret
0x000000000002ec3d : cmp bh, 0x7f ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000028a85 : cmp bh, 0x7f ; ret
0x00000000000e515b : cmp bh, 0x7f ; test al, al ; jne 0xe5170 ; ret
0x00000000000e51bb : cmp bh, 0x7f ; test al, al ; jne 0xe51d0 ; ret
0x00000000000e521b : cmp bh, 0x7f ; test al, al ; jne 0xe5230 ; ret
0x00000000000e527b : cmp bh, 0x7f ; test al, al ; jne 0xe5290 ; ret
0x00000000000e52eb : cmp bh, 0x7f ; test al, al ; jne 0xe5300 ; ret
0x00000000000e535b : cmp bh, 0x7f ; test al, al ; jne 0xe5370 ; ret
0x00000000000e53cb : cmp bh, 0x7f ; test al, al ; jne 0xe53e0 ; ret
0x00000000000e543b : cmp bh, 0x7f ; test al, al ; jne 0xe5450 ; ret
0x00000000000e54ab : cmp bh, 0x7f ; test al, al ; jne 0xe54c0 ; ret
0x00000000000e575b : cmp bh, 0x7f ; test al, al ; jne 0xe5770 ; ret
0x00000000000e57cb : cmp bh, 0x7f ; test al, al ; jne 0xe57e0 ; ret
0x00000000000e583b : cmp bh, 0x7f ; test al, al ; jne 0xe5850 ; ret
0x00000000000e58ab : cmp bh, 0x7f ; test al, al ; jne 0xe58c0 ; ret
0x00000000000e591b : cmp bh, 0x7f ; test al, al ; jne 0xe5930 ; ret
0x00000000000e598b : cmp bh, 0x7f ; test al, al ; jne 0xe59a0 ; ret
0x00000000000e59fb : cmp bh, 0x7f ; test al, al ; jne 0xe5a10 ; ret
0x00000000000e5a6b : cmp bh, 0x7f ; test al, al ; jne 0xe5a80 ; ret
0x00000000000e5adb : cmp bh, 0x7f ; test al, al ; jne 0xe5af0 ; ret
0x000000000002e834 : cmp bh, 0x7f ; xor eax, eax ; ret
0x00000000000fcf11 : cmp bh, 5 ; jbe 0xfcf26 ; ret
0x00000000000fcfc8 : cmp bh, 5 ; setbe al ; ret
0x0000000000130144 : cmp bh, bl ; sti ; jmp rsp
0x00000000001272e9 : cmp bh, ch ; jmp rsp
0x000000000012f9ec : cmp bh, dh ; cli ; call rsp
0x000000000012fb5d : cmp bl, bh ; jmp qword ptr [rax]
0x000000000012d8b5 : cmp bl, dh ; call rax
0x000000000012fb5c : cmp bl, dil ; jmp qword ptr [rax]
0x00000000000fc9b3 : cmp bpl, byte ptr [r11] ; ret
0x0000000000034027 : cmp byte ptr [rax + 0x1c], 0 ; jne 0x34037 ; ret
0x00000000000241c5 : cmp byte ptr [rax + 0x29], cl ; ret 0x8b4c
0x0000000000104967 : cmp byte ptr [rax + 0x31], 0 ; jne 0x104977 ; ret
0x000000000010b2c7 : cmp byte ptr [rax + 0x39], 0 ; jne 0x10b2d6 ; ret
0x000000000010b7b4 : cmp byte ptr [rax + 0x39], 0 ; jne 0x10b7c7 ; pop rbx ; ret
0x000000000010d827 : cmp byte ptr [rax + 0x39], 0 ; jne 0x10d837 ; ret
0x000000000010dc47 : cmp byte ptr [rax + 0x39], 0 ; jne 0x10dc57 ; ret
0x000000000010dcca : cmp byte ptr [rax + 0x39], 0 ; jne 0x10dce1 ; mov eax, ebx ; pop rbx ; ret
0x00000000000f1357 : cmp byte ptr [rax + 0x3c], 0 ; jne 0xf1367 ; ret
0x000000000010e057 : cmp byte ptr [rax + 0xc], 0 ; jne 0x10e067 ; ret
0x000000000010e317 : cmp byte ptr [rax + 1], 0 ; jne 0x10e327 ; ret
0x000000000001bd46 : cmp byte ptr [rax + 3], cl ; or byte ptr [rax + 0x39], cl ; ret
0x00000000000215b5 : cmp byte ptr [rax - 0x77], cl ; ret 0x4838
0x0000000000130dbc : cmp byte ptr [rax - 3], bh ; jmp rsp
0x000000000008d6a3 : cmp byte ptr [rax], 0 ; je 0x8d6c8 ; call qword ptr [rip + 0x4cc2da]
0x000000000001f043 : cmp byte ptr [rax], 2 ; sete al ; ret
0x00000000001074e9 : cmp byte ptr [rax], al ; je 0x107501 ; mov byte ptr [rbx + 0x68], 1 ; pop rbx ; ret
0x000000000008d6a4 : cmp byte ptr [rax], al ; je 0x8d6c7 ; call qword ptr [rip + 0x4cc2da]
0x000000000008df63 : cmp byte ptr [rax], al ; je 0x8df83 ; call 0xea246
0x00000000000be012 : cmp byte ptr [rax], al ; je 0xbe032 ; call 0xea246
0x00000000001404b8 : cmp byte ptr [rax], dl ; sti ; jmp qword ptr [rbx]
0x0000000000030b24 : cmp byte ptr [rbp + 0xb], bh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012cef4 : cmp byte ptr [rbp - 0x10], al ; call rax
0x0000000000067b73 : cmp byte ptr [rbp - 0x17e48b01], al ; ret
0x00000000000ddc74 : cmp byte ptr [rbp - 0x17e48b01], al ; ret 0xc5
0x00000000000cde30 : cmp byte ptr [rbp - 0x72b7ffb8], 5 ; ret
0x000000000012f68c : cmp byte ptr [rbp - 7], ah ; call qword ptr [rax]
0x00000000000b0d78 : cmp byte ptr [rbx + 0x39], 0 ; jne 0xb0d91 ; xor eax, eax ; pop rbx ; ret
0x000000000010e454 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000004d66d : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000010d1b3 : cmp byte ptr [rbx - 0x17e7f784], cl ; ret
0x0000000000145e14 : cmp byte ptr [rbx - 0x4ff1b3f9], al ; add al, 2 ; ret 0xb80e
0x00000000000fc074 : cmp byte ptr [rbx], cl ; sete al ; ret
0x00000000001067bd : cmp byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000012fbac : cmp byte ptr [rcx - 5], al ; jmp rax
0x0000000000144ee5 : cmp byte ptr [rcx], al ; add al, bl ; movsxd rdi, esp ; jmp qword ptr [rsi]
0x00000000001071df : cmp byte ptr [rcx], al ; pop rbp ; pop r12 ; sbb rax, -1 ; ret
0x00000000000f80e4 : cmp byte ptr [rdi + rax], 0 ; jne 0xf80e7 ; ret
0x00000000000f807b : cmp byte ptr [rdi - 1], 0 ; jne 0xf807b ; ret
0x00000000000fbde7 : cmp byte ptr [rdi], 0x2f ; sete al ; ret
0x0000000000033b30 : cmp byte ptr [rdi], 0x5f ; je 0x33b48 ; mov rax, rdi ; ret
0x000000000001ee6b : cmp byte ptr [rdi], cl ; xchg esi, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000001bd73 : cmp byte ptr [rdi], cl ; xchg esi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000b3de3 : cmp byte ptr [rdx], 0 ; jne 0xb3e25 ; call rax
0x000000000001c22a : cmp byte ptr [rdx], 0 ; setne al ; ret
0x000000000001c24a : cmp byte ptr [rdx], 2 ; sete al ; ret
0x000000000001c26a : cmp byte ptr [rdx], 3 ; sete al ; ret
0x000000000001f044 : cmp byte ptr [rdx], al ; sete al ; ret
0x00000000001443b8 : cmp byte ptr [rip + 0x2d540001], ch ; cld ; call qword ptr [rsi]
0x0000000000106f28 : cmp byte ptr [rsi + rdx - 1], 0xa ; je 0x106f40 ; ret
0x0000000000106f38 : cmp byte ptr [rsi + rdx - 2], 0xa ; sete al ; ret
0x0000000000107c5e : cmp byte ptr [rsi], 0 ; je 0x107c99 ; add rsp, 8 ; ret
0x00000000000ffd20 : cmp byte ptr [rsi], 0 ; jne 0xffd36 ; ret
0x0000000000144ee4 : cmp byte ptr fs:[rcx], al ; add al, bl ; movsxd rdi, esp ; jmp qword ptr [rsi]
0x000000000012cbe5 : cmp ch, bh ; call rax
0x0000000000130124 : cmp ch, bl ; sti ; jmp qword ptr [rax]
0x00000000000fc9b4 : cmp ch, byte ptr [rbx] ; ret
0x00000000000f79ac : cmp cl, al ; jne 0xf79a5 ; ret
0x00000000001311cc : cmp cl, ch ; std ; call qword ptr [rax]
0x00000000000f79ab : cmp cl, r8b ; jne 0xf79a6 ; ret
0x00000000000f6b1a : cmp dh, 9 ; sete al ; ret
0x00000000000efe15 : cmp dh, byte ptr [rax - 0x7cb79594] ; ret
0x000000000012dcdd : cmp dh, ch ; call rax
0x00000000000fbdd0 : cmp dil, 0x2f ; sete al ; ret
0x00000000000fcf10 : cmp dil, 5 ; jbe 0xfcf27 ; ret
0x00000000000fcfc7 : cmp dil, 5 ; setbe al ; ret
0x00000000000f8063 : cmp dl, cl ; jne 0xf805d ; ret
0x00000000000f1592 : cmp dword ptr [rax + 0x210], edx ; je 0xf15a9 ; ret
0x00000000000f0cd8 : cmp dword ptr [rax + 0x78], 0 ; jne 0xf0ce7 ; ret
0x00000000000f0d18 : cmp dword ptr [rax + 0x78], 0 ; jne 0xf0d27 ; ret
0x00000000000c22ef : cmp dword ptr [rax - 0x77], ecx ; fisttp word ptr [rcx + rcx*4 - 2] ; call 0xde5c9
0x000000000008df62 : cmp dword ptr [rax], 0 ; je 0x8df84 ; call 0xea247
0x00000000000be011 : cmp dword ptr [rax], 0 ; je 0xbe033 ; call 0xea247
0x00000000000fc073 : cmp dword ptr [rax], 0xb ; sete al ; ret
0x00000000000fa271 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; ret
0x000000000010b2c9 : cmp dword ptr [rax], eax ; jne 0x10b2d4 ; ret
0x000000000010b7b6 : cmp dword ptr [rax], eax ; jne 0x10b7c5 ; pop rbx ; ret
0x000000000010d829 : cmp dword ptr [rax], eax ; jne 0x10d835 ; ret
0x000000000010dc49 : cmp dword ptr [rax], eax ; jne 0x10dc55 ; ret
0x000000000010dccc : cmp dword ptr [rax], eax ; jne 0x10dcdf ; mov eax, ebx ; pop rbx ; ret
0x00000000000b0d7a : cmp dword ptr [rax], eax ; jne 0xb0d8f ; xor eax, eax ; pop rbx ; ret
0x00000000001050ef : cmp dword ptr [rax], edx ; sete al ; ret
0x00000000000bb643 : cmp dword ptr [rbx], 0 ; je 0xbb65e ; pop rbx ; ret
0x0000000000100cb1 : cmp dword ptr [rdi], -1 ; sete al ; ret
0x0000000000033cb1 : cmp dword ptr [rdi], 0 ; je 0x33cc6 ; ret
0x0000000000033ce1 : cmp dword ptr [rdi], 0 ; jne 0x33cf6 ; ret
0x000000000001dedb : cmp dword ptr [rdi], eax ; je 0x1def0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fe732 : cmp dword ptr [rdi], eax ; setb al ; ret
0x00000000000f2511 : cmp dword ptr [rdx], 0 ; jne 0xf2526 ; ret
0x0000000000102077 : cmp dword ptr [rip + 0xeae843], edi ; je 0x102100 ; ret
0x00000000000fe722 : cmp eax, 0x100000 ; jne 0xfe718 ; ret
0x000000000001c2cb : cmp eax, 0x20000 ; je 0x1c2e0 ; ret
0x00000000000eac6a : cmp eax, 0x25d3d1 ; ret
0x0000000000100aa2 : cmp eax, 0x27b21 ; xor eax, eax ; call 0xfcd59
0x00000000000fbe44 : cmp eax, 0x2b897 ; call 0xf80d7
0x00000000000e761d : cmp eax, 0x44 ; jne 0xe7616 ; ret
0x00000000000e7a8d : cmp eax, 0x44 ; jne 0xe7a86 ; ret
0x00000000000ead22 : cmp eax, 0x474b89 ; ret
0x00000000000eaca2 : cmp eax, 0x474c11 ; ret
0x00000000000e7431 : cmp eax, 0x477d92 ; ret
0x00000000000e62e1 : cmp eax, 0x4783a9 ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x000000000001b507 : cmp eax, 0x480032ca ; test eax, eax ; je 0x1b51b ; call rax
0x00000000000dd0c2 : cmp eax, 0x480da1 ; ret
0x000000000001e7f2 : cmp eax, 0x53a8a9 ; ret
0x00000000000e86df : cmp eax, 0x5800019a ; pop rbx ; pop rbp ; ret
0x00000000000fc9b2 : cmp eax, 0x6b3a49 ; ret
0x00000000000f1426 : cmp eax, 0x6bcd54 ; add byte ptr [rdx + rcx*2 - 0xd], dh ; ret
0x00000000000f0f91 : cmp eax, 0x6be209 ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000000f0d26 : cmp eax, 0x6bf475 ; ret
0x0000000000130389 : cmp eax, 0x86780001 ; cld ; call qword ptr [rax]
0x000000000014544d : cmp eax, 0x86a00001 ; cld ; jmp qword ptr [rcx]
0x0000000000105cea : cmp eax, 0x894cf189 ; ret 0x894c
0x00000000000d08c4 : cmp eax, 0xe8000000 ; ret
0x000000000010f835 : cmp eax, 0xea1456 ; call 0x1bb07
0x00000000001032f1 : cmp eax, 0xead5f3 ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000001025be : cmp eax, 0xeae315 ; ret
0x0000000000102522 : cmp eax, 0xeae3b9 ; ret
0x0000000000102182 : cmp eax, 0xeae6f9 ; ret
0x0000000000102112 : cmp eax, 0xeae771 ; ret
0x0000000000102078 : cmp eax, 0xeae843 ; je 0x1020ff ; ret
0x0000000000101fec : cmp eax, 0xeae8ce ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x00000000000026b3 : cmp eax, 0xedd4b27b ; ret 0xae7d
0x00000000000fcfd3 : cmp eax, 0xf ; setbe al ; ret
0x00000000000fdd22 : cmp eax, 0xfffff ; je 0xfdd38 ; ret
0x00000000000f9bbb : cmp eax, 0xfffff000 ; ja 0xf9bb8 ; ret
0x00000000000f9beb : cmp eax, 0xfffff000 ; ja 0xf9be8 ; ret
0x00000000000f9c1b : cmp eax, 0xfffff000 ; ja 0xf9c18 ; ret
0x00000000000fac9a : cmp eax, 1 ; je 0xfacae ; ret
0x00000000000f9d31 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000bb644 : cmp eax, dword ptr [rax] ; je 0xbb65d ; pop rbx ; ret
0x0000000000130341 : cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x5d], bl ; cld ; call rax
0x00000000000f8e5b : cmp eax, eax ; jbe 0xf8e1c ; xor eax, eax ; ret
0x00000000001073b4 : cmp eax, ebp ; je 0x107397 ; mov rdi, rbx ; call rax
0x000000000011418f : cmp eax, ecx ; jne 0x1141a2 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000114485 : cmp eax, ecx ; jne 0x114498 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000001148d9 : cmp eax, ecx ; jne 0x1148ec ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000114978 : cmp eax, ecx ; jne 0x11498b ; add rsp, 0x10 ; pop rbp ; ret
0x00000000000fef15 : cmp eax, ecx ; jne 0xfef0d ; pop rbx ; ret
0x0000000000104b0a : cmp eax, edi ; ja 0x104b59 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000100d17 : cmp eax, edx ; ja 0x100d54 ; ret
0x0000000000101e17 : cmp eax, edx ; ja 0x101e53 ; ret
0x00000000000ea201 : cmp eax, edx ; jb 0xea235 ; xor eax, eax ; ret
0x00000000000f8d7e : cmp eax, edx ; jb 0xf8d75 ; ret
0x0000000000100f58 : cmp eax, edx ; jne 0x100f65 ; ret
0x0000000000100fe2 : cmp eax, edx ; jne 0x100ff8 ; add rsp, 8 ; ret
0x000000000010105b : cmp eax, edx ; jne 0x10107d ; ret
0x000000000010109d : cmp eax, edx ; jne 0x1010ad ; ret
0x00000000001010dc : cmp eax, edx ; jne 0x1010ed ; ret
0x0000000000101114 : cmp eax, edx ; jne 0x101125 ; ret
0x0000000000106d5b : cmp eax, edx ; jne 0x106d56 ; xor eax, eax ; ret
0x00000000000f7fa6 : cmp eax, edx ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000130a7d : cmp ebp, edi ; call rax
0x00000000000ea2a5 : cmp ebx, eax ; jne 0xea315 ; pop rbx ; ret
0x00000000000f11e5 : cmp ebx, ebp ; jne 0xf11da ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000313b0 : cmp ebx, ebp ; nop dword ptr [r8 + rax] ; ret
0x00000000000fefaa : cmp ebx, edx ; jne 0xfef73 ; pop rbx ; ret
0x00000000000fefaa : cmp ebx, edx ; jne 0xfef75 ; pop rbx ; ret
0x0000000000103058 : cmp ecx, 1 ; jne 0x103066 ; ret
0x00000000000f8fe6 : cmp ecx, 1 ; jne 0xf8fc3 ; ret
0x00000000000f8f92 : cmp ecx, 1 ; mov qword ptr [rsi], rdi ; jne 0xf8fc6 ; ret
0x00000000000fa12c : cmp ecx, 2 ; je 0xfa13e ; pop rbx ; ret
0x0000000000027fbc : cmp ecx, dword ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x67e8
0x00000000000e618c : cmp ecx, eax ; jae 0xe619d ; pop rbx ; ret
0x00000000000e884d : cmp ecx, eax ; jae 0xe883d ; sub rax, rdx ; ret
0x0000000000023586 : cmp ecx, eax ; jb 0x23599 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000001b9ed : cmp ecx, eax ; jne 0x1b9e5 ; ret
0x00000000000f8001 : cmp ecx, eax ; sbb eax, eax ; or eax, 1 ; ret
0x00000000000f16f5 : cmp ecx, edi ; jne 0xf1709 ; xor eax, eax ; mov dword ptr [rdx + 8], eax ; ret
0x00000000000e98d5 : cmp ecx, edx ; jae 0xe989a ; add rsp, 0x20 ; pop rbx ; ret
0x000000000010d80c : cmp ecx, edx ; jne 0x10d805 ; ret
0x0000000000113d47 : cmp ecx, edx ; jne 0x113d5a ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000113eb2 : cmp ecx, edx ; jne 0x113ec5 ; add rsp, 0x30 ; pop rbp ; ret
0x000000000011421e : cmp ecx, edx ; jne 0x114231 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000000f7978 : cmp ecx, edx ; jne 0xf7975 ; ret
0x00000000000f8e40 : cmp ecx, edx ; jne 0xf8e35 ; ret
0x000000000012d265 : cmp ecx, esi ; jmp rsp
0x00000000000f8000 : cmp ecx, r8d ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000102e93 : cmp edi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000001059f0 : cmp edi, 1 ; sete al ; ret
0x00000000000e2ac1 : cmp edi, dword ptr [rbx - 0x76b7ffb9] ; ret
0x0000000000002a4f : cmp edi, edx ; mov cl, 9 ; ret
0x00000000000de5b9 : cmp edi, edx ; setge al ; ret
0x0000000000034c95 : cmp edi, edx ; setl al ; ret
0x00000000000f1679 : cmp edx, -1 ; jne 0xf166e ; ret
0x00000000000f7804 : cmp edx, -1 ; jne 0xf77fe ; ret
0x00000000000fd039 : cmp edx, 0xf ; jbe 0xfd012 ; ret
0x0000000000108cd1 : cmp edx, 8 ; ja 0x108ce7 ; xor eax, eax ; ret
0x00000000000fcf8a : cmp edx, 9 ; jbe 0xfcf62 ; ret
0x00000000000fcf23 : cmp edx, 9 ; setbe al ; ret
0x0000000000047fec : cmp edx, dword ptr [rcx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e87b0 : cmp edx, eax ; jb 0xe87c1 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000005aaa3 : cmp edx, eax ; jl 0x5aa1b ; jmp 0x5aa79
0x000000000001ba45 : cmp edx, eax ; jne 0x1ba58 ; add rsp, 8 ; ret
0x000000000002fd38 : cmp edx, eax ; jne 0x2fd34 ; ret
0x0000000000030128 : cmp edx, eax ; jne 0x30124 ; ret
0x00000000000f736b : cmp edx, eax ; jne 0xf735e ; xor eax, eax ; ret
0x00000000000f7ff7 : cmp edx, eax ; jne 0xf7fe6 ; xor eax, eax ; ret
0x00000000000f813f : cmp edx, eax ; jne 0xf8138 ; lea rax, qword ptr [rdx + rcx] ; ret
0x0000000000024e55 : cmp edx, ecx ; cmova rdx, rcx ; call qword ptr [rax]
0x00000000000f753d : cmp edx, ecx ; ja 0xf7535 ; pop rbx ; ret
0x00000000000f77dd : cmp edx, ecx ; jg 0xf77d5 ; pop rbx ; ret
0x00000000000f7565 : cmp edx, ecx ; jne 0xf755d ; ret
0x00000000000f782d : cmp edx, ecx ; jne 0xf7825 ; ret
0x00000000000f8d4b : cmp edx, ecx ; jne 0xf8d3d ; ret
0x00000000000f72f4 : cmp edx, edi ; jne 0xf72ee ; xor eax, eax ; ret
0x00000000000f732e : cmp edx, edi ; jne 0xf7325 ; ret
0x00000000000fed94 : cmp edx, edx ; jb 0xfed69 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000f8dab : cmp esi, eax ; jne 0xf8da5 ; ret
0x00000000000ea831 : cmp esi, ebp ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000000f7934 : cmp esi, edi ; ja 0xf7925 ; ret
0x00000000000ea235 : cmp esi, edx ; jae 0xea20e ; mov eax, 1 ; ret
0x00000000000f0cd7 : cmp qword ptr [rax + 0x78], 0 ; jne 0xf0ce8 ; ret
0x00000000000f0d17 : cmp qword ptr [rax + 0x78], 0 ; jne 0xf0d28 ; ret
0x00000000000bb642 : cmp qword ptr [rbx], 0 ; je 0xbb65f ; pop rbx ; ret
0x0000000000100cb0 : cmp qword ptr [rdi], -1 ; sete al ; ret
0x0000000000033cb0 : cmp qword ptr [rdi], 0 ; je 0x33cc7 ; ret
0x0000000000033ce0 : cmp qword ptr [rdi], 0 ; jne 0x33cf7 ; ret
0x000000000001deda : cmp qword ptr [rdi], rax ; je 0x1def1 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f2510 : cmp qword ptr [rdx], 0 ; jne 0xf2527 ; ret
0x0000000000102076 : cmp qword ptr [rip + 0xeae843], rdi ; je 0x102101 ; ret
0x00000000000fefa9 : cmp r11, rdx ; jne 0xfef74 ; pop rbx ; ret
0x00000000000fefa9 : cmp r11, rdx ; jne 0xfef76 ; pop rbx ; ret
0x00000000000f8d7d : cmp r8, rdx ; jb 0xf8d76 ; ret
0x00000000000f8fe5 : cmp r9d, 1 ; jne 0xf8fc4 ; ret
0x00000000000f9bba : cmp rax, -0x1000 ; ja 0xf9bb9 ; ret
0x00000000000f9bea : cmp rax, -0x1000 ; ja 0xf9be9 ; ret
0x00000000000f9c1a : cmp rax, -0x1000 ; ja 0xf9c19 ; ret
0x00000000000e761c : cmp rax, 0x44 ; jne 0xe7617 ; ret
0x00000000000e7a8c : cmp rax, 0x44 ; jne 0xe7a87 ; ret
0x00000000000fac99 : cmp rax, 1 ; je 0xfacaf ; ret
0x00000000000fac98 : cmp rax, 1 ; je 0xfacb0 ; ret
0x00000000001073b3 : cmp rax, r13 ; je 0x107398 ; mov rdi, rbx ; call rax
0x00000000000f8e5a : cmp rax, r8 ; jbe 0xf8e1d ; xor eax, eax ; ret
0x00000000000fef14 : cmp rax, rcx ; jne 0xfef0e ; pop rbx ; ret
0x0000000000100d16 : cmp rax, rdx ; ja 0x100d55 ; ret
0x0000000000101e16 : cmp rax, rdx ; ja 0x101e54 ; ret
0x00000000000ea200 : cmp rax, rdx ; jb 0xea236 ; xor eax, eax ; ret
0x0000000000100f57 : cmp rax, rdx ; jne 0x100f66 ; ret
0x0000000000100fe1 : cmp rax, rdx ; jne 0x100ff9 ; add rsp, 8 ; ret
0x000000000010105a : cmp rax, rdx ; jne 0x10107e ; ret
0x000000000010109c : cmp rax, rdx ; jne 0x1010ae ; ret
0x00000000001010db : cmp rax, rdx ; jne 0x1010ee ; ret
0x0000000000101113 : cmp rax, rdx ; jne 0x101126 ; ret
0x0000000000106d5a : cmp rax, rdx ; jne 0x106d57 ; xor eax, eax ; ret
0x00000000000ea2a4 : cmp rbx, rax ; jne 0xea316 ; pop rbx ; ret
0x00000000000f11e4 : cmp rbx, rbp ; jne 0xf11db ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103057 : cmp rcx, 1 ; jne 0x103067 ; ret
0x00000000000e618b : cmp rcx, rax ; jae 0xe619e ; pop rbx ; ret
0x00000000000e884c : cmp rcx, rax ; jae 0xe883e ; sub rax, rdx ; ret
0x000000000001b9ec : cmp rcx, rax ; jne 0x1b9e6 ; ret
0x000000000010d80b : cmp rcx, rdx ; jne 0x10d806 ; ret
0x00000000000f7977 : cmp rcx, rdx ; jne 0xf7976 ; ret
0x00000000000f8e3f : cmp rcx, rdx ; jne 0xf8e36 ; ret
0x00000000000f1678 : cmp rdx, -1 ; jne 0xf166f ; ret
0x00000000000f7803 : cmp rdx, -1 ; jne 0xf77ff ; ret
0x0000000000108cd0 : cmp rdx, 8 ; ja 0x108ce8 ; xor eax, eax ; ret
0x000000000001ba44 : cmp rdx, r8 ; jne 0x1ba59 ; add rsp, 8 ; ret
0x000000000002fd37 : cmp rdx, rax ; jne 0x2fd35 ; ret
0x0000000000030127 : cmp rdx, rax ; jne 0x30125 ; ret
0x00000000000f736a : cmp rdx, rax ; jne 0xf735f ; xor eax, eax ; ret
0x00000000000f7ff6 : cmp rdx, rax ; jne 0xf7fe7 ; xor eax, eax ; ret
0x00000000000f813e : cmp rdx, rax ; jne 0xf8139 ; lea rax, qword ptr [rdx + rcx] ; ret
0x0000000000024e54 : cmp rdx, rcx ; cmova rdx, rcx ; call qword ptr [rax]
0x00000000000f753c : cmp rdx, rcx ; ja 0xf7536 ; pop rbx ; ret
0x00000000000f77dc : cmp rdx, rcx ; jg 0xf77d6 ; pop rbx ; ret
0x00000000000f7564 : cmp rdx, rcx ; jne 0xf755e ; ret
0x00000000000f782c : cmp rdx, rcx ; jne 0xf7826 ; ret
0x00000000000f8d4a : cmp rdx, rcx ; jne 0xf8d3e ; ret
0x00000000000f72f3 : cmp rdx, rdi ; jne 0xf72ef ; xor eax, eax ; ret
0x00000000000f732d : cmp rdx, rdi ; jne 0xf7326 ; ret
0x00000000000f8daa : cmp rsi, rax ; jne 0xf8da6 ; ret
0x00000000000f7933 : cmp rsi, rdi ; ja 0xf7926 ; ret
0x00000000000f6b19 : cmp sil, 9 ; sete al ; ret
0x00000000000aeca4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000001d489 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000facf3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000107326 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, 0x148ffff ; ret
0x00000000000a3e56 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000003309 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub ebp, ecx ; ret 0xe89f
0x00000000000e3eeb : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [r8 - 0x77], r9b ; ret
0x000000000012dc21 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; clc ; out dx, al ; hlt ; call rax
0x000000000012dc29 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; sbb bh, ch ; hlt ; jmp rsp
0x0000000000001f77 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; sub byte ptr [rbp + 0x2c], cl ; ret 0xda
0x000000000013101d : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rax
0x00000000000025ec : cmpsd dword ptr [rsi], dword ptr [rdi] ; wait ; ret
0x00000000000554a4 : cwde ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000e8336 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0xd8 ; pop rbx ; ret
0x000000000012d8b1 : cwde ; add byte ptr [rax], al ; sub byte ptr [rax], bh ; call rax
0x0000000000130628 : cwde ; add qword ptr [r8], rax ; call 0xffffffffe513030c
0x000000000008994b : cwde ; idiv edi ; call qword ptr [rax - 0x18]
0x000000000007c530 : cwde ; idiv edi ; dec dword ptr [rcx + rcx*4 - 0x21] ; call 0xe87c9
0x000000000012f83c : cwde ; jo 0x12f83b ; call rsp
0x0000000000131040 : cwde ; jp 0x13104b ; add byte ptr [rax - 0x57], bl ; std ; call rsp
0x0000000000145548 : cwde ; mov ah, bh ; call qword ptr [rax]
0x000000000012e97c : cwde ; mov ch, 0xf8 ; jmp rsp
0x000000000012da14 : cwde ; or ah, dh ; call rax
0x0000000000130978 : cwde ; pop rax ; add dword ptr [rax], eax ; js 0x13099c ; std ; jmp rsp
0x0000000000140b58 : cwde ; pop rdi ; sti ; call qword ptr [rdi]
0x000000000012eaec : cwde ; ret
0x000000000012e240 : cwde ; ret 0
0x000000000012eaa4 : cwde ; ret 0xfff8
0x00000000000d04cc : cwde ; ret 4
0x0000000000130a04 : cwde ; std ; jmp rax
0x000000000000260b : cwde ; stosd dword ptr [rdi], eax ; wait ; ret
0x0000000000109415 : dec byte ptr [rax - 0x77] ; out dx, eax ; call rax
0x00000000000f919e : dec byte ptr [rbp + rcx*4 + 0x4a] ; cmovge ecx, dword ptr [rdi] ; ret
0x00000000000da228 : dec byte ptr [rcx + rcx*4 - 0x19] ; call qword ptr [rax]
0x00000000000389db : dec byte ptr [rcx + rcx*4 - 9] ; call 0x34c26
0x00000000000f6b1b : dec byte ptr [rcx] ; sete al ; ret
0x0000000000106f3b : dec byte ptr [rdx] ; sete al ; ret
0x000000000002dc2b : dec dword ptr [r8 + 0x39] ; ret
0x00000000000df3f8 : dec dword ptr [r8 + 0x39] ; ret 0x860f
0x00000000000ab08c : dec dword ptr [r8 - 0x77] ; ret 0xc148
0x000000000012ea5f : dec dword ptr [rax + 0x180000dd] ; ret 0xfff8
0x0000000000020722 : dec dword ptr [rax + 0x21] ; ret 0x8948
0x000000000002a8b7 : dec dword ptr [rax + 0x29] ; ret
0x000000000002a79f : dec dword ptr [rax + 0x39] ; ret
0x00000000000e87e8 : dec dword ptr [rax + 0x39] ; ret 0x672
0x00000000000df3f9 : dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000012cbf7 : dec dword ptr [rax + 0x58000055] ; out dx, eax ; call rsp
0x000000000012f7af : dec dword ptr [rax + 0x6a480001] ; stc ; jmp qword ptr [rax]
0x000000000001eab7 : dec dword ptr [rax + 1] ; ret
0x000000000012e86f : dec dword ptr [rax + rbx*8] ; add byte ptr [rax], al ; call 0x2112e131
0x000000000010e97d : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000e6f26 : dec dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000001e270 : dec dword ptr [rax - 0x73] ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000006c1c8 : dec dword ptr [rax - 0x75] ; add al, 0x24 ; jmp 0x6c198
0x0000000000077878 : dec dword ptr [rax - 0x75] ; add al, 0x24 ; jmp 0x77848
0x000000000001de99 : dec dword ptr [rax - 0x75] ; or al, 0x24 ; mov rdx, rax ; jmp 0x1de53
0x0000000000102299 : dec dword ptr [rax - 0x75] ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000111ab7 : dec dword ptr [rax - 0x75] ; push rax ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000fbd08 : dec dword ptr [rax - 0x77] ; add byte ptr [r8 - 0x7b], r9b ; ret 0x840f
0x0000000000048d30 : dec dword ptr [rax - 0x77] ; lea ecx, dword ptr [rax - 0x17000009] ; ret
0x0000000000101bef : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x00000000000287d1 : dec dword ptr [rax - 0x77] ; push rbp ; add byte ptr [rcx - 0x77], cl ; ret 0xf66
0x0000000000027249 : dec dword ptr [rax - 0x77] ; ret
0x00000000000ff11e : dec dword ptr [rax - 0x77] ; ret 0x2be9
0x00000000000faecd : dec dword ptr [rax - 0x77] ; ret 0x5576
0x00000000000339d0 : dec dword ptr [rax - 0x77] ; ret 0x8348
0x00000000000f10d6 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000ff5da : dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000110ce1 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000ff04e : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000002d09d : dec dword ptr [rax - 0x77] ; ret 0xc148
0x00000000000fcc93 : dec dword ptr [rax - 0x77] ; ret 0xc4e8
0x00000000000f8b4e : dec dword ptr [rax - 0x77] ; ret 0xf66
0x000000000010331f : dec dword ptr [rax - 0x7b] ; div byte ptr [rbp + 0xb] ; ret
0x00000000001040bb : dec dword ptr [rax - 0x7b] ; ret 0x2f75
0x000000000001c44c : dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000ef457 : dec dword ptr [rax - 0x7b] ; ret 0xa375
0x00000000000ea455 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rcx + 0x48], 0x89 ; ret
0x000000000008db87 : dec dword ptr [rax - 0x7d] ; call 0xffffffffc2922397
0x00000000000aefcf : dec dword ptr [rax - 0x7d] ; call 0xffffffffc29437df
0x00000000000afb5b : dec dword ptr [rax - 0x7d] ; call 0xffffffffc294436b
0x00000000000b10cf : dec dword ptr [rax - 0x7d] ; call 0xffffffffc29458df
0x00000000000b1b33 : dec dword ptr [rax - 0x7d] ; call 0xffffffffc2946343
0x00000000000b1be7 : dec dword ptr [rax - 0x7d] ; call 0xffffffffc29463f7
0x00000000000b285f : dec dword ptr [rax - 0x7d] ; call 0xffffffffc294706f
0x00000000000b33a7 : dec dword ptr [rax - 0x7d] ; call 0xffffffffc2947bb7
0x00000000000b345f : dec dword ptr [rax - 0x7d] ; call 0xffffffffc2947c6f
0x00000000000fb8ed : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000001eb8c : dec dword ptr [rax - 0x7d] ; ret
0x00000000000a821b : dec dword ptr [rax - 0x7d] ; ret 0xf01
0x00000000001304d7 : dec dword ptr [rax*2 - 0x48f7ffff] ; cld ; jmp qword ptr [rax]
0x00000000001227ab : dec dword ptr [rax] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000002807 : dec dword ptr [rax] ; mov al, 0xe1 ; ret 0x8d71
0x0000000000122883 : dec dword ptr [rax] ; or al, 0xfc ; jmp qword ptr [rax]
0x0000000000092136 : dec dword ptr [rbp + rcx*4 + 0x35] ; ret 0x71e0
0x000000000002fb89 : dec dword ptr [rbp - 0x77] ; ret 0xd8eb
0x00000000001333c3 : dec dword ptr [rbx + 1] ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x100e
0x0000000000130cef : dec dword ptr [rbx + rbp*2] ; add dword ptr [rax], eax ; clc ; outsb dx, byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x0000000000130687 : dec dword ptr [rbx + rcx*2] ; add dword ptr [rax], eax ; fdivr st(4) ; jmp qword ptr [rax]
0x0000000000045d4e : dec dword ptr [rbx] ; add byte ptr [rax + 0x5a], bl ; jmp 0x45d1d
0x00000000000fbed5 : dec dword ptr [rcx + 0x21] ; ret 0x22b9
0x000000000003896b : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0x34c26
0x00000000000a6ed1 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbx ; call 0xe3199
0x000000000006c4fe : dec dword ptr [rcx + rcx*4 - 0x21] ; call 0xe87c6
0x0000000000112d68 : dec dword ptr [rcx + rcx*4 - 1] ; call 0x10f076
0x000000000001d571 : dec dword ptr [rcx - 0x75] ; push rsp ; ret 0x4838
0x00000000001099e4 : dec dword ptr [rcx - 0x77] ; add al, 0x24 ; jmp 0x1099b4
0x00000000000fea6a : dec dword ptr [rcx - 0x77] ; ret
0x00000000000a75b0 : dec dword ptr [rcx - 0x77] ; ret 0x2949
0x0000000000033a36 : dec dword ptr [rcx - 0x7b] ; ret 0x850f
0x000000000008dcb0 : dec dword ptr [rcx - 0x7d] ; ret 0x4d01
0x000000000012fa37 : dec dword ptr [rdi + rcx] ; add dword ptr [rax], eax ; mov dh, bh ; cli ; jmp qword ptr [rax]
0x000000000012d84f : dec dword ptr [rdi + rdx*4] ; add byte ptr [rax], al ; js 0x12d863 ; jmp qword ptr [rax]
0x000000000012d84e : dec dword ptr [rdi + rdx*4] ; add byte ptr [rax], al ; js 0x12d864 ; jmp qword ptr [rax]
0x000000000001d847 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x00000000000fdd24 : dec dword ptr [rdi] ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000001070d9 : dec dword ptr [rdi] ; mov dh, 0x4c ; and al, 0xf ; jmp 0x1070aa
0x00000000000f0ee4 : dec dword ptr [rdi] ; mov dh, 0x57 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000000b5c51 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb70000], ah ; jmp qword ptr [rax]
0x000000000009b8b5 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb70000], al ; jmp qword ptr [rax]
0x00000000000c21ad : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb70000], ch ; jmp qword ptr [rax]
0x00000000000a66b4 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb70000], dl ; jmp qword ptr [rax]
0x00000000000abd35 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x18000000], bl ; jmp rsp
0x00000000000554a1 : dec dword ptr [rdi] ; test dword ptr [rax - 0x18000000], ebx ; ret
0x000000000007c3a1 : dec dword ptr [rdi] ; test dword ptr [rdi], eax ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000a2a1b : dec dword ptr [rdi] ; test dword ptr [rsi], eax ; or eax, 0x49e80000 ; ret 5
0x0000000000055cee : dec dword ptr [rdx] ; add byte ptr [rax + 0x5a], bl ; jmp 0x55cbd
0x000000000012dacf : dec dword ptr [rdx] ; add byte ptr [rax], al ; or byte ptr [rdx - 0xc], dh ; jmp qword ptr [rax]
0x0000000000106f2b : dec dword ptr [rdx] ; je 0x106f3d ; ret
0x00000000000faf58 : dec dword ptr [rdx] ; sete al ; shl rax, 4 ; ret
0x0000000000130217 : dec dword ptr [rsi + rsi] ; add dword ptr [rax], eax ; js 0x130263 ; cld ; jmp qword ptr [rax]
0x000000000012f4cf : dec dword ptr [rsp + rdi*8] ; add byte ptr [rax], al ; or byte ptr [rdi], ch ; stc ; jmp qword ptr [rax]
0x000000000012f23f : dec dword ptr [rsp + rsi*8] ; add byte ptr [rax], al ; clc ; or edi, ecx ; jmp qword ptr [rax]
0x0000000000122937 : dec eax ; adc edi, esp ; jmp rax
0x000000000012260f : dec eax ; out dx, al ; sti ; call qword ptr [rax]
0x000000000013160f : dec eax ; sahf ; add dword ptr [rax], eax ; call 0xffffffffe513149e
0x000000000012270b : dec eax ; stc ; sti ; jmp rax
0x000000000012267f : dec eax ; sti ; jmp rax
0x000000000012ffcf : dec eax ; sub dword ptr [rcx], eax ; add al, cl ; mov bl, 0xfb ; jmp rax
0x000000000012fa9f : dec esp ; adc dword ptr [rcx], eax ; add al, cl ; sbb edi, ebx ; jmp rax
0x000000000012f1bf : dec esp ; add byte ptr [rax], al ; clc ; or bh, cl ; jmp rax
0x00000000001304f7 : dec esp ; add dword ptr [r8], r8d ; cwde ; ret
0x0000000000130577 : dec esp ; add dword ptr [r8], r8d ; mov cl, dl ; cld ; jmp rax
0x000000000012d3a7 : dec esp ; add dword ptr [rax], 0xf1a3b800 ; jmp rsp
0x000000000012f72f : dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rax + 0x69], cl ; stc ; jmp rax
0x000000000012f2df : dec esp ; cmc ; add byte ptr [rax], al ; or byte ptr [rax], dl ; stc ; jmp rax
0x000000000012e90f : dec esp ; fld dword ptr [rax] ; add al, cl ; mov ah, 0xf8 ; jmp rax
0x000000000012d2df : dec esp ; jle 0x12d2eb ; add byte ptr [rax], cl ; jb 0x12d2e0 ; jmp rsp
0x000000000012ec27 : dec esp ; loop 0x12ec33 ; add byte ptr [rax - 0x24], bh ; clc ; jmp rax
0x0000000000122847 : dec esp ; or ah, bh ; jmp rsp
0x000000000012edcf : dec esp ; out 0, eax ; add al, bh ; out dx, eax ; clc ; jmp rax
0x000000000012f037 : dec esp ; out dx, al ; add byte ptr [rax], al ; clc ; add al, 0xf9 ; jmp rax
0x00000000000f80e9 : div bl ; ret
0x0000000000103322 : div byte ptr [rbp + 0xb] ; ret
0x00000000000f69b7 : div byte ptr [rbp + 6] ; ret
0x000000000001b9ab : div dword ptr [rdx] ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000000fef16 : enter -0x108b, 0x5b ; ret
0x00000000000f7fab : enter -0x3cff, 0x66 ; nop ; xor eax, eax ; ret
0x00000000000f737c : enter -0x62f1, -0x40 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000dcdb8 : enter -0x72b7, 0x34 ; ret
0x000000000012e22c : enter -0x87b, -1 ; push rsp ; ret 0
0x00000000000e4cc4 : enter -0xc, -1 ; pop rax ; pop rdx ; leave ; ret
0x0000000000034326 : enter -1, -1 ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000034356 : enter -1, -1 ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000034386 : enter -1, -1 ; pop rbx ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x000000000011321e : enter -1, 0x48 ; add esp, 0x20 ; leave ; ret
0x000000000013dec1 : enter 0, 0x1c ; and edi, edx ; call qword ptr [rdi]
0x000000000012e3a1 : enter 0, 0x78 ; and bh, al ; call rsp
0x0000000000144348 : enter 0x12c, 0 ; sub al, 0xfc ; jmp qword ptr [rcx]
0x0000000000131610 : enter 0x19e, 0 ; call 0xffffffffe513149d
0x00000000000cd8be : enter 0x3589, -0x11 ; ret 0x48
0x00000000000cd90f : enter 0x3589, -0x62 ; ret 0x48
0x00000000000cd86d : enter 0x3589, 0x40 ; ret
0x00000000000cd960 : enter 0x3589, 0x4d ; ret 0x48
0x00000000000f8d7c : enter 0x3949, -0x30 ; jb 0xf8d77 ; ret
0x00000000000f6dbf : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000114190 : enter 0x675, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x00000000001148da : enter 0x675, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000114486 : enter 0x675, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x00000000001147c9 : enter 0x775, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001040ad : enter 0xea, 0x48 ; add esp, 0x28 ; ret
0x000000000012e871 : fadd dword ptr [rax] ; add al, ch ; mov al, 0xf8 ; jmp qword ptr [rax]
0x00000000000fca55 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000012effc : fadd dword ptr [rcx] ; stc ; call qword ptr [rax]
0x00000000000de469 : fadd dword ptr [rdi] ; sub rdx, rdi ; xor esi, esi ; call qword ptr [rax]
0x000000000013f32d : fadd qword ptr [rax] ; add al, al ; mov dl, bh ; jmp qword ptr [rbx]
0x00000000000e7604 : fadd qword ptr [rax] ; add byte ptr [rax + 1], cl ; adc al, 6 ; ret
0x000000000012ea11 : fadd qword ptr [rax] ; add byte ptr [rax - 0x3f], bh ; clc ; call rsp
0x00000000000253a6 : fbld dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000131434 : fcom dword ptr [rdi - 2] ; jmp rsp
0x00000000000279bc : fcom dword ptr [rsi] ; push rbx ; add byte ptr [rax + 1], cl ; ret
0x000000000012d475 : fcomi st(1) ; call qword ptr [rax]
0x00000000001063c9 : fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000000f08fc : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edi ; ret
0x00000000000efe31 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000030306 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000f08b4 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000031084 : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000012cf34 : fcomp dword ptr [rcx - 0x10] ; call qword ptr [rax]
0x00000000000e4893 : fcomp qword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000143f94 : fcomp qword ptr [rsi] ; cld ; call rdi
0x000000000012ea80 : fcomp st(5) ; add byte ptr [rax], al ; pop rax ; ret 0xfff8
0x00000000000f0d22 : fcompi st(0) ; add qword ptr [rip + 0x6bf475], rdi ; ret
0x0000000000072999 : fdiv dword ptr [rbx] ; movzx ebx, byte ptr [rax + 0x21] ; call 0xfec79
0x0000000000130a54 : fdiv dword ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000123100 : fdiv dword ptr [rsp + rdi*8] ; call rax
0x000000000012ec2d : fdiv st(0), st(0) ; jmp rax
0x000000000012d7e5 : fdiv st(2) ; call qword ptr [rax]
0x000000000013011d : fdiv st(3), st(0) ; jmp rsp
0x00000000001301e4 : fdiv st(5) ; sti ; jmp qword ptr [rax]
0x000000000001de97 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x75] ; or al, 0x24 ; mov rdx, rax ; jmp 0x1de55
0x0000000000130fe0 : fdivr dword ptr [rax + 1] ; add byte ptr [rax], bl ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x000000000013089c : fdivr st(1) ; cld ; call rax
0x0000000000142771 : fdivr st(3) ; jmp rsp
0x000000000013066d : fdivr st(4) ; call rax
0x000000000013068d : fdivr st(4) ; jmp qword ptr [rax]
0x0000000000130675 : fdivr st(4) ; jmp rsp
0x00000000001071e6 : fdivr st(7) ; ret
0x000000000013f0c5 : fiadd dword ptr [rax] ; add al, ch ; jns 0x13f0cb ; call rsp
0x000000000013f0c4 : fiadd dword ptr [rax] ; add al, ch ; jns 0x13f0cc ; call rsp
0x00000000000f477c : fiadd dword ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000dd65a : fiadd dword ptr [rbp + 0x29] ; ret 0x141
0x00000000000da945 : fiadd dword ptr [rcx + rcx*4 - 2] ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000027a7e : fiadd word ptr [rax - 1] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012eab9 : fiadd word ptr [rax] ; add al, cl ; ret 0xfff8
0x000000000012eac9 : fiadd word ptr [rax] ; add byte ptr [rax], bh ; ret
0x000000000012eac1 : fiadd word ptr [rax] ; add byte ptr [rax], ch ; ret
0x0000000000099a06 : fiadd word ptr [rax] ; add byte ptr [rcx], al ; push r12 ; push rax ; call 0x105cc9
0x0000000000069a6c : fiadd word ptr [rax] ; add byte ptr [rcx], al ; push r13 ; push rax ; call 0x105cc9
0x00000000000599d8 : fiadd word ptr [rax] ; add byte ptr [rcx], al ; push r14 ; push rax ; call 0x105cc9
0x0000000000079a1b : fiadd word ptr [rax] ; add byte ptr [rcx], al ; push rbx ; push rax ; call 0x105cc8
0x00000000000a5925 : fiadd word ptr [rcx + 0xf] ; xchg eax, edi ; ret 0x8d4d
0x000000000012eab8 : fiadd word ptr fs:[rax] ; add al, cl ; ret 0xfff8
0x0000000000026957 : fidiv dword ptr [rcx] ; test byte ptr [rax - 0x77], 0xef ; call qword ptr [rax]
0x000000000012e991 : fild dword ptr [rax] ; add al, cl ; mov ch, 0xf8 ; jmp qword ptr [rax]
0x000000000012eb01 : fild word ptr [rax] ; add al, cl ; ret
0x00000000000ed68a : fimul dword ptr [rax + 0x29] ; ret 0x8548
0x0000000000108542 : fimul dword ptr [rax - 0x75] ; je 0x108574 ; or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000107088 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov rdi, r15 ; call rax
0x000000000002571d : fimul dword ptr [rax - 0x9b7dbb4] ; ret
0x00000000000da225 : fimul dword ptr [rcx + rcx*4 - 2] ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000f9b37 : fimul dword ptr [rcx - 0x77] ; call 0xff12493
0x000000000001bce8 : fimul dword ptr [rdi] ; test dword ptr [rcx], edi ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000008b547 : fimul word ptr [rax + rax + 0x48] ; add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000002dfb1 : fimul word ptr [rax - 0x7d] ; ret
0x0000000000028064 : fimul word ptr [rsi] ; add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xbde8
0x00000000000e7b0b : fistp qword ptr [rdx + 0x220] ; xor esi, esi ; call rax
0x000000000005231f : fistp qword ptr [rsi + 4] ; call 0xde5c8
0x0000000000034432 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax - 0x40] ; jmp rax
0x0000000000034482 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax - 0x50] ; jmp rax
0x0000000000023669 : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001c9d2 : fisttp dword ptr [rax + 0x39] ; ret
0x00000000000e06d9 : fisttp dword ptr [rax + 0x63] ; adc al, 0x99 ; add rdx, rcx ; jmp rdx
0x00000000000e0745 : fisttp dword ptr [rax + 0x63] ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000a54a8 : fisttp dword ptr [rax + 1] ; ret
0x0000000000003461 : fisttp dword ptr [rbp - 0x537b25c9] ; jb 0x3478 ; int1 ; ret
0x000000000010d3b1 : fisttp dword ptr [rbp - 1] ; push rbx ; ret
0x00000000000f45b4 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000001c9db : fisttp dword ptr [rdi] ; xchg eax, edx ; ret 0xd184
0x0000000000105952 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000005812e : fisttp dword ptr [rdx] ; add byte ptr [rax + 0x5a], bl ; jmp 0x580fd
0x000000000001ef30 : fisttp qword ptr [rip + 0x58b4800] ; push rsi ; ret 0x32
0x00000000000fc221 : fisttp word ptr [rax + 0x63] ; ret 0x8d49
0x0000000000031a0e : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x15e8
0x00000000000f640c : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x17e8
0x00000000000f5b08 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x1be8
0x0000000000028106 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x1de8
0x00000000000f6303 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x20e8
0x0000000000031702 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x21e8
0x00000000000f5cfc : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x27e8
0x00000000000f67fb : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x28e8
0x00000000000f61fa : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x29e8
0x00000000000f5df6 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x2de8
0x00000000000f66f2 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x31e8
0x0000000000027eef : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x34e8
0x0000000000027fee : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x35e8
0x00000000000f65e9 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x3ae8
0x0000000000031ce6 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x3de8
0x0000000000027f20 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x3e8
0x00000000000f64e0 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x43e8
0x0000000000031ade : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x45e8
0x00000000000f63d7 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x4ce8
0x00000000000318d6 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x4de8
0x00000000000f5bd0 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x53e8
0x00000000000f62ce : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x55e8
0x00000000000f5cca : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x59e8
0x00000000000f67c6 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x5de8
0x0000000000031e1e : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x5e8
0x00000000000f61c5 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x5ee8
0x00000000000f5dc4 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x5fe8
0x0000000000027ebe : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x65e8
0x00000000000f66bd : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x66e8
0x0000000000031db6 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x6de8
0x00000000000f65b4 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x6fe8
0x0000000000031bae : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x75e8
0x00000000000f64ab : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x78e8
0x00000000000f60aa : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x79e8
0x00000000000f5fa9 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x7ae8
0x00000000000319a6 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x7de8
0x00000000000f5aa4 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x7fe8
0x00000000000f63a2 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x81e8
0x000000000003179e : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x85e8
0x00000000000f689a : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x89e8
0x00000000000f6299 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x8ae8
0x0000000000028098 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x8be8
0x00000000000f5d92 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x91e8
0x0000000000031f91 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x92e8
0x00000000000f6190 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x93e8
0x0000000000027e8d : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x96e8
0x00000000000f6688 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x9be8
0x0000000000031e86 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x9de8
0x0000000000027f82 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xa1e8
0x00000000000f657f : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xa4e8
0x0000000000031c7e : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xa5e8
0x00000000000f6078 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xabe8
0x00000000000f5f77 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xace8
0x0000000000031a76 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xade8
0x00000000000f5a72 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xb1e8
0x000000000003186e : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xb5e8
0x00000000000f636d : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xb6e8
0x00000000000f5b6c : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xb7e8
0x00000000000f5c66 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xbde8
0x00000000000f6865 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xbee8
0x00000000000f6264 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xbfe8
0x00000000000f5d60 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xc3e8
0x00000000000f675c : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xc7e8
0x0000000000103156 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xcde8
0x00000000000f6653 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xd0e8
0x0000000000027f51 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xd2e8
0x0000000000031d4e : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xd5e8
0x00000000000f654a : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xd9e8
0x0000000000031b46 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xdde8
0x0000000000031c16 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000f5f45 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xdee8
0x00000000000f6441 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xe2e8
0x000000000003193e : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xe5e8
0x00000000000f5b3a : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xe9e8
0x00000000000f6338 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xebe8
0x0000000000031736 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xede8
0x00000000000f6515 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xee8
0x00000000000f5c34 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xefe8
0x00000000000f6830 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xf3e8
0x00000000000f622f : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xf4e8
0x00000000000f5d2e : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xf5e8
0x0000000000031f29 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xfae8
0x00000000000f6727 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xfce8
0x00000000000f6014 : fisttp word ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xfe8
0x00000000000f980f : fisttp word ptr [rax - 0x7d] ; ret
0x000000000001c862 : fisttp word ptr [rax - 0x7f] ; ret
0x000000000006239a : fisttp word ptr [rcx + rcx*4 - 0xa] ; call 0xde5c6
0x00000000000c22f2 : fisttp word ptr [rcx + rcx*4 - 2] ; call 0xde5c6
0x00000000000f2299 : fisttp word ptr [rdi] ; xchg eax, esp ; ret 0xc148
0x0000000000057d8e : fisttp word ptr [rdx] ; add byte ptr [rax + 0x5a], bl ; jmp 0x57d5d
0x000000000012e911 : fld dword ptr [rax] ; add al, cl ; mov ah, 0xf8 ; jmp rax
0x0000000000113ca3 : fld dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000012ea71 : fld qword ptr [rax] ; add byte ptr [rax], bh ; ret 0xfff8
0x000000000012ea61 : fld qword ptr [rax] ; add byte ptr [rax], bl ; ret 0xfff8
0x000000000012ea69 : fld qword ptr [rax] ; add byte ptr [rax], ch ; ret 0xfff8
0x000000000012ea59 : fld qword ptr [rax] ; add byte ptr [rax], cl ; ret 0xfff8
0x00000000000da324 : fld qword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8548
0x0000000000113c3a : fld qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000113c84 : fld xword ptr [rax] ; add rsp, 0x18 ; ret
0x0000000000105d3d : fmul dword ptr [rax - 0x77] ; ret 0x894c
0x000000000001bc33 : fmul dword ptr [rax - 0x77] ; ret 0xc148
0x00000000000ddb2a : fmul dword ptr [rax - 0x7d] ; ret
0x000000000002e166 : fmul dword ptr [rcx + 0x39] ; ret
0x0000000000107447 : fmul dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x000000000010e5fd : fmul dword ptr [rdi] ; sub dword ptr [rcx], eax ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000000282cb : fmul dword ptr [rip + 0x48010053] ; add esp, 0x28 ; ret
0x000000000006c18f : fmul dword ptr [rsi] ; add rsp, 0x28 ; ret
0x0000000000114b0c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000146468 : fmul st(7) ; cld ; jmp qword ptr [rdi]
0x0000000000128154 : fnsave dword ptr [rbx - 3] ; call rsp
0x00000000000f6b3c : fpatan ; ret
0x000000000010f7b3 : fst dword ptr [rdx + rbp*8] ; add al, ch ; ret
0x0000000000002b28 : fstp st(1) ; ret
0x0000000000144ee8 : fsub dword ptr [rbx - 4] ; jmp qword ptr [rsi]
0x0000000000133b5c : fsub qword ptr [rax + rax] ; add byte ptr [rax], dl ; or al, dh ; jmp qword ptr [rcx]
0x0000000000001f76 : fsub qword ptr [rdi + 0x2c4d28ef] ; ret 0xda
0x000000000012dac4 : fsubr dword ptr [rbp - 0xc] ; jmp rax
0x000000000012f7fc : fsubr dword ptr [rdx - 7] ; call rsp
0x000000000012f4bc : fsubr dword ptr [rsi] ; stc ; jmp rsp
0x000000000014435c : fsubr qword ptr [rcx + rax] ; add byte ptr [rax + 0x2c], ah ; cld ; jmp qword ptr [rcx]
0x000000000012d494 : fsubr st(6) ; int1 ; call qword ptr [rax]
0x000000000012ca3c : fsubr st(7) ; out dx, al ; jmp rax
0x000000000006b2cc : fucompi st(0) ; mov esi, 0xe900077e ; ret 0xfffb
0x000000000006b4f7 : fucompi st(0) ; ret
0x00000000000436c8 : fucompi st(0) ; ret 0x9fa
0x0000000000049058 : fucompi st(0) ; ret 0xfebb
0x00000000000389b4 : fucompi st(0) ; ret 0xffff
0x00000000000ac579 : fucompi st(0) ; ret 3
0x00000000000bfd0c : fucompi st(0) ; scasb al, byte ptr [rdi] ; pop rdi ; add al, 0 ; pop rcx ; pop rsi ; jmp 0xbfce2
0x0000000000131774 : hlt ; add byte ptr [rax], al ; add al, bl ; test al, 0xee ; call qword ptr [rsi]
0x00000000000fe923 : hlt ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0xa2eb
0x000000000012f241 : hlt ; add byte ptr [rax], al ; clc ; or edi, ecx ; jmp qword ptr [rax]
0x0000000000140b55 : hlt ; add byte ptr [rax], al ; cwde ; pop rdi ; sti ; call qword ptr [rdi]
0x000000000012ca48 : hlt ; add byte ptr [rax], r8b ; or cl, dh ; out dx, al ; call qword ptr [rax]
0x00000000000286c5 : hlt ; add dword ptr [rax], eax ; add al, ch ; ret 0xd9a
0x0000000000130400 : hlt ; add dword ptr [rax], eax ; js 0x1303ad ; cld ; jmp qword ptr [rax]
0x000000000012dbbe : hlt ; call qword ptr [rax]
0x000000000012da16 : hlt ; call rax
0x000000000012dbee : hlt ; call rsp
0x000000000013086d : hlt ; cld ; jmp rsp
0x000000000012dace : hlt ; dec dword ptr [rdx] ; add byte ptr [rax], al ; or byte ptr [rdx - 0xc], dh ; jmp qword ptr [rax]
0x000000000012dad6 : hlt ; jmp qword ptr [rax]
0x000000000012dac6 : hlt ; jmp rax
0x000000000012dc2e : hlt ; jmp rsp
0x0000000000130e78 : hlt ; jo 0x130e83 ; add byte ptr [rax], cl ; test ch, bh ; call qword ptr [rax]
0x0000000000129d9c : hlt ; loope 0x129d9f ; jmp rsp
0x000000000013fc8c : hlt ; mov al, 0xfa ; call qword ptr [rax]
0x00000000000567ce : hlt ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5679d
0x0000000000130a50 : hlt ; pop rbp ; add dword ptr [rax], eax ; fdiv dword ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000137f74 : hlt ; push 0x58880000 ; cmc ; call rdx
0x0000000000029190 : hlt ; push rsp ; push rbx ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000002fd3b : hlt ; ret
0x00000000001431d1 : hlt ; sti ; call rsi
0x00000000000e4ab5 : idiv bh ; lcall ptr [rax + 0x5a] ; leave ; ret
0x000000000012e09e : idiv bh ; sar byte ptr [rbx - 0x36380000], 0xf6 ; call rsp
0x00000000000f9c95 : idiv byte ptr [rax + 0x21] ; syscall ; ret
0x00000000000f9b82 : idiv byte ptr [rax + 2] ; syscall ; ret
0x00000000000e764d : idiv byte ptr [rdx + 0x220] ; call rax
0x00000000000e4b44 : idiv dil ; lcall ptr [rax + 0x5a] ; leave ; ret
0x000000000008a0c5 : idiv dword ptr [rbx + 0x5a580007] ; jmp 0x8a096
0x0000000000062300 : idiv dword ptr [rsi + 4] ; call 0xde5c8
0x000000000012e2e6 : idiv edi ; add ch, 0 ; add al, ch ; ret 0xfff7
0x000000000008994c : idiv edi ; call qword ptr [rax - 0x18]
0x000000000012e23e : idiv edi ; cwde ; ret 0
0x000000000004aa65 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000008db85 : idiv edi ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc2922399
0x00000000000aefcd : idiv edi ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc29437e1
0x00000000000afb59 : idiv edi ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc294436d
0x00000000000b10cd : idiv edi ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc29458e1
0x00000000000b1b31 : idiv edi ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc2946345
0x00000000000b1be5 : idiv edi ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc29463f9
0x00000000000b285d : idiv edi ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc2947071
0x00000000000b33a5 : idiv edi ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc2947bb9
0x00000000000b345d : idiv edi ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc2947c71
0x00000000000bc50c : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000092134 : idiv edi ; dec dword ptr [rbp + rcx*4 + 0x35] ; ret 0x71e0
0x0000000000038969 : idiv edi ; dec dword ptr [rcx + rcx*4 - 0x19] ; call 0x34c28
0x000000000006c4fc : idiv edi ; dec dword ptr [rcx + rcx*4 - 0x21] ; call 0xe87c8
0x000000000008dcae : idiv edi ; dec dword ptr [rcx - 0x7d] ; ret 0x4d01
0x000000000012e166 : idiv edi ; in al, 0xbe ; add byte ptr [rax], al ; clc ; sbb bh, dh ; call qword ptr [rax]
0x000000000012e28e : idiv edi ; in al, dx ; ret
0x00000000000b15b1 : idiv edi ; lcall ptr [rdx - 0x17] ; ret
0x000000000012e246 : idiv edi ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000012e22e : idiv edi ; push rsp ; ret 0
0x000000000012e26e : idiv edi ; ret
0x000000000012f9ed : idiv edx ; call rsp
0x000000000006a357 : imul eax ; ret
0x00000000000c06f8 : imul eax ; ret 0x455
0x000000000007aaf8 : imul eax ; ret 0x8b1
0x0000000000066af8 : imul eax ; ret 0x9f1
0x00000000000f69b4 : imul eax, dword ptr [rax], -0x7b ; div byte ptr [rbp + 6] ; ret
0x00000000000f1355 : imul eax, dword ptr [rax], -0x80 ; js 0xf139f ; add byte ptr [rbp + 3], dh ; ret
0x00000000000f6a11 : imul eax, dword ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000fd2af : imul eax, dword ptr [rax], 0 ; add rsp, 0x28 ; ret
0x00000000000f0f94 : imul eax, dword ptr [rax], 0 ; je 0xf0fa6 ; ret
0x00000000000f1429 : imul eax, dword ptr [rax], 0 ; je 0xf147e ; ret
0x00000000000fd303 : imul eax, dword ptr [rax], 0 ; pop rbx ; ret
0x0000000000130cf1 : imul eax, dword ptr [rcx], 0 ; clc ; outsb dx, byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x0000000000130d39 : imul eax, dword ptr [rcx], 0 ; mov byte ptr [rdi - 3], ch ; call rsp
0x0000000000130cb1 : imul eax, dword ptr [rcx], 0xfd67e800 ; call rax
0x00000000000252db : imul eax, dword ptr [rdi + rcx], 0x3d8d4800 ; ret 0xef8
0x00000000000d622c : imul eax, dword ptr [rdx], 0 ; jmp 0xd24fa
0x00000000000ef5b1 : imul ebp, ebx, 0x6b ; add byte ptr [rax + 1], cl ; ret
0x00000000000f0a24 : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109a89 : imul edx, dword ptr [rax], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000003305 : imul edx, dword ptr [rdx + 0x2ba6b748], -0x17 ; ret 0xe89f
0x00000000000e4d23 : imul esi, esp, 0x5a58ffff ; leave ; ret
0x000000000013fb6d : in al, 0 ; add al, ah ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000000f9dc4 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x0000000000143b64 : in al, 0x24 ; add dword ptr [rax], eax ; sbb byte ptr [rbx], dl ; cld ; call qword ptr [rbx]
0x00000000001300b8 : in al, 0x2d ; add dword ptr [rax], eax ; sbb dh, cl ; sti ; call qword ptr [rax]
0x0000000000130120 : in al, 0x2f ; add dword ptr [rax], eax ; cmp ch, bl ; sti ; jmp qword ptr [rax]
0x000000000008d916 : in al, 0x4c ; add byte ptr [rax - 0x77], cl ; ret
0x000000000001e9cf : in al, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000146464 : in al, 0x4d ; add dword ptr [rax], eax ; fmul st(7) ; cld ; jmp qword ptr [rdi]
0x000000000013253c : in al, 0x4f ; out dx, eax ; jmp rsi
0x00000000000b0dfa : in al, 0x74 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000012d490 : in al, 0x86 ; add byte ptr [rax], al ; fsubr st(6) ; int1 ; call qword ptr [rax]
0x00000000001412fc : in al, 0x89 ; sti ; call qword ptr [rbx]
0x000000000014197c : in al, 0x94 ; sti ; jmp qword ptr [rcx]
0x000000000010f863 : in al, 0x9d ; add dword ptr [rax], eax ; ret
0x000000000012e168 : in al, 0xbe ; add byte ptr [rax], al ; clc ; sbb bh, dh ; call qword ptr [rax]
0x000000000003123b : in al, 0xe0 ; call qword ptr [rbx]
0x0000000000129da0 : in al, 0xe1 ; std ; call rsp
0x0000000000129e28 : in al, 0xeb ; std ; call rsp
0x000000000012d81d : in al, 0xf2 ; call qword ptr [rax]
0x00000000001301c5 : in al, 0xfb ; jmp rsp
0x00000000000fcb55 : in al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e5cb8 : in al, 0xff ; lcall ptr [rax + 0x5a] ; leave ; ret
0x000000000014276c : in al, dx ; adc byte ptr [rcx], al ; add byte ptr [rax], dl ; fdivr st(3) ; jmp rsp
0x000000000001e7e3 : in al, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012fec0 : in al, dx ; and al, 1 ; add al, bl ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000012fef8 : in al, dx ; and eax, 0x9a580001 ; sti ; jmp qword ptr [rax]
0x0000000000114780 : in al, dx ; call rbx
0x0000000000001f4a : in al, dx ; call rdi
0x000000000013fb6c : in al, dx ; in al, 0 ; add al, ah ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000013d744 : in al, dx ; loope 0x13d743 ; jmp qword ptr [rdx]
0x000000000010e559 : in al, dx ; or byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x0000000000102095 : in al, dx ; or byte ptr [rcx], ch ; ret 0x8d48
0x00000000000659c5 : in al, dx ; pop rax ; or byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x35], cl ; ret
0x0000000000137f34 : in al, dx ; push rdi ; cmc ; call rdx
0x00000000000f0cb3 : in al, dx ; ret
0x0000000000103f68 : in al, dx ; sbb al, ch ; adc dword ptr [rax - 0xf], edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000013fc4d : in eax, 0 ; add al, ah ; mov al, 0xfa ; call qword ptr [rdi]
0x0000000000108d71 : in eax, 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8850 : in eax, 0x48 ; sub eax, edx ; ret
0x00000000000a54a2 : in eax, 0xf ; xchg eax, edi ; ret
0x00000000001307b5 : in eax, 0xfc ; call rsp
0x00000000000e5b98 : in eax, 0xff ; lcall ptr [rax + 0x5a] ; leave ; ret
0x00000000000ef16c : in eax, dx ; add byte ptr [r8 - 0x73], cl ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000012eff9 : in eax, dx ; add byte ptr [rax], al ; fadd dword ptr [rcx] ; stc ; call qword ptr [rax]
0x00000000000e70db : in eax, dx ; add ecx, dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000013e5f2 : in eax, dx ; call qword ptr [rbx]
0x00000000000f8142 : in eax, dx ; lea rax, qword ptr [rdx + rcx] ; ret
0x00000000000b0d90 : in eax, dx ; mov eax, dword ptr [rbx + 0xd0] ; pop rbx ; ret
0x00000000000de9a1 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000056f0e : in eax, dx ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x56edd
0x00000000000fac28 : in eax, dx ; pop rax ; pop rdi ; call rax
0x00000000000026b7 : in eax, dx ; ret 0xae7d
0x00000000000e740f : in eax, dx ; ret 3
0x000000000007143a : inc byte ptr [rax + 0x77] ; ret 0x8948
0x000000000008bf2a : inc byte ptr [rax + 0x77] ; ret 0x894c
0x00000000000317c2 : inc byte ptr [rsi + 0xe] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001228e7 : inc dword ptr [rax + 0x10] ; cld ; ljmp ptr [rax] ; adc ah, bh ; call qword ptr [rax]
0x00000000001230a3 : inc dword ptr [rax + 0x36] ; cld ; push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x000000000009312a : inc dword ptr [rax + 0x77] ; ret 0x894c
0x00000000000ec04d : inc dword ptr [rax + rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000012261b : inc dword ptr [rax - 0x11] ; sti ; lcall ptr [rax - 0x11] ; sti ; jmp rax
0x000000000012e2e7 : inc dword ptr [rax - 0x17ffff3b] ; ret 0xfff7
0x0000000000130897 : inc dword ptr [rax - 0x27fffeac] ; stc ; cld ; call rax
0x00000000001301ef : inc dword ptr [rax - 0x47fffecc] ; or bh, ah ; call rsp
0x000000000012f5f9 : inc dword ptr [rax] ; add al, bh ; stc ; call rax
0x000000000012f601 : inc dword ptr [rax] ; add byte ptr [rax], cl ; stc ; jmp rsp
0x00000000000ea35b : inc dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000f807d : inc dword ptr [rax] ; jne 0xf8079 ; ret
0x00000000000f8515 : inc dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f8975 : inc dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116e97 : inc dword ptr [rax] ; push rbp ; int1 ; call rax
0x000000000001c319 : inc dword ptr [rax] ; ret
0x00000000001230f3 : inc dword ptr [rax] ; xor eax, 0x34f0fffc ; cld ; jmp rax
0x0000000000104bc9 : inc dword ptr [rbp + 0x480575c0] ; add esp, 0x18 ; ret
0x00000000001308bf : inc dword ptr [rbp + rdx*2 + 0x2880001] ; std ; call rsp
0x00000000000a3a3c : inc dword ptr [rbp - 0x7c] ; test byte ptr [rdi], 0x85 ; ret
0x00000000000f4d7b : inc dword ptr [rcx + rcx*4 + 0x44] ; and al, 0xc ; mov rdi, rbp ; call rax
0x00000000000f4726 : inc dword ptr [rcx + rcx*4 + 0x44] ; and al, 8 ; mov rdi, r12 ; call rax
0x0000000000128103 : inc dword ptr [rcx + rsi*2] ; std ; jmp rsp
0x00000000000fc21f : inc dword ptr [rcx] ; fisttp word ptr [rax + 0x63] ; ret 0x8d49
0x00000000001059f1 : inc dword ptr [rcx] ; sete al ; ret
0x000000000012fb57 : inc dword ptr [rdx + 0x38480001] ; sti ; jmp qword ptr [rax]
0x0000000000129d97 : inc dword ptr [rdx] ; std ; push rsp ; loope 0x129da4 ; jmp rsp
0x000000000012cacf : inc eax ; add byte ptr [rax], r8b ; sbb cl, bh ; out dx, al ; call rsp
0x000000000012f7f7 : inc eax ; add eax, 0x6ad80001 ; stc ; call rsp
0x00000000001307af : inc eax ; add qword ptr [r8], r8 ; mov ch, ah ; cld ; call rsp
0x000000000012f3e7 : inc eax ; clc ; add byte ptr [rax], al ; js 0x12f40d ; stc ; call rsp
0x000000000012e39f : inc eax ; enter 0, 0x78 ; and bh, al ; call rsp
0x000000000012ea0f : inc eax ; fadd qword ptr [rax] ; add byte ptr [rax - 0x3f], bh ; clc ; call rsp
0x0000000000130d37 : inc eax ; imul eax, dword ptr [rcx], 0 ; mov byte ptr [rdi - 3], ch ; call rsp
0x000000000012cf2f : inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; fcomp dword ptr [rcx - 0x10] ; call qword ptr [rax]
0x000000000012eb77 : inc eax ; loopne 0x12eb83 ; add al, bh ; leave ; clc ; call rsp
0x00000000001312b7 : inc eax ; mov al, byte ptr [rcx] ; add byte ptr [rax], bl ; adc edi, esi ; jmp rax
0x0000000000131587 : inc eax ; pushfq ; add dword ptr [rax], eax ; sbb byte ptr [rdi - 2], ch ; jmp rsp
0x00000000000f7ed7 : inc esi ; add al, 0x18 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012811f : inc esi ; jae 0x128128 ; lcall ptr [rsp + rsi*2] ; std ; call qword ptr [rbx]
0x000000000012e327 : inc esp ; mov byte ptr [rax], 0 ; call 0xffffffffe512db13
0x00000000000eefc0 : insb byte ptr [rdi], dx ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000012cef1 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmp byte ptr [rbp - 0x10], al ; call rax
0x000000000013e5ec : insb byte ptr [rdi], dx ; iretd ; add byte ptr [rax], al ; mov al, 0xd2 ; in eax, dx ; call qword ptr [rbx]
0x0000000000133c54 : insb byte ptr [rdi], dx ; or al, dh ; call qword ptr [rbx]
0x000000000001ee2f : insb byte ptr [rdi], dx ; ret
0x00000000000ce480 : insb byte ptr [rdi], dx ; ret 0x27
0x000000000001d5c5 : insb byte ptr [rdi], dx ; ret 0x4838
0x000000000010aade : insb byte ptr [rdi], dx ; ret 0x48f8
0x00000000001099c4 : insb byte ptr [rdi], dx ; ret 0x7410
0x000000000012cf31 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; fcomp dword ptr [rcx - 0x10] ; call qword ptr [rax]
0x00000000000d6215 : insd dword ptr [rdi], dx ; add byte ptr [rbx + 0xfc08503], cl ; test ah, dl ; ret 0xffff
0x00000000000d61f1 : insd dword ptr [rdi], dx ; add byte ptr [rbx + 0xfc08503], cl ; test byte ptr [rdi], ch ; ret
0x00000000000d625d : insd dword ptr [rdi], dx ; add byte ptr [rbx + 0xfc08503], cl ; test byte ptr [rsi], bl ; ret 0xffff
0x00000000000d61a9 : insd dword ptr [rdi], dx ; add byte ptr [rbx + 0xfc08503], cl ; test ch, ah ; ret
0x000000000002aa7e : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000130db9 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; cmp byte ptr [rax - 3], bh ; jmp rsp
0x0000000000130db1 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; sub byte ptr [rax - 3], bh ; call rax
0x000000000012dac5 : insd dword ptr [rdi], dx ; hlt ; jmp rax
0x0000000000132985 : insd dword ptr [rdi], dx ; out dx, eax ; jmp qword ptr [rax]
0x000000000009c54f : insd dword ptr [rdi], dx ; ret 4
0x000000000008c0bf : int 0x80
0x0000000000116e92 : int1 ; call qword ptr [rax]
0x0000000000116e9a : int1 ; call rax
0x000000000012d226 : int1 ; call rsp
0x0000000000103f6d : int1 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000012d3a6 : int1 ; dec esp ; add dword ptr [rax], 0xf1a3b800 ; jmp rsp
0x000000000012d2de : int1 ; dec esp ; jle 0x12d2ec ; add byte ptr [rax], cl ; jb 0x12d2e1 ; jmp rsp
0x0000000000116e96 : int1 ; inc dword ptr [rax] ; push rbp ; int1 ; call rax
0x0000000000116e8e : int1 ; jmp qword ptr [rax]
0x000000000012d446 : int1 ; jmp rax
0x0000000000134c5a : int1 ; jmp rcx
0x000000000012d266 : int1 ; jmp rsp
0x000000000012d486 : int1 ; ljmp ptr [rax - 0x37ffff7a] ; out 0xf1, al ; jmp rsp
0x0000000000002435 : int1 ; mov edi, 0xe7db3878 ; ret
0x0000000000056b6e : int1 ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x56b3d
0x0000000000056b6d : int1 ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x56b3e
0x000000000012ca4d : int1 ; out dx, al ; call qword ptr [rax]
0x000000000012d46e : int1 ; push qword ptr [rbp + rax*4 - 0x24180000] ; int1 ; call qword ptr [rax]
0x0000000000116e8a : int1 ; push qword ptr [rbp + rdx*2 + 0x5520fff1] ; int1 ; call qword ptr [rax]
0x000000000012d25e : int1 ; push qword ptr [rsp + rdi*2 + 0x39b80000] ; int1 ; jmp rsp
0x0000000000116e86 : int1 ; push qword ptr [rsp + rdx*2 + 0x55b4fff1] ; int1 ; jmp qword ptr [rax]
0x0000000000002e6f : int1 ; ret
0x00000000000a91d3 : int1 ; sub ecx, dword ptr [rbx] ; mov rdi, r12 ; call rax
0x00000000000f802e : int1 ; xor eax, eax ; ret
0x000000000013e5ed : iretd ; add byte ptr [rax], al ; mov al, 0xd2 ; in eax, dx ; call qword ptr [rbx]
0x00000000001463b9 : iretd ; cld ; jmp qword ptr [rdi]
0x0000000000055ced : iretd ; dec dword ptr [rdx] ; add byte ptr [rax + 0x5a], bl ; jmp 0x55cbe
0x00000000000579ed : iretd ; loop 0x57a01 ; add byte ptr [rax + 0x5a], bl ; jmp 0x579be
0x0000000000100d19 : ja 0x100d52 ; ret
0x0000000000101e19 : ja 0x101e51 ; ret
0x0000000000104b0c : ja 0x104b57 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001065f0 : ja 0x1065da ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000108cd4 : ja 0x108ce4 ; xor eax, eax ; ret
0x0000000000108d47 : ja 0x108d61 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000028f8a : ja 0x28e53 ; xor eax, eax ; ret
0x00000000000292ca : ja 0x29195 ; xor eax, eax ; ret
0x0000000000055945 : ja 0x55951 ; or eax, dword ptr [rax] ; pop rax ; pop rdx ; jmp 0x55916
0x000000000005f978 : ja 0x5f964 ; ret 0x8a8
0x00000000000dd61f : ja 0xdd60f ; add rsp, 8 ; ret
0x00000000000df9b5 : ja 0xdf6a6 ; xor esi, esi ; call qword ptr [r15]
0x00000000000e4707 : ja 0xe471a ; mov rax, qword ptr [rip + 0x479b88] ; ret
0x00000000000f16cb : ja 0xf16da ; mov qword ptr [rax + 0x620], r8 ; ret
0x00000000000f6b5f : ja 0xf6b70 ; bt rsi, rdx ; jb 0xf6b79 ; ret
0x00000000000f753f : ja 0xf7533 ; pop rbx ; ret
0x00000000000f7936 : ja 0xf7923 ; ret
0x00000000000f9bc0 : ja 0xf9bb3 ; ret
0x00000000000f9bf0 : ja 0xf9be3 ; ret
0x00000000000f9c20 : ja 0xf9c13 ; ret
0x00000000000fa8e7 : ja 0xfa8f6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000faea1 : ja 0xfaeb1 ; test rdi, rdi ; jne 0xfaeb9 ; xor eax, eax ; ret
0x0000000000128121 : jae 0x128126 ; lcall ptr [rsp + rsi*2] ; std ; call qword ptr [rbx]
0x000000000012814d : jae 0x12814e ; jmp rsi
0x0000000000128155 : jae 0x128156 ; call rsp
0x00000000001315cd : jae 0x1315cf ; call rsp
0x000000000003150e : jae 0x31513 ; ret
0x000000000003150d : jae 0x31514 ; ret
0x000000000007299a : jae 0x729a4 ; movzx ebx, byte ptr [rax + 0x21] ; call 0xfec78
0x00000000000e618e : jae 0xe619b ; pop rbx ; ret
0x00000000000e884f : jae 0xe883b ; sub rax, rdx ; ret
0x00000000000e98d7 : jae 0xe9898 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000ea237 : jae 0xea20c ; mov eax, 1 ; ret
0x00000000000f6b3b : jae 0xf6b19 ; ret
0x000000000012265c : jb 0x1226ca ; add byte ptr gs:[rcx], ah ; sti ; jmp qword ptr [rax]
0x000000000012265b : jb 0x1226cb ; add byte ptr gs:[rcx], ah ; sti ; jmp qword ptr [rax]
0x000000000012d011 : jb 0x12d019 ; add byte ptr [rax], bl ; jl 0x12d00d ; call rax
0x000000000012d2e5 : jb 0x12d2da ; jmp rsp
0x000000000012dad5 : jb 0x12dacd ; jmp qword ptr [rax]
0x000000000001f073 : jb 0x1f07e ; ret
0x0000000000023588 : jb 0x23597 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000002a4d : jb 0x2a4d ; cmp edi, edx ; mov cl, 9 ; ret
0x000000000003150a : jb 0x31513 ; mov byte ptr [rdi + 0x73], 1 ; ret
0x0000000000031509 : jb 0x31514 ; mov byte ptr [rdi + 0x73], 1 ; ret
0x0000000000003467 : jb 0x3472 ; int1 ; ret
0x0000000000082a62 : jb 0x82a6d ; movzx r14d, byte ptr [rax + 0x21] ; call 0xfec79
0x00000000000e438a : jb 0xe4334 ; add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000e87b2 : jb 0xe87bf ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000000e87f2 : jb 0xe87ff ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000ea203 : jb 0xea233 ; xor eax, eax ; ret
0x00000000000f6b65 : jb 0xf6b73 ; ret
0x00000000000f8d80 : jb 0xf8d73 ; ret
0x00000000000fed96 : jb 0xfed67 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000010692e : jbe 0x106941 ; lea rdi, qword ptr [r15 + 8] ; xor ebx, ebx ; call qword ptr [r14]
0x0000000000003057 : jbe 0x3086 ; add eax, 0xa82345b8 ; ret 0x4e99
0x0000000000042a47 : jbe 0x42a52 ; movzx r12d, byte ptr [rax + 0x21] ; call 0xfec79
0x00000000000f8e5d : jbe 0xf8e1a ; xor eax, eax ; ret
0x00000000000fcf14 : jbe 0xfcf23 ; ret
0x00000000000fcf8d : jbe 0xfcf5f ; ret
0x00000000000fd03c : jbe 0xfd00f ; ret
0x00000000001006cd : je 0x1006da ; jmp rax
0x00000000001006ed : je 0x1006fa ; jmp rax
0x0000000000100dd4 : je 0x100de8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001014d8 : je 0x101501 ; mov rsi, r13 ; add ebx, 1 ; call r12
0x00000000001015db : je 0x1015cd ; mov rsi, r13 ; mov rdi, rbp ; call r12
0x000000000010165e : je 0x101648 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000101ff2 : je 0x102003 ; ret
0x000000000010207d : je 0x1020fa ; ret
0x0000000000102130 : je 0x102136 ; call rax
0x0000000000102146 : je 0x10214c ; call rax
0x00000000001021c2 : je 0x1021c8 ; call rax
0x00000000001021c2 : je 0x1021cd ; call rax
0x0000000000102308 : je 0x102442 ; xor edi, edi ; call rax
0x0000000000102428 : je 0x10244b ; mov edi, 1 ; call rax
0x00000000001030a3 : je 0x1030b6 ; add rsp, 8 ; jmp rax
0x00000000001032f7 : je 0x103303 ; ret
0x0000000000103566 : je 0x103578 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000104cbb : je 0x104cee ; add rsp, 0x28 ; ret
0x0000000000106471 : je 0x106488 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106f2d : je 0x106f3b ; ret
0x00000000001073b6 : je 0x107395 ; mov rdi, rbx ; call rax
0x0000000000107446 : je 0x107428 ; mov rsi, r15 ; mov rdi, rbx ; call rax
0x00000000001074eb : je 0x1074ff ; mov byte ptr [rbx + 0x68], 1 ; pop rbx ; ret
0x0000000000107c61 : je 0x107c96 ; add rsp, 8 ; ret
0x0000000000108545 : je 0x108571 ; or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000010909c : je 0x1090a3 ; pop rbx ; ret
0x000000000010913e : je 0x109158 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001094be : je 0x1094d8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001099c7 : je 0x1099d8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000128119 : je 0x12811a ; jmp rsi
0x0000000000128125 : je 0x128126 ; call qword ptr [rbx]
0x000000000012e45d : je 0x12e459 ; jmp rsp
0x000000000001b50e : je 0x1b514 ; call rax
0x000000000001b911 : je 0x1b923 ; pop rbp ; jmp rax
0x000000000001b962 : je 0x1b973 ; pop rbp ; jmp rax
0x000000000001c123 : je 0x1c139 ; lea rax, qword ptr [rdi + 0x80] ; ret
0x000000000001c163 : je 0x1c175 ; mov rax, rdi ; ret
0x000000000001c228 : je 0x1c239 ; cmp byte ptr [rdx], 0 ; setne al ; ret
0x000000000001c248 : je 0x1c259 ; cmp byte ptr [rdx], 2 ; sete al ; ret
0x000000000001c268 : je 0x1c279 ; cmp byte ptr [rdx], 3 ; sete al ; ret
0x000000000001c2a5 : je 0x1c2b6 ; add rax, rbx ; pop rbx ; ret
0x000000000001c2d0 : je 0x1c2db ; ret
0x000000000001c366 : je 0x1c396 ; add rsp, 8 ; ret
0x000000000001c3c6 : je 0x1c3f6 ; add rsp, 8 ; ret
0x000000000001dedd : je 0x1deee ; mov rax, rbx ; pop rbx ; ret
0x000000000001f096 : je 0x1f0a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001f495 : je 0x1f4c2 ; or byte ptr [rcx + 1], cl ; out dx, eax ; call r14
0x0000000000023af2 : je 0x23b21 ; sub byte ptr [rax - 0x73], cl ; push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000268ca : je 0x268de ; add rsp, 0x18 ; ret
0x00000000000269c5 : je 0x269f7 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000026a67 : je 0x26ac8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000026b0b : je 0x26b36 ; add rsp, 0x18 ; ret
0x000000000002fb84 : je 0x2fa0f ; mov r10, r8 ; jmp 0x2fb6f
0x0000000000032de9 : je 0x32dfe ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000033b33 : je 0x33b45 ; mov rax, rdi ; ret
0x0000000000033cb4 : je 0x33cc3 ; ret
0x00000000000344c7 : je 0x344d5 ; mov rdi, qword ptr [rdi] ; jmp rax
0x00000000000344e7 : je 0x344f5 ; mov rdi, qword ptr [rdi] ; jmp rcx
0x0000000000034507 : je 0x34513 ; mov rdi, qword ptr [rdi] ; jmp rax
0x0000000000034820 : je 0x34845 ; mov rdi, qword ptr [rdi] ; call rax
0x0000000000038920 : je 0x390b6 ; call rax
0x00000000000464d0 : je 0x46a66 ; call rax
0x000000000005dfc5 : je 0x5dfe6 ; call 0xea244
0x000000000006df72 : je 0x6df93 ; call 0xea244
0x000000000007dff6 : je 0x7e084 ; call 0xea248
0x00000000000895e0 : je 0x895e6 ; add byte ptr [rax - 0x77], r9b ; ret
0x000000000008d6a6 : je 0x8d6c5 ; call qword ptr [rip + 0x4cc2da]
0x000000000008d773 : je 0x8d7a1 ; sbb byte ptr [rcx - 0x2076b716], cl ; call rax
0x000000000008d853 : je 0x8d881 ; sbb byte ptr [rcx - 0x2076b716], cl ; call rax
0x000000000008df65 : je 0x8df81 ; call 0xea244
0x00000000000a91a9 : je 0xa91d9 ; call rax
0x00000000000adf5e : je 0xadfe2 ; call 0xea244
0x00000000000b0d8f : je 0xb0d87 ; mov eax, dword ptr [rbx + 0xd0] ; pop rbx ; ret
0x00000000000bb646 : je 0xbb65b ; pop rbx ; ret
0x00000000000be014 : je 0xbe030 ; call 0xea244
0x00000000000e0b18 : je 0xe0b39 ; add al, byte ptr [rax] ; nop dword ptr [rax] ; ret
0x00000000000e0d01 : je 0xe0d0d ; mov rdi, rbx ; call rax
0x00000000000e11ae : je 0xe11ba ; mov rdi, rbx ; call rax
0x00000000000e1740 : je 0xe174c ; mov rdi, rbx ; call rax
0x00000000000e1b4f : je 0xe1b5b ; mov rdi, rbx ; call rax
0x00000000000e1f37 : je 0xe1f43 ; mov rdi, rbx ; call rax
0x00000000000e232d : je 0xe2339 ; mov rdi, rbx ; call rax
0x00000000000e2717 : je 0xe2723 ; mov rdi, rbx ; call rax
0x00000000000e2af7 : je 0xe2b03 ; mov rdi, rbx ; call rax
0x00000000000e2f3d : je 0xe2f49 ; mov rdi, rbx ; call rax
0x00000000000e3334 : je 0xe3340 ; mov rdi, rbx ; call rax
0x00000000000e3736 : je 0xe3742 ; mov rdi, rbx ; call rax
0x00000000000e3b7e : je 0xe3b8a ; mov rdi, rbx ; call rax
0x00000000000e3f20 : je 0xe3f2c ; mov rdi, rbx ; call rax
0x00000000000e43c0 : je 0xe43cc ; mov rdi, rbx ; call rax
0x00000000000e4689 : je 0xe4693 ; ret
0x00000000000e46a9 : je 0xe46b3 ; ret
0x00000000000e46c9 : je 0xe46d3 ; ret
0x00000000000e4749 : je 0xe4753 ; ret
0x00000000000e4769 : je 0xe4773 ; ret
0x00000000000e478e : je 0xe479b ; ret
0x00000000000e517e : je 0xe5189 ; mov qword ptr [rax], rdi ; ret
0x00000000000e51de : je 0xe51e9 ; mov qword ptr [rax], rdi ; ret
0x00000000000e523e : je 0xe5249 ; mov qword ptr [rax], rdi ; ret
0x00000000000e52a1 : je 0xe52ac ; mov qword ptr [rax], rdi ; ret
0x00000000000e5311 : je 0xe531c ; mov qword ptr [rax], rdi ; ret
0x00000000000e5381 : je 0xe538c ; mov qword ptr [rax], rdi ; ret
0x00000000000e53f1 : je 0xe53fc ; mov qword ptr [rax], rdi ; ret
0x00000000000e5461 : je 0xe546c ; mov qword ptr [rax], rdi ; ret
0x00000000000e54d1 : je 0xe54dc ; mov qword ptr [rax], rdi ; ret
0x00000000000e5535 : je 0xe5545 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5595 : je 0xe55a5 ; mov qword ptr [rax], rdi ; ret
0x00000000000e55f5 : je 0xe5605 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5655 : je 0xe5665 ; mov qword ptr [rax], rdi ; ret
0x00000000000e56b5 : je 0xe56c5 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5715 : je 0xe5725 ; mov qword ptr [rax], rdi ; ret
0x00000000000e577e : je 0xe5789 ; mov qword ptr [rax], rdi ; ret
0x00000000000e57ee : je 0xe57f9 ; mov qword ptr [rax], rdi ; ret
0x00000000000e585e : je 0xe5869 ; mov qword ptr [rax], rdi ; ret
0x00000000000e58d1 : je 0xe58dc ; mov qword ptr [rax], rdi ; ret
0x00000000000e5941 : je 0xe594c ; mov qword ptr [rax], rdi ; ret
0x00000000000e59b1 : je 0xe59bc ; mov qword ptr [rax], rdi ; ret
0x00000000000e5a21 : je 0xe5a2c ; mov qword ptr [rax], rdi ; ret
0x00000000000e5a91 : je 0xe5a9c ; mov qword ptr [rax], rdi ; ret
0x00000000000e5b01 : je 0xe5b0c ; mov qword ptr [rax], rdi ; ret
0x00000000000e5b65 : je 0xe5b75 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5bc5 : je 0xe5bd5 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5c25 : je 0xe5c35 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5c85 : je 0xe5c95 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5ce5 : je 0xe5cf5 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5d45 : je 0xe5d55 ; mov qword ptr [rax], rdi ; ret
0x00000000000e62e7 : je 0xe62f3 ; ret
0x00000000000e69f8 : je 0xe6a03 ; ret
0x00000000000e6a51 : je 0xe6a66 ; add rsp, 8 ; ret
0x00000000000e779d : je 0xe77b9 ; mov edx, 0x220 ; xor esi, esi ; jmp rax
0x00000000000e77ed : je 0xe7809 ; mov edx, 0x220 ; xor esi, esi ; jmp rax
0x00000000000e7ebe : je 0xe7ece ; add rsp, 8 ; ret
0x00000000000e82c7 : je 0xe82e1 ; mov rax, qword ptr [rip + 0x477508] ; ret
0x00000000000ea463 : je 0xea473 ; pop rbx ; ret
0x00000000000ea823 : je 0xea833 ; pop rbx ; ret
0x00000000000eaa79 : je 0xeaa91 ; lea rax, qword ptr [rip + 0x4826be] ; ret
0x00000000000eabd4 : je 0xeabee ; mov rdi, rax ; mov rsi, r12 ; call rcx
0x00000000000ead39 : je 0xead42 ; xor eax, eax ; ret
0x00000000000ead60 : je 0xead69 ; xor eax, eax ; ret
0x00000000000f08b0 : je 0xf08c9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0f97 : je 0xf0fa3 ; ret
0x00000000000f11d9 : je 0xf11f2 ; add rbx, 0x10 ; mov rdi, r12 ; call rax
0x00000000000f142c : je 0xf147b ; ret
0x00000000000f1598 : je 0xf15a3 ; ret
0x00000000000f7fa4 : je 0xf7f99 ; cmp eax, edx ; sbb eax, eax ; or eax, 1 ; ret
0x00000000000f8029 : je 0xf8040 ; test al, al ; jne 0xf8028 ; xor eax, eax ; ret
0x00000000000f9b13 : je 0xf9b20 ; neg edi ; mov dword ptr [rsi], edi ; ret
0x00000000000f9d23 : je 0xf9d30 ; mov eax, dword ptr [rsp - 0x18] ; ret
0x00000000000fa12f : je 0xfa13b ; pop rbx ; ret
0x00000000000fa12a : je 0xfa160 ; cmp ecx, 2 ; je 0xfa140 ; pop rbx ; ret
0x00000000000fa184 : je 0xfa193 ; ret
0x00000000000fac9d : je 0xfacab ; ret
0x00000000000fbde5 : je 0xfbdf6 ; cmp byte ptr [rdi], 0x2f ; sete al ; ret
0x00000000000fcbbe : je 0xfcbca ; mov rdi, rbx ; call rax
0x00000000000fdd27 : je 0xfdd33 ; ret
0x00000000000fdd72 : je 0xfdd82 ; test rdi, rdi ; jne 0xfdd89 ; xor eax, eax ; ret
0x00000000000fe921 : je 0xfea23 ; mov r10, r8 ; jmp 0xfe8d6
0x0000000000106932 : jg 0x106941 ; xor ebx, ebx ; call qword ptr [r14]
0x0000000000111858 : jg 0x1117ed ; add qword ptr [rax - 0x7d], rcx ; ret 0x4802
0x000000000012d321 : jg 0x12d329 ; add byte ptr [rax + 0x7a], ch ; int1 ; call rax
0x00000000001310f1 : jg 0x1310f8 ; add byte ptr [rax], cl ; ret 0xfffd
0x00000000001310f9 : jg 0x131100 ; add byte ptr [rax], ch ; ret 0xfffd
0x0000000000131109 : jg 0x131110 ; add al, bl ; ret 0xfffd
0x0000000000028a87 : jg 0x28a7e ; ret
0x000000000002ec3f : jg 0x2ec8e ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000031235 : jg 0x31287 ; sub edx, edi ; and r12, 0xffffffffffffffe0 ; call qword ptr [rbx]
0x00000000000312db : jg 0x31343 ; pop r12 ; pop r13 ; sub rdx, rdi ; jmp rax
0x00000000000313d9 : jg 0x3141e ; jmp rax
0x00000000000339c0 : jg 0x33a05 ; call qword ptr [rsi]
0x0000000000033ed5 : jg 0x33edb ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000033f61 : jg 0x33f67 ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000045a3d : jg 0x45a48 ; or al, 0 ; pop rax ; pop rdx ; jmp 0x45a0e
0x00000000000b3de0 : jg 0xb3e34 ; add byte ptr [rax + 0x3875003a], al ; call rax
0x00000000000def96 : jg 0xdef47 ; ret
0x00000000000e017f : jg 0xe010e ; leave ; jne 0xe0169 ; add rsp, 8 ; ret
0x00000000000e515d : jg 0xe50e9 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e51bd : jg 0xe5149 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e521d : jg 0xe51a9 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e527d : jg 0xe5209 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e52ed : jg 0xe5279 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e535d : jg 0xe52e9 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e53cd : jg 0xe5359 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e543d : jg 0xe53c9 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e54ad : jg 0xe5439 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e551c : jg 0xe5523 ; jne 0xe552d ; ret
0x00000000000e557c : jg 0xe5583 ; jne 0xe558d ; ret
0x00000000000e55dc : jg 0xe55e3 ; jne 0xe55ed ; ret
0x00000000000e563d : jg 0xe5644 ; jne 0xe564d ; ret
0x00000000000e569d : jg 0xe56a4 ; jne 0xe56ad ; ret
0x00000000000e575d : jg 0xe56e9 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e56fd : jg 0xe5704 ; jne 0xe570d ; ret
0x00000000000e57cd : jg 0xe5759 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e583d : jg 0xe57c9 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e58ad : jg 0xe5839 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e591d : jg 0xe58a9 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e598d : jg 0xe5919 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e59fd : jg 0xe5989 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e5a6d : jg 0xe59f9 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e5add : jg 0xe5a69 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000e5b4c : jg 0xe5b53 ; jne 0xe5b5d ; ret
0x00000000000e5bac : jg 0xe5bb3 ; jne 0xe5bbd ; ret
0x00000000000e5c0c : jg 0xe5c13 ; jne 0xe5c1d ; ret
0x00000000000e5c6d : jg 0xe5c74 ; jne 0xe5c7d ; ret
0x00000000000e5ccd : jg 0xe5cd4 ; jne 0xe5cdd ; ret
0x00000000000e5d2d : jg 0xe5d34 ; jne 0xe5d3d ; ret
0x00000000000e618a : jg 0xe61db ; cmp ecx, eax ; jae 0xe619f ; pop rbx ; ret
0x00000000000ec031 : jg 0xec038 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ec26a : jg 0xec271 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ed668 : jg 0xed66f ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ed775 : jg 0xed77c ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ee6ae : jg 0xee6b5 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ee844 : jg 0xee84b ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ee963 : jg 0xee96a ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000f77df : jg 0xf77d3 ; pop rbx ; ret
0x00000000000f807c : jg 0xf8083 ; add byte ptr [rbp - 0xd], dh ; ret
0x00000000000f832f : jg 0xf8328 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f8f51 : jg 0xf8fa0 ; cmovns eax, ecx ; ret
0x000000000011458f : jge 0x1145d7 ; clc ; dec dword ptr [rax + 1] ; ret
0x000000000011458f : jge 0x1145da ; clc ; dec dword ptr [rax + 1] ; ret
0x000000000011477f : jge 0x11476f ; call rbx
0x0000000000131615 : jge 0x131617 ; jmp rsp
0x000000000001ef2f : jge 0x1ef16 ; or eax, 0x58b4800 ; push rsi ; ret 0x32
0x0000000000030b25 : jge 0x30b37 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e768d : jge 0xe76db ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000106f29 : jl 0x106f48 ; dec dword ptr [rdx] ; je 0x106f3f ; ret
0x0000000000106f39 : jl 0x106f58 ; dec byte ptr [rdx] ; sete al ; ret
0x000000000010d1b5 : jl 0x10d1c3 ; sbb al, ch ; ret
0x000000000012d015 : jl 0x12d009 ; call rax
0x0000000000131091 : jl 0x13109a ; add byte ptr [rax], ch ; mov dl, 0xfd ; jmp qword ptr [rax]
0x0000000000142474 : jl 0x142441 ; sti ; jmp qword ptr [rax]
0x00000000001466fc : jl 0x146755 ; add dword ptr [rax], eax ; adc dl, 0xfc ; call rdi
0x0000000000020f27 : jl 0x20f43 ; add byte ptr [rax + 1], cl ; ret 0xc149
0x0000000000025232 : jl 0x25260 ; sbb byte ptr [rcx + rcx*4 - 0x12], cl ; call 0x21458
0x000000000005aaa5 : jl 0x5aa19 ; jmp 0x5aa77
0x000000000006f112 : jl 0x6f13d ; sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000026af : jl 0x7b3e2141 ; mov dl, 0xd4 ; in eax, dx ; ret 0xae7d
0x00000000000940fb : jl 0x94152 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; mov r13, r12 ; call rax
0x00000000000a4002 : jl 0xa402d ; sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000b0d24 : jl 0xb0d52 ; or byte ptr [rbx + 0x7501a807], cl ; ret
0x00000000000e69f3 : jl 0xe6a44 ; add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000012d03d : jle 0x12d031 ; call rsp
0x000000000012d2e1 : jle 0x12d2e9 ; add byte ptr [rax], cl ; jb 0x12d2de ; jmp rsp
0x000000000012f8f5 : jle 0x12f8f2 ; call qword ptr [rax]
0x0000000000141009 : jle 0x141008 ; jmp qword ptr [rdx]
0x0000000000024e52 : jle 0x24e61 ; cmp rdx, rcx ; cmova rdx, rcx ; call qword ptr [rax]
0x000000000006b2cf : jle 0x6b2dc ; add cl, ch ; ret 0xfffb
0x000000000007b477 : jle 0x7b463 ; ret
0x000000000007dd77 : jle 0x7dd63 ; ret
0x0000000000080677 : jle 0x80663 ; ret
0x00000000001066d6 : jmp 0x10669b
0x00000000001070df : jmp 0x1070a4
0x00000000001099e9 : jmp 0x1099af
0x000000000010bbad : jmp 0x10b9fe
0x000000000010ef4b : jmp 0x10ef10
0x000000000001b6fb : jmp 0x1b527
0x000000000001d0c2 : jmp 0x1cf47
0x0000000000002605 : jmp 0x266f
0x0000000000029200 : jmp 0x29209
0x000000000002d307 : jmp 0x2ce63
0x0000000000031d0a : jmp 0x31d72
0x000000000003d52b : jmp 0x3d4f0
0x0000000000045733 : jmp 0x456f8
0x0000000000045a43 : jmp 0x45a08
0x0000000000045d53 : jmp 0x45d18
0x0000000000023db4 : jmp 0x48c4c704
0x000000000004da29 : jmp 0x4d9ef
0x0000000000054e93 : jmp 0x54e58
0x0000000000055223 : jmp 0x551e8
0x000000000005594b : jmp 0x55910
0x0000000000055cf3 : jmp 0x55cb8
0x0000000000056093 : jmp 0x56058
0x0000000000056433 : jmp 0x563f8
0x00000000000567d3 : jmp 0x56798
0x0000000000056b73 : jmp 0x56b38
0x0000000000056f13 : jmp 0x56ed8
0x00000000000572b3 : jmp 0x57278
0x0000000000057653 : jmp 0x57618
0x00000000000579f3 : jmp 0x579b8
0x0000000000057d93 : jmp 0x57d58
0x0000000000058133 : jmp 0x580f8
0x00000000000584d3 : jmp 0x58498
0x0000000000058873 : jmp 0x58838
0x0000000000058c13 : jmp 0x58bd8
0x0000000000058fb3 : jmp 0x58f78
0x0000000000059353 : jmp 0x59318
0x00000000000596f3 : jmp 0x596b8
0x0000000000059a93 : jmp 0x59a58
0x0000000000059e33 : jmp 0x59df8
0x000000000005a1d3 : jmp 0x5a198
0x000000000005a573 : jmp 0x5a538
0x000000000005aaab : jmp 0x5aa71
0x000000000006c1cd : jmp 0x6c193
0x0000000000073e11 : jmp 0x73dd7
0x000000000007787d : jmp 0x77843
0x000000000008b0f8 : jmp 0x7b473e7
0x000000000002a429 : jmp 0x8582f78
0x0000000000089c8b : jmp 0x89c50
0x000000000008a0cb : jmp 0x8a090
0x000000000008a50b : jmp 0x8a4d0
0x00000000000bfd14 : jmp 0xbfcda
0x00000000000d6277 : jmp 0xd2489
0x00000000000d6253 : jmp 0xd24c0
0x00000000000d622f : jmp 0xd24f7
0x00000000000dbef3 : jmp 0xdbe04
0x00000000000dd592 : jmp 0xdd59b
0x00000000000e072e : jmp 0xe06fa
0x00000000000e07f7 : jmp 0xe07bc
0x00000000000e6f95 : jmp 0xe6f9e
0x00000000000f2be3 : jmp 0xf2ba8
0x00000000000f93b2 : jmp 0xf9377
0x00000000000e4a57 : jmp 0xfb058
0x00000000000fb193 : jmp 0xfb14e
0x00000000000031af : jmp 0xffffffffc3395340
0x00000000000fddca : jmp 0xffffffffc34139a4
0x00000000000fe1da : jmp 0xffffffffc3413db4
0x000000000002e9d2 : jmp 0xffffffffcb3c31df
0x0000000000128113 : jmp qword ptr [rax + rsi*2 - 3]
0x0000000000087a8b : jmp qword ptr [rax]
0x000000000012e2ef : jmp qword ptr [rbp + rax*8 - 0x3c780000]
0x00000000001316e3 : jmp qword ptr [rbx]
0x0000000000132c43 : jmp qword ptr [rcx]
0x00000000000ca42e : jmp qword ptr [rdi]
0x000000000013d747 : jmp qword ptr [rdx]
0x000000000004afa1 : jmp qword ptr [rsi + 0xf]
0x00000000000dbe1d : jmp qword ptr [rsi - 0x70]
0x00000000000660bd : jmp qword ptr [rsi]
0x00000000000313da : jmp r8
0x000000000001b914 : jmp rax
0x000000000013fd73 : jmp rbx
0x00000000000344ec : jmp rcx
0x000000000004d4c5 : jmp rdi
0x00000000000e06e1 : jmp rdx
0x00000000000ef7f5 : jmp rsi
0x000000000013011f : jmp rsp
0x0000000000100778 : jne 0x1007be ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100f5a : jne 0x100f63 ; ret
0x0000000000100fe4 : jne 0x100ff6 ; add rsp, 8 ; ret
0x000000000010105d : jne 0x10107b ; ret
0x000000000010109f : jne 0x1010ab ; ret
0x00000000001010de : jne 0x1010eb ; ret
0x0000000000101116 : jne 0x101123 ; ret
0x00000000001025ba : jne 0x1025d1 ; mov qword ptr [rip + 0xeae315], rdi ; ret
0x0000000000102edf : jne 0x102ebe ; ret
0x0000000000102f30 : jne 0x102f48 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010305b : jne 0x103063 ; ret
0x0000000000103323 : jne 0x103333 ; ret
0x00000000001034f8 : jne 0x103506 ; add rsp, 8 ; ret
0x0000000000103867 : jne 0x103873 ; ret
0x000000000010496b : jne 0x104973 ; ret
0x0000000000104b9e : jne 0x104bab ; ret
0x0000000000104bcc : jne 0x104bd9 ; add rsp, 0x18 ; ret
0x0000000000104da2 : jne 0x104dd6 ; add rsp, 0x28 ; ret
0x0000000000104ebb : jne 0x104ece ; add rsp, 0x48 ; ret
0x0000000000105945 : jne 0x105969 ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000001059b2 : jne 0x1059d9 ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000105d53 : jne 0x105d63 ; ret
0x0000000000105e73 : jne 0x105e83 ; ret
0x0000000000106d5d : jne 0x106d54 ; xor eax, eax ; ret
0x0000000000108b63 : jne 0x108b77 ; mov eax, 1 ; ret
0x0000000000109da4 : jne 0x109db7 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010b2cb : jne 0x10b2d2 ; ret
0x000000000010b7b8 : jne 0x10b7c3 ; pop rbx ; ret
0x000000000010bc68 : jne 0x10bc80 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010d80e : jne 0x10d803 ; ret
0x000000000010d82b : jne 0x10d833 ; ret
0x000000000010dc4b : jne 0x10dc53 ; ret
0x000000000010dcce : jne 0x10dcdd ; mov eax, ebx ; pop rbx ; ret
0x000000000010e05b : jne 0x10e063 ; ret
0x000000000010e09f : jne 0x10e0a6 ; ret
0x000000000010e31b : jne 0x10e323 ; ret
0x0000000000113d49 : jne 0x113d58 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000113eb4 : jne 0x113ec3 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000114191 : jne 0x1141a0 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000114220 : jne 0x11422f ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000114487 : jne 0x114496 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000001147ca : jne 0x1147db ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001148db : jne 0x1148ea ; add rsp, 0x20 ; pop rbp ; ret
0x000000000011497a : jne 0x114989 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000128091 : jne 0x128092 ; call rsp
0x000000000012d099 : jne 0x12d0a1 ; add al, ch ; mov ah, 0xf0 ; call rax
0x000000000012dd65 : jne 0x12dd5e ; jmp qword ptr [rax]
0x000000000001b9ef : jne 0x1b9e3 ; ret
0x000000000001ba47 : jne 0x1ba56 ; add rsp, 8 ; ret
0x000000000001bb39 : jne 0x1bb18 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000001e77c : jne 0x1e78d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001e7e2 : jne 0x1e7d8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001e841 : jne 0x1e852 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001e89a : jne 0x1e890 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002835a : jne 0x2836b ; pop rbx ; ret
0x0000000000028a94 : jne 0x28aa9 ; lea rax, qword ptr [rip + 0x100bae] ; ret
0x0000000000028b37 : jne 0x28b56 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002fd3a : jne 0x2fd32 ; ret
0x000000000003012a : jne 0x30122 ; ret
0x000000000003369c : jne 0x336a3 ; ret
0x0000000000033c47 : jne 0x33c58 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033ce4 : jne 0x33cf3 ; ret
0x000000000003402b : jne 0x34033 ; ret
0x000000000004641a : jne 0x46424 ; xor eax, eax ; ret
0x0000000000046d2a : jne 0x46d34 ; xor eax, eax ; ret
0x0000000000046d7a : jne 0x46d84 ; xor eax, eax ; ret
0x0000000000046dca : jne 0x46dd4 ; xor eax, eax ; ret
0x000000000004c531 : jne 0x4c589 ; mov rdi, rax ; call 0xe8787
0x0000000000072a0f : jne 0x72ce8 ; call 0xfec78
0x0000000000092a31 : jne 0x92ae8 ; call 0xfec78
0x000000000009c53a : jne 0x9c596 ; mov rdi, rax ; call 0xe8787
0x00000000000a2a1c : jne 0xa3730 ; call 0xfec78
0x00000000000b0cb8 : jne 0xb0c98 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b0d10 : jne 0xb0cf7 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b0d7c : jne 0xb0d8d ; xor eax, eax ; pop rbx ; ret
0x00000000000b3de6 : jne 0xb3e22 ; call rax
0x00000000000d4a3e : jne 0xd4a4b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000df0ce : jne 0xdf0de ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0182 : jne 0xe0166 ; add rsp, 8 ; ret
0x00000000000e02d9 : jne 0xe0306 ; add rsp, 8 ; ret
0x00000000000e03dc : jne 0xe03f6 ; add rsp, 8 ; ret
0x00000000000e47ac : jne 0xe47b3 ; ret
0x00000000000e47fc : jne 0xe4803 ; ret
0x00000000000e4892 : jne 0xe4876 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5160 : jne 0xe516b ; ret
0x00000000000e51c0 : jne 0xe51cb ; ret
0x00000000000e5220 : jne 0xe522b ; ret
0x00000000000e5280 : jne 0xe528b ; ret
0x00000000000e52f0 : jne 0xe52fb ; ret
0x00000000000e5360 : jne 0xe536b ; ret
0x00000000000e53d0 : jne 0xe53db ; ret
0x00000000000e5440 : jne 0xe544b ; ret
0x00000000000e54b0 : jne 0xe54bb ; ret
0x00000000000e551e : jne 0xe552b ; ret
0x00000000000e557e : jne 0xe558b ; ret
0x00000000000e55de : jne 0xe55eb ; ret
0x00000000000e563f : jne 0xe564b ; ret
0x00000000000e569f : jne 0xe56ab ; ret
0x00000000000e56ff : jne 0xe570b ; ret
0x00000000000e5760 : jne 0xe576b ; ret
0x00000000000e57d0 : jne 0xe57db ; ret
0x00000000000e5840 : jne 0xe584b ; ret
0x00000000000e58b0 : jne 0xe58bb ; ret
0x00000000000e5920 : jne 0xe592b ; ret
0x00000000000e5990 : jne 0xe599b ; ret
0x00000000000e5a00 : jne 0xe5a0b ; ret
0x00000000000e5a70 : jne 0xe5a7b ; ret
0x00000000000e5ae0 : jne 0xe5aeb ; ret
0x00000000000e5b4e : jne 0xe5b5b ; ret
0x00000000000e5bae : jne 0xe5bbb ; ret
0x00000000000e5c0e : jne 0xe5c1b ; ret
0x00000000000e5c6f : jne 0xe5c7b ; ret
0x00000000000e5ccf : jne 0xe5cdb ; ret
0x00000000000e5d2f : jne 0xe5d3b ; ret
0x00000000000e6d10 : jne 0xe6d26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7620 : jne 0xe7613 ; ret
0x00000000000e761f : jne 0xe7614 ; ret
0x00000000000e7a90 : jne 0xe7a83 ; ret
0x00000000000e7a8f : jne 0xe7a84 ; ret
0x00000000000ea2a7 : jne 0xea313 ; pop rbx ; ret
0x00000000000f093d : jne 0xf0926 ; mov byte ptr [rbx], 0 ; pop rbx ; ret
0x00000000000f0b9f : jne 0xf0b7c ; pop rbx ; ret
0x00000000000f0cb2 : jne 0xf0ca3 ; ret
0x00000000000f0cdc : jne 0xf0ce3 ; ret
0x00000000000f0d1c : jne 0xf0d23 ; ret
0x00000000000f11e7 : jne 0xf11d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f135b : jne 0xf1363 ; ret
0x00000000000f167c : jne 0xf166b ; ret
0x00000000000f16f7 : jne 0xf1707 ; xor eax, eax ; mov dword ptr [rdx + 8], eax ; ret
0x00000000000f2514 : jne 0xf2523 ; ret
0x00000000000f69b8 : jne 0xf69c3 ; ret
0x00000000000f72f6 : jne 0xf72ec ; xor eax, eax ; ret
0x00000000000f7330 : jne 0xf7323 ; ret
0x00000000000f736d : jne 0xf735c ; xor eax, eax ; ret
0x00000000000f7567 : jne 0xf755b ; ret
0x00000000000f7807 : jne 0xf77fb ; ret
0x00000000000f782f : jne 0xf7823 ; ret
0x00000000000f797a : jne 0xf7973 ; ret
0x00000000000f79c4 : jne 0xf7993 ; ret
0x00000000000f79ae : jne 0xf79a3 ; ret
0x00000000000f7ff9 : jne 0xf7fe4 ; xor eax, eax ; ret
0x00000000000f802d : jne 0xf8024 ; xor eax, eax ; ret
0x00000000000f8065 : jne 0xf805b ; ret
0x00000000000f807f : jne 0xf8077 ; ret
0x00000000000f80bf : jne 0xf80b3 ; ret
0x00000000000f80e8 : jne 0xf80e3 ; ret
0x00000000000f8141 : jne 0xf8136 ; lea rax, qword ptr [rdx + rcx] ; ret
0x00000000000f876b : jne 0xf8756 ; mov byte ptr [r10], 0 ; ret
0x00000000000f87a6 : jne 0xf87b6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8d4d : jne 0xf8d3b ; ret
0x00000000000f8dad : jne 0xf8da3 ; ret
0x00000000000f8e42 : jne 0xf8e33 ; ret
0x00000000000f8e89 : jne 0xf8e83 ; ret
0x00000000000f8f98 : jne 0xf8fc0 ; ret
0x00000000000f8f97 : jne 0xf8fc1 ; ret
0x00000000000fa0f4 : jne 0xfa0e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fac24 : jne 0xfac40 ; xor rbp, rbp ; pop rax ; pop rdi ; call rax
0x00000000000fae33 : jne 0xfae3a ; ret
0x00000000000faea6 : jne 0xfaeb4 ; xor eax, eax ; ret
0x00000000000faf30 : jne 0xfaee3 ; ret
0x00000000000fd252 : jne 0xfd266 ; add rsp, 0x28 ; ret
0x00000000000fdd77 : jne 0xfdd84 ; xor eax, eax ; ret
0x00000000000fe727 : jne 0xfe713 ; ret
0x00000000000feb67 : jne 0xfeb76 ; xor eax, eax ; xor edx, edx ; ret
0x00000000000fef17 : jne 0xfef0b ; pop rbx ; ret
0x00000000000fefac : jne 0xfef71 ; pop rbx ; ret
0x00000000000fefac : jne 0xfef73 ; pop rbx ; ret
0x00000000000ffd23 : jne 0xffd33 ; ret
0x0000000000128101 : jno 0x128106 ; inc dword ptr [rcx + rsi*2] ; std ; jmp rsp
0x0000000000128105 : jno 0x128106 ; jmp rsp
0x0000000000140f0d : jno 0x140f0c ; jmp qword ptr [rdx]
0x00000000000fa7db : jno 0xfa7ee ; add byte ptr [rax], al ; nop ; movzx eax, byte ptr [rdi + 0x18] ; ret
0x0000000000100aa4 : jnp 0x100aaf ; add byte ptr [rcx], dh ; shr al, 0xa2 ; ret 0xffff
0x0000000000026efc : jnp 0x26f0b ; cmp rdx, rcx ; cmova rdx, rcx ; call qword ptr [rax]
0x000000000002765c : jnp 0x2766b ; cmp rdx, rcx ; cmova rdx, rcx ; call qword ptr [rax]
0x0000000000028b34 : jnp 0x28b6f ; add byte ptr [rbp + 0x17], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b0d79 : jnp 0xb0dbc ; add byte ptr [rbp + 0xa], dh ; xor eax, eax ; pop rbx ; ret
0x00000000000e93eb : jnp 0xe93ff ; call rax
0x00000000000e9695 : jnp 0xe96a9 ; call rax
0x0000000000131019 : jns 0x131022 ; add byte ptr [rax], bh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rax
0x000000000013f0c9 : jns 0x13f0c7 ; call rsp
0x0000000000030ee5 : jns 0x30ef7 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d4435 : jns 0xd443f ; add al, ch ; ret
0x0000000000101543 : jo 0x1014ca ; ret
0x00000000001014e5 : jo 0x101522 ; ret
0x00000000001014e4 : jo 0x101523 ; ret
0x00000000001015c3 : jo 0x10154a ; ret
0x000000000010df94 : jo 0x10dffa ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e024 : jo 0x10e08a ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000117725 : jo 0x117737 ; add al, ah ; pop rsi ; int1 ; call rax
0x0000000000117722 : jo 0x11774d ; and eax, 0xe0000a70 ; pop rsi ; int1 ; call rax
0x000000000012ca38 : jo 0x12ca8d ; add byte ptr [rax], al ; fsubr st(7) ; out dx, al ; jmp rax
0x000000000012f83d : jo 0x12f83a ; call rsp
0x000000000012f855 : jo 0x12f852 ; call qword ptr [rax]
0x0000000000130140 : jo 0x130179 ; add dword ptr [rax], eax ; cmp bh, bl ; sti ; jmp rsp
0x00000000001301d8 : jo 0x130214 ; add dword ptr [rax], eax ; sbb dl, dh ; sti ; call rsp
0x0000000000130e79 : jo 0x130e82 ; add byte ptr [rax], cl ; test ch, bh ; call qword ptr [rax]
0x0000000000131430 : jo 0x1313cf ; add dword ptr [rax], eax ; fcom dword ptr [rdi - 2] ; jmp rsp
0x000000000013d9bc : jo 0x13d9c3 ; add byte ptr [rax], al ; ret
0x00000000001463f0 : jo 0x146446 ; add dword ptr [rax], eax ; pop rsp ; iretd ; cld ; jmp qword ptr [rdi]
0x000000000002f917 : jo 0x2f966 ; mov dword ptr [rcx + 0x78], edx ; ret
0x0000000000082a67 : jo 0x82a8e ; call 0xfec74
0x00000000000a3170 : jo 0xa317e ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 7
0x00000000000d2a36 : jo 0xd2a40 ; add al, ch ; ret 0x17f
0x00000000000fda50 : jo 0xfda64 ; xchg eax, esp ; ret 0x841
0x000000000012cfdd : jp 0x12cfd1 ; call qword ptr [rax]
0x000000000012d325 : jp 0x12d31a ; call rax
0x000000000012d32d : jp 0x12d322 ; jmp rsp
0x0000000000131041 : jp 0x13104a ; add byte ptr [rax - 0x57], bl ; std ; call rsp
0x0000000000139091 : jp 0x139099 ; add ah, bl ; add bh, dh ; jmp rcx
0x0000000000002677 : jp 0x26c1 ; pop rcx ; xchg edi, edi ; ret 0xaf0a
0x00000000000f113d : jp 0xf1147 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000001bbb : jrcxz 0x1b79 ; mov bh, 0xa ; ret
0x0000000000001f46 : jrcxz 0x1f1f ; js 0x1f0b ; in al, dx ; call rdi
0x00000000000e1b19 : jrcxz 0xe1aeb ; add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000f876c : jrcxz 0xf87b4 ; mov byte ptr [rdx], 0 ; ret
0x00000000000fb8eb : jrcxz 0xfb8f5 ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000103f6c : js 0x103f64 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000104968 : js 0x1049a1 ; add byte ptr [rbp + 3], dh ; ret
0x000000000010b2c8 : js 0x10b309 ; add byte ptr [rbp + 2], dh ; ret
0x000000000010b7b5 : js 0x10b7f6 ; add byte ptr [rbp + 6], dh ; pop rbx ; ret
0x000000000010d828 : js 0x10d869 ; add byte ptr [rbp + 3], dh ; ret
0x000000000010dc48 : js 0x10dc89 ; add byte ptr [rbp + 3], dh ; ret
0x000000000010dccb : js 0x10dd0e ; add byte ptr [rbp + 8], dh ; mov eax, ebx ; pop rbx ; ret
0x000000000010e058 : js 0x10e06c ; add byte ptr [rbp + 3], dh ; ret
0x000000000010e318 : js 0x10e321 ; add byte ptr [rbp + 3], dh ; ret
0x000000000010ece4 : js 0x10ecef ; add byte ptr [rcx], dh ; rol byte ptr [rcx + rcx*4 - 0x3e], 0xe8 ; jmp rax
0x000000000012d854 : js 0x12d85e ; jmp qword ptr [rax]
0x000000000012dbbc : js 0x12db85 ; hlt ; call qword ptr [rax]
0x000000000012dd24 : js 0x12dd84 ; cmc ; call qword ptr [rax]
0x000000000012e3a4 : js 0x12e3cb ; clc ; call rsp
0x000000000012ea14 : js 0x12e9da ; clc ; call rsp
0x000000000012ec2c : js 0x12ec0d ; clc ; jmp rax
0x000000000012f3ec : js 0x12f408 ; stc ; call rsp
0x000000000012f684 : js 0x12f6eb ; stc ; call rax
0x00000000001300b4 : js 0x130084 ; sti ; jmp rsp
0x000000000013021c : js 0x13025e ; cld ; jmp qword ptr [rax]
0x000000000013038c : js 0x130317 ; cld ; call qword ptr [rax]
0x0000000000130404 : js 0x1303a9 ; cld ; jmp qword ptr [rax]
0x000000000013086c : js 0x130865 ; cld ; jmp rsp
0x000000000013097c : js 0x130998 ; std ; jmp rsp
0x0000000000130db5 : js 0x130db6 ; call rax
0x0000000000130dbd : js 0x130dbe ; jmp rsp
0x0000000000130fe1 : js 0x130fea ; add byte ptr [rax], bl ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x00000000001412f8 : js 0x1412fd ; add byte ptr [rax], al ; in al, 0x89 ; sti ; call qword ptr [rbx]
0x0000000000145638 : js 0x1455c7 ; cld ; jmp qword ptr [rcx]
0x000000000001bc7d : js 0x1bc97 ; xchg dword ptr [rcx + rax], edi ; add byte ptr [rax + 1], cl ; ret
0x0000000000001f48 : js 0x1f09 ; in al, dx ; call rdi
0x000000000002c380 : js 0x2c3e4 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000034028 : js 0x3404c ; add byte ptr [rbp + 3], dh ; ret
0x00000000000e7c07 : js 0xe7c56 ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000f0cda : js 0xf0ce1 ; jne 0xf0ce5 ; ret
0x00000000000f0d1a : js 0xf0d21 ; jne 0xf0d25 ; ret
0x00000000000f0cd9 : js 0xf0d59 ; add byte ptr [rbp + 2], dh ; ret
0x00000000000f0d19 : js 0xf0d99 ; add byte ptr [rbp + 2], dh ; ret
0x00000000000f1358 : js 0xf139c ; add byte ptr [rbp + 3], dh ; ret
0x00000000000f8fbb : js 0xf8ff2 ; neg rax ; ret
0x00000000000fa78a : js 0xfa714 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fbcf6 : js 0xfbd5a ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba1f6 : lahf ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001459dd : lahf ; cld ; jmp rdi
0x000000000010421d : lahf ; nop ; mov eax, 0x10 ; ret
0x000000000005521d : lahf ; or cl, byte ptr [rbx] ; add byte ptr [rax + 0x5a], bl ; jmp 0x551ee
0x00000000000fe6e8 : lahf ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e45ef : lcall ptr [rax + 0x5a] ; leave ; ret
0x0000000000130117 : lcall ptr [rax + 0x6800012f] ; fdiv st(3), st(0) ; jmp rsp
0x000000000012261f : lcall ptr [rax - 0x11] ; sti ; jmp rax
0x0000000000034329 : lcall ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000034359 : lcall ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000034389 : lcall ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x30] ; jmp rax
0x00000000000fa76c : lcall ptr [rbx + 0x5d] ; ret
0x000000000013341f : lcall ptr [rbx + 1] ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x100e
0x000000000012cb57 : lcall ptr [rcx + rdx*2 + 0x1e680000] ; out dx, eax ; call rax
0x00000000000b15b3 : lcall ptr [rdx - 0x17] ; ret
0x0000000000128123 : lcall ptr [rsp + rsi*2] ; std ; call qword ptr [rbx]
0x00000000000f7380 : lea eax, dword ptr [rax + rax - 1] ; ret
0x000000000001c126 : lea eax, dword ptr [rdi + 0x80] ; ret
0x00000000001012bc : lea eax, dword ptr [rdi + 1] ; mov edi, r15d ; mov dword ptr [rbx + 0x70], eax ; call qword ptr [rbx]
0x00000000000fec61 : lea eax, dword ptr [rdi + 1] ; ret
0x00000000001027ef : lea eax, dword ptr [rdi - 0x76b70001] ; ret
0x00000000000ea0e0 : lea eax, dword ptr [rdx + 1] ; pop rbx ; ret
0x00000000000f8144 : lea eax, dword ptr [rdx + rcx] ; ret
0x00000000000ff1ec : lea eax, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000028b41 : lea eax, dword ptr [rip + 0x100b04] ; ret
0x0000000000028a97 : lea eax, dword ptr [rip + 0x100bae] ; ret
0x000000000010f861 : lea eax, dword ptr [rip + 0x19de4] ; ret
0x000000000010f711 : lea eax, dword ptr [rip + 0x1bfb4] ; ret
0x000000000010b751 : lea eax, dword ptr [rip + 0x1def4] ; ret
0x00000000001030e1 : lea eax, dword ptr [rip + 0x26564] ; ret
0x00000000000fc101 : lea eax, dword ptr [rip + 0x2b623] ; ret
0x00000000000fc0f1 : lea eax, dword ptr [rip + 0x2b62f] ; ret
0x00000000000fc0e1 : lea eax, dword ptr [rip + 0x2b635] ; ret
0x00000000000fc0d1 : lea eax, dword ptr [rip + 0x2b641] ; ret
0x00000000000fc0c1 : lea eax, dword ptr [rip + 0x2b65a] ; ret
0x00000000000fc0b1 : lea eax, dword ptr [rip + 0x2b65d] ; ret
0x00000000000e7dc1 : lea eax, dword ptr [rip + 0x41884] ; ret
0x00000000000e4788 : lea eax, dword ptr [rip + 0x4796fe] ; je 0xe47a1 ; ret
0x00000000000eab55 : lea eax, dword ptr [rip + 0x4825e5] ; pop rbx ; ret
0x00000000000eaab7 : lea eax, dword ptr [rip + 0x482683] ; pop rbx ; ret
0x00000000000eaa7c : lea eax, dword ptr [rip + 0x4826be] ; ret
0x0000000000032593 : lea eax, dword ptr [rip + 0x529797] ; xor esi, esi ; call qword ptr [rax]
0x0000000000025a09 : lea eax, dword ptr [rip + 0x536321] ; call qword ptr [rax]
0x00000000000f69a1 : lea eax, dword ptr [rip + 0x6b9829] ; mov dword ptr [rax], edx ; ret
0x00000000000f0f11 : lea eax, dword ptr [rip + 0x6bd289] ; ret
0x00000000000fdd61 : lea eax, dword ptr [rip + 0xeb2ad9] ; ret
0x0000000000031441 : lea eax, dword ptr [rip + 0xf8204] ; ret
0x00000000000c4252 : lea ebx, dword ptr [rcx] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009306b : lea ecx, dword ptr [rax + rax + 0x4c] ; mov edi, esp ; mov r13, r12 ; call rax
0x0000000000048d33 : lea ecx, dword ptr [rax - 0x17000009] ; ret
0x000000000002ffcf : lea ecx, dword ptr [rax - 0x76b7fff5] ; ret
0x00000000000e0728 : lea ecx, dword ptr [rip + 0x35f99] ; jmp 0xe0700
0x0000000000106931 : lea edi, dword ptr [rdi + 8] ; xor ebx, ebx ; call qword ptr [r14]
0x00000000000fbe43 : lea edi, dword ptr [rip + 0x2b897] ; call 0xf80d8
0x000000000010f834 : lea edi, dword ptr [rip + 0xea1456] ; call 0x1bb08
0x000000000010407f : lea edi, dword ptr [rsp + 0x10] ; call rax
0x0000000000025231 : lea edi, dword ptr [rsp + 0x18] ; mov rsi, r13 ; call 0x21459
0x00000000000e07f1 : lea edx, dword ptr [rip + 0x35c03] ; jmp 0xe07c2
0x000000000002e434 : lea esi, dword ptr [rdi + rbx] ; call rax
0x0000000000033976 : lea esi, dword ptr [rip + 0x5283b4] ; xor esi, esi ; call qword ptr [r14]
0x000000000010407a : lea esi, dword ptr [rsp + 0x18] ; lea rdi, qword ptr [rsp + 0x10] ; call rax
0x000000000008d772 : lea esi, dword ptr [rsp + 0x18] ; mov edx, ebp ; mov rdi, rbx ; call rax
0x00000000000e5dbb : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000debcc : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001c125 : lea rax, qword ptr [rdi + 0x80] ; ret
0x00000000000fec60 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000000ea0df : lea rax, qword ptr [rdx + 1] ; pop rbx ; ret
0x00000000000f8143 : lea rax, qword ptr [rdx + rcx] ; ret
0x0000000000028b40 : lea rax, qword ptr [rip + 0x100b04] ; ret
0x0000000000028a96 : lea rax, qword ptr [rip + 0x100bae] ; ret
0x000000000010f860 : lea rax, qword ptr [rip + 0x19de4] ; ret
0x000000000010f710 : lea rax, qword ptr [rip + 0x1bfb4] ; ret
0x000000000010b750 : lea rax, qword ptr [rip + 0x1def4] ; ret
0x00000000001030e0 : lea rax, qword ptr [rip + 0x26564] ; ret
0x00000000000fc100 : lea rax, qword ptr [rip + 0x2b623] ; ret
0x00000000000fc0f0 : lea rax, qword ptr [rip + 0x2b62f] ; ret
0x00000000000fc0e0 : lea rax, qword ptr [rip + 0x2b635] ; ret
0x00000000000fc0d0 : lea rax, qword ptr [rip + 0x2b641] ; ret
0x00000000000fc0c0 : lea rax, qword ptr [rip + 0x2b65a] ; ret
0x00000000000fc0b0 : lea rax, qword ptr [rip + 0x2b65d] ; ret
0x00000000000e7dc0 : lea rax, qword ptr [rip + 0x41884] ; ret
0x00000000000eab54 : lea rax, qword ptr [rip + 0x4825e5] ; pop rbx ; ret
0x00000000000eaab6 : lea rax, qword ptr [rip + 0x482683] ; pop rbx ; ret
0x00000000000eaa7b : lea rax, qword ptr [rip + 0x4826be] ; ret
0x0000000000032592 : lea rax, qword ptr [rip + 0x529797] ; xor esi, esi ; call qword ptr [rax]
0x0000000000025a08 : lea rax, qword ptr [rip + 0x536321] ; call qword ptr [rax]
0x00000000000f69a0 : lea rax, qword ptr [rip + 0x6b9829] ; mov dword ptr [rax], edx ; ret
0x00000000000f0f10 : lea rax, qword ptr [rip + 0x6bd289] ; ret
0x00000000000fdd60 : lea rax, qword ptr [rip + 0xeb2ad9] ; ret
0x0000000000031440 : lea rax, qword ptr [rip + 0xf8204] ; ret
0x0000000000106930 : lea rdi, qword ptr [r15 + 8] ; xor ebx, ebx ; call qword ptr [r14]
0x00000000000fbe42 : lea rdi, qword ptr [rip + 0x2b897] ; call 0xf80d9
0x000000000010f833 : lea rdi, qword ptr [rip + 0xea1456] ; call 0x1bb09
0x000000000010407e : lea rdi, qword ptr [rsp + 0x10] ; call rax
0x00000000000e07f0 : lea rdx, qword ptr [rip + 0x35c03] ; jmp 0xe07c3
0x000000000002e433 : lea rsi, qword ptr [rdi + rbx] ; call rax
0x00000000000e5dba : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000012eb7d : leave ; clc ; call rsp
0x000000000012eb35 : leave ; clc ; jmp qword ptr [rax]
0x00000000000344e6 : leave ; je 0x344f6 ; mov rdi, qword ptr [rdi] ; jmp rcx
0x00000000000eabd3 : leave ; je 0xeabef ; mov rdi, rax ; mov rsi, r12 ; call rcx
0x00000000000fa129 : leave ; je 0xfa161 ; cmp ecx, 2 ; je 0xfa141 ; pop rbx ; ret
0x0000000000105d52 : leave ; jne 0x105d64 ; ret
0x0000000000105e72 : leave ; jne 0x105e84 ; ret
0x00000000000e0181 : leave ; jne 0xe0167 ; add rsp, 8 ; ret
0x00000000000f8fba : leave ; js 0xf8ff3 ; neg rax ; ret
0x0000000000075eea : leave ; mov esi, 0x201 ; call 0x102198
0x000000000005934e : leave ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5931d
0x00000000001090eb : leave ; pop rbx ; pop rbp ; xor edx, edx ; jmp rax
0x00000000000e45f2 : leave ; ret
0x00000000000b9ab1 : leave ; xor r8d, r8d ; call 0x105cc6
0x000000000012d597 : ljmp ptr [rax + 0x7800008b] ; cmp al, 0xf2 ; call rsp
0x00000000001300af : ljmp ptr [rax + 0x7800012d] ; retf ; sti ; jmp rsp
0x0000000000130867 : ljmp ptr [rax + 0x78000153] ; hlt ; cld ; jmp rsp
0x000000000012ff87 : ljmp ptr [rax + rbp - 0x5007ffff] ; sti ; call rax
0x000000000012d487 : ljmp ptr [rax - 0x37ffff7a] ; out 0xf1, al ; jmp rsp
0x000000000012fbff : ljmp ptr [rax - 0x77fffee7] ; outsd dx, dword ptr [rsi] ; sti ; jmp rax
0x00000000001228eb : ljmp ptr [rax] ; adc ah, bh ; call qword ptr [rax]
0x000000000012e227 : ljmp ptr [rax] ; ret 0
0x000000000012e4e7 : ljmp ptr [rbp + rcx*8 - 0x6de80000] ; clc ; jmp rsp
0x00000000000fbdd2 : ljmp ptr [rdi] ; sete al ; ret
0x000000000012cd17 : ljmp ptr [rsi + rbx*2 - 0x35780000] ; out dx, eax ; call rax
0x0000000000103428 : lock add dword ptr [rax], ecx ; ret 0x5488
0x00000000001022e8 : lock add dword ptr [rax], esp ; ret
0x00000000000f0d23 : lock add qword ptr [rip + 0x6bf475], rdi ; ret
0x00000000000d8e2e : lock sub dword ptr [rdx], 1 ; add rsp, 8 ; ret
0x00000000000c21b0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001117eb : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf66
0x000000000013f32c : lodsb al, byte ptr [rsi] ; fadd qword ptr [rax] ; add al, al ; mov dl, bh ; jmp qword ptr [rbx]
0x0000000000003466 : lodsb al, byte ptr [rsi] ; jb 0x3473 ; int1 ; ret
0x0000000000133e64 : lodsb al, byte ptr [rsi] ; or al, 0xf0 ; jmp qword ptr [rcx]
0x000000000012cd18 : lodsb al, byte ptr [rsi] ; pop rsi ; add byte ptr [rax], al ; mov dl, cl ; out dx, eax ; call rax
0x0000000000069910 : lodsb al, byte ptr [rsi] ; ret
0x000000000012e248 : lodsb al, byte ptr [rsi] ; ret 0
0x00000000000423e4 : lodsb al, byte ptr [rsi] ; ret 0x51
0x0000000000038970 : lodsb al, byte ptr [rsi] ; ret 0xffff
0x00000000001425b4 : lodsb al, byte ptr [rsi] ; sar ebx, 1 ; jmp qword ptr [rcx]
0x000000000013302c : lodsb al, byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax], ah ; pushfq ; out dx, eax ; jmp rcx
0x0000000000131cb4 : lodsb al, byte ptr [rsi] ; shr esi, cl ; call qword ptr [rsi]
0x000000000012ff88 : lodsb al, byte ptr [rsi] ; sub byte ptr [rcx], al ; add al, bh ; scasd eax, dword ptr [rdi] ; sti ; call rax
0x00000000000b85c7 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000e6bff : lodsd eax, dword ptr [rsi] ; cmp al, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000104850 : loop 0x104863 ; mov rax, rdx ; pop r12 ; ret
0x0000000000129d99 : loop 0x129d9e ; push rsp ; loope 0x129da2 ; jmp rsp
0x000000000012ec29 : loop 0x12ec31 ; add byte ptr [rax - 0x24], bh ; clc ; jmp rax
0x000000000013f931 : loop 0x13f939 ; add byte ptr [rdx + rbp*4], bh ; cli ; call rsp
0x00000000000579ee : loop 0x57a00 ; add byte ptr [rax + 0x5a], bl ; jmp 0x579bd
0x00000000000e01aa : loop 0xe01d3 ; add al, byte ptr [rax] ; nop ; xor eax, eax ; ret
0x00000000000f0f93 : loop 0xf1007 ; add byte ptr [rax], al ; je 0xf0fa7 ; ret
0x00000000000fa5ab : loop 0xfa5aa ; shl byte ptr [rax], cl ; adc al, 7 ; ret
0x0000000000129d9d : loope 0x129d9e ; jmp rsp
0x0000000000129da1 : loope 0x129da2 ; call rsp
0x0000000000129da5 : loope 0x129da6 ; call rdx
0x000000000013d745 : loope 0x13d742 ; jmp qword ptr [rdx]
0x0000000000142b0d : loope 0x142b0c ; call qword ptr [rcx]
0x00000000000344ed : loope 0x3455b ; nop ; mov rax, rdx ; ret
0x00000000000f093e : loope 0xf090b ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000f697c : loope 0xf6985 ; add byte ptr [rax - 0x77], cl ; ret 0xa9e9
0x00000000000f9b3d : loope 0xf9b55 ; add eax, 0x5c415d5b ; ret
0x00000000000fe60b : loope 0xfe632 ; or rdx, rcx ; ret
0x00000000000fe62d : loope 0xfe654 ; or rdx, rcx ; ret
0x000000000010165f : loopne 0x1016b0 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001053f0 : loopne 0x105454 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001065f1 : loopne 0x106642 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010d4ec : loopne 0x10d552 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000117728 : loopne 0x11778b ; int1 ; call rax
0x00000000001230bc : loopne 0x1230f6 ; cld ; call rax
0x000000000012dd20 : loopne 0x12dcd4 ; add byte ptr [rax], al ; js 0x12dd88 ; cmc ; call qword ptr [rax]
0x000000000012eb31 : loopne 0x12eb39 ; add byte ptr [rax - 0x37], ch ; clc ; jmp qword ptr [rax]
0x000000000012eb79 : loopne 0x12eb81 ; add al, bh ; leave ; clc ; call rsp
0x0000000000133e60 : loopne 0x133e90 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or al, 0xf0 ; jmp qword ptr [rcx]
0x0000000000136c60 : loopne 0x136cbe ; add byte ptr [rax], al ; cld ; sal ebx, cl ; call qword ptr [rbx]
0x000000000013dd60 : loopne 0x13dd2f ; add byte ptr [rax], al ; mov word ptr [rdx], ss ; cli ; call qword ptr [rcx]
0x000000000013fb70 : loopne 0x13fb23 ; cli ; call qword ptr [rdx]
0x000000000013fc50 : loopne 0x13fc05 ; cli ; call qword ptr [rdi]
0x000000000001c2fc : loopne 0x1c2f3 ; ret
0x000000000001c32a : loopne 0x1c331 ; ret
0x000000000001e9d2 : loopne 0x1ea34 ; pop rbp ; pop r12 ; ret
0x000000000002a771 : loopne 0x2a7d7 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a89f : loopne 0x2a905 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000344cd : loopne 0x3453a ; nop ; xor eax, eax ; ret
0x000000000004a1f8 : loopne 0x4a25a ; pop rbp ; pop r12 ; ret
0x000000000004a4d8 : loopne 0x4a53e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004a51f : loopne 0x4a585 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dedd4 : loopne 0xdee3a ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000dee73 : loopne 0xdeed9 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000deec4 : loopne 0xdef2a ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000def23 : loopne 0xdef89 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000def74 : loopne 0xdefda ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000e768c : loopne 0xe7711 ; add byte ptr [r8 + 0x39], r9b ; ret
0x00000000000f2bdc : loopne 0xf2be6 ; add byte ptr [rax], al ; mov r9, rax ; jmp 0xf2baf
0x00000000000fa5fc : loopne 0xfa601 ; ret
0x00000000000faf5f : loopne 0xfaf67 ; ret
0x00000000000fb147 : loopne 0xfb19a ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb44c : loopne 0xfb4ae ; pop rbp ; pop r12 ; ret
0x00000000000fb600 : loopne 0xfb662 ; pop rbp ; pop r12 ; ret
0x00000000000fb6dc : loopne 0xfb72f ; add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000145634 : mov ah, 0x3f ; add dword ptr [rax], eax ; js 0x1455cb ; cld ; jmp qword ptr [rcx]
0x0000000000116e8c : mov ah, 0x55 ; int1 ; jmp qword ptr [rax]
0x0000000000130a00 : mov ah, 0x5b ; add dword ptr [rax], eax ; cwde ; std ; jmp rax
0x000000000012d470 : mov ah, 0x85 ; add byte ptr [rax], al ; call 0x1112c65b
0x000000000014192c : mov ah, 0x94 ; sti ; jmp qword ptr [rbx]
0x00000000001459dc : mov ah, 0x9f ; cld ; jmp rdi
0x0000000000145bac : mov ah, 0xa5 ; cld ; jmp qword ptr [rsi]
0x00000000000e3b48 : mov ah, 0xaa ; add byte ptr [r8 - 0x77], r9b ; ret
0x000000000010f713 : mov ah, 0xbf ; add dword ptr [rax], eax ; ret
0x000000000012d09d : mov ah, 0xf0 ; call rax
0x000000000012e915 : mov ah, 0xf8 ; jmp rax
0x0000000000131f34 : mov ah, 8 ; add byte ptr [rax], al ; sub dh, ch ; out dx, al ; jmp rsp
0x0000000000122844 : mov ah, 8 ; cld ; dec esp ; or ah, bh ; jmp rsp
0x0000000000145549 : mov ah, bh ; call qword ptr [rax]
0x00000000000f2a5f : mov ah, byte ptr [rax] ; add byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000f3e61 : mov ah, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000122934 : mov al, 0x13 ; cld ; dec eax ; adc edi, esp ; jmp rax
0x0000000000130910 : mov al, 0x56 ; add dword ptr [rax], eax ; or byte ptr [rax], cl ; std ; call rsp
0x0000000000137f30 : mov al, 0x68 ; add byte ptr [rax], al ; in al, dx ; push rdi ; cmc ; call rdx
0x00000000001311f8 : mov al, 0x85 ; add dword ptr [rax], eax ; mov dh, ch ; std ; call rsp
0x000000000013fd70 : mov al, 0xb9 ; cli ; jmp rbx
0x000000000013e5f0 : mov al, 0xd2 ; in eax, dx ; call qword ptr [rbx]
0x0000000000002809 : mov al, 0xe1 ; ret 0x8d71
0x000000000013f930 : mov al, 0xe2 ; add byte ptr [rax], al ; cmp al, 0xaa ; cli ; call rsp
0x000000000012260c : mov al, 0xee ; sti ; dec eax ; out dx, al ; sti ; call qword ptr [rax]
0x000000000012267c : mov al, 0xf2 ; sti ; dec eax ; sti ; jmp rax
0x000000000012e855 : mov al, 0xf8 ; call rax
0x000000000012e875 : mov al, 0xf8 ; jmp qword ptr [rax]
0x000000000012e85d : mov al, 0xf8 ; jmp rsp
0x0000000000122708 : mov al, 0xf9 ; sti ; dec eax ; stc ; sti ; jmp rax
0x000000000013fc8d : mov al, 0xfa ; call qword ptr [rax]
0x000000000013fc51 : mov al, 0xfa ; call qword ptr [rdi]
0x000000000012ff95 : mov al, 0xfb ; jmp rsp
0x00000000001312b9 : mov al, byte ptr [rcx] ; add byte ptr [rax], bl ; adc edi, esi ; jmp rax
0x0000000000038922 : mov al, byte ptr [rdi] ; add byte ptr [rax], al ; call rax
0x00000000000ff477 : mov al, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000000b3b8 : mov bh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000273d5 : mov bh, 0x1c ; push rbx ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005a56e : mov bh, 0xa ; add byte ptr [rax + 0x5a], bl ; jmp 0x5a53d
0x0000000000001bbd : mov bh, 0xa ; ret
0x0000000000003308 : mov bh, 0xa6 ; sub ebp, ecx ; ret 0xe89f
0x00000000000f4fca : mov bh, 0xeb ; mov edx, 0xf3001f0f ; ret
0x000000000012d755 : mov bh, 0xf2 ; call rax
0x00000000001304dd : mov bh, 0xfc ; jmp qword ptr [rax]
0x000000000008a506 : mov bh, 7 ; add byte ptr [rax + 0x5a], bl ; jmp 0x8a4d5
0x0000000000145639 : mov bh, ah ; jmp qword ptr [rcx]
0x000000000012cca5 : mov bl, 0xef ; call rax
0x000000000012ccad : mov bl, 0xef ; jmp rsp
0x000000000012ffd5 : mov bl, 0xfb ; jmp rax
0x000000000010b5ef : mov bl, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000087dbe : mov bl, 5 ; add cl, ch ; ret
0x00000000001423b8 : mov bl, al ; sti ; call qword ptr [rsi]
0x00000000000f876d : mov byte ptr [r10], 0 ; ret
0x00000000000f4fa8 : mov byte ptr [r12], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f155e : mov byte ptr [rax + 0x8b0], 0 ; pop rbx ; ret
0x00000000000f7ba0 : mov byte ptr [rax + r12], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7e81 : mov byte ptr [rax + rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000000078f : mov byte ptr [rax - 0x3fbf1c00], bl ; ret
0x00000000000fbe54 : mov byte ptr [rax - 0x76b7fffe], bh ; ret 0x70e8
0x00000000001044bb : mov byte ptr [rax - 0x7d], cl ; ret
0x0000000000137f78 : mov byte ptr [rax - 0xb], bl ; call rdx
0x000000000012e329 : mov byte ptr [rax], 0 ; call 0xffffffffe512db11
0x000000000013dd61 : mov byte ptr [rax], 0 ; mov word ptr [rdx], ss ; cli ; call qword ptr [rcx]
0x00000000000f7ba1 : mov byte ptr [rax], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100ec3 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000100f92 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000100fa2 : mov byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; setne al ; ret
0x000000000001f858 : mov byte ptr [rbp + 7], dl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2a4c : mov byte ptr [rbp - 0x851], al ; call 0xfec78
0x00000000000b2a28 : mov byte ptr [rbp - 0x858], al ; call 0xfec78
0x00000000000a2981 : mov byte ptr [rbp - 0x860], al ; call 0xfec78
0x00000000000f0f75 : mov byte ptr [rbp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cbf8 : mov byte ptr [rbp], dl ; add byte ptr [rax + 0x4a], bl ; out dx, eax ; call rsp
0x00000000001074ed : mov byte ptr [rbx + 0x68], 1 ; pop rbx ; ret
0x0000000000100f1b : mov byte ptr [rbx + 0x6f], 0 ; pop rbx ; ret
0x000000000010247f : mov byte ptr [rbx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f093f : mov byte ptr [rbx], 0 ; pop rbx ; ret
0x000000000002ffd0 : mov byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f8768 : mov byte ptr [rcx - 1], al ; jne 0xf8759 ; mov byte ptr [r10], 0 ; ret
0x00000000000fcf88 : mov byte ptr [rcx], 0x83 ; cli ; or dword ptr [rsi - 0x33], esi ; ret
0x00000000000fd037 : mov byte ptr [rcx], 0x83 ; cli ; pcmpeqd mm1, mm6 ; ret
0x000000000010f88e : mov byte ptr [rdi + 0x10], 0 ; mov qword ptr [rdi + 8], rax ; ret
0x000000000010b326 : mov byte ptr [rdi + 0x15], 0 ; mov qword ptr [rdi + 0x18], rax ; ret
0x000000000002e2a0 : mov byte ptr [rdi + 0x60], 1 ; ret
0x00000000001003a0 : mov byte ptr [rdi + 0x68], 0 ; ret
0x0000000000031508 : mov byte ptr [rdi + 0x72], 1 ; mov byte ptr [rdi + 0x73], 1 ; ret
0x000000000003150c : mov byte ptr [rdi + 0x73], 1 ; ret
0x00000000000def91 : mov byte ptr [rdi + 0x7fff8000], 0xac ; ret
0x00000000000f5764 : mov byte ptr [rdi + 0xe1], 1 ; ret
0x00000000001030f3 : mov byte ptr [rdi + 1], 0 ; ret
0x00000000000f8972 : mov byte ptr [rdi + rdx - 1], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e15c : mov byte ptr [rdi + rsi*8], dl ; call rax
0x0000000000130d3c : mov byte ptr [rdi - 3], ch ; call rsp
0x000000000012fc04 : mov byte ptr [rdi - 5], ch ; jmp rax
0x00000000001030f0 : mov byte ptr [rdi], 1 ; mov byte ptr [rdi + 1], 0 ; ret
0x000000000012cbd4 : mov byte ptr [rdi], dh ; out dx, eax ; jmp qword ptr [rax]
0x000000000001f072 : mov byte ptr [rdx + 7], dh ; ret
0x000000000001f071 : mov byte ptr [rdx + 7], sil ; ret
0x000000000012d32c : mov byte ptr [rdx - 0xf], bh ; jmp rsp
0x00000000000f876e : mov byte ptr [rdx], 0 ; ret
0x00000000000ff6c4 : mov byte ptr [rdx], al ; add byte ptr [rax - 0x77], cl ; ret 0xd989
0x00000000001308c4 : mov byte ptr [rdx], al ; std ; call rsp
0x000000000001b9a8 : mov byte ptr [rip + 0x32f791], 1 ; pop rbp ; ret
0x00000000000ead21 : mov byte ptr [rip + 0x474b89], bh ; ret
0x00000000000ead20 : mov byte ptr [rip + 0x474b89], dil ; ret
0x00000000000dd0c1 : mov byte ptr [rip + 0x480da1], bh ; ret
0x00000000000dd0c0 : mov byte ptr [rip + 0x480da1], dil ; ret
0x000000000001b895 : mov byte ptr [rip + 0x52fbf5], 0 ; ret
0x000000000001e7f1 : mov byte ptr [rip + 0x53a8a9], bh ; ret
0x000000000001e7f0 : mov byte ptr [rip + 0x53a8a9], dil ; ret
0x00000000000fd2ff : mov byte ptr [rip + 0x6b3102], 0 ; pop rbx ; ret
0x000000000010f814 : mov byte ptr [rip + 0xea1475], 0 ; pop rbx ; ret
0x000000000010f794 : mov byte ptr [rip + 0xea14f5], 0 ; pop rbx ; ret
0x0000000000001fc5 : mov byte ptr [rsp + rax*8 - 0x5db8de], cl ; pop rbx ; ret 0x2a63
0x00000000000f4fa9 : mov byte ptr [rsp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bbd4d : mov ch, 0x66 ; nop ; ret
0x000000000010918a : mov ch, 0xeb ; xchg eax, esi ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000012e975 : mov ch, 0xf8 ; call rax
0x000000000012e995 : mov ch, 0xf8 ; jmp qword ptr [rax]
0x000000000012e97d : mov ch, 0xf8 ; jmp rsp
0x00000000001307b4 : mov ch, ah ; cld ; call rsp
0x000000000012f924 : mov ch, al ; cli ; call qword ptr [rax]
0x00000000000ff4d8 : mov cl, 0x48 ; add eax, ecx ; jmp rax
0x00000000000fe6be : mov cl, 0x4d ; add byte ptr [rax + 0x39], cl ; ret 0x1274
0x0000000000133259 : mov cl, 0xef ; jmp rsp
0x00000000001420d5 : mov cl, 0xfb ; jmp qword ptr [rdx]
0x0000000000002a51 : mov cl, 9 ; ret
0x000000000013057c : mov cl, dl ; cld ; jmp rax
0x00000000000f8061 : mov dh, 0x10 ; cmp dl, cl ; jne 0xf805f ; ret
0x00000000000a8201 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb01
0x00000000000a405e : mov dh, 0x46 ; add al, 0x89 ; ret 0xe283
0x00000000000e2f08 : mov dh, 0x47 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001070db : mov dh, 0x4c ; and al, 0xf ; jmp 0x1070a8
0x00000000000f0ee6 : mov dh, 0x57 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000000da2a5 : mov dh, 0x68 ; and eax, ebp ; ret
0x000000000008eba6 : mov dh, 0x68 ; and eax, ebp ; ret 0x700
0x000000000005dfa5 : mov dh, 0x70 ; and eax, ebp ; ret
0x00000000000c0ba6 : mov dh, 0x70 ; and eax, ebp ; ret 0x3e0
0x00000000000842a6 : mov dh, 0x70 ; and eax, ebp ; ret 0x7a9
0x000000000007d9a6 : mov dh, 0x70 ; and eax, ebp ; ret 0x812
0x000000000005d1a6 : mov dh, 0x70 ; and eax, ebp ; ret 0xa1a
0x000000000005f6a6 : mov dh, 0x78 ; and eax, ebp ; ret 0x9f5
0x00000000000f79a9 : mov dh, 0xa ; cmp cl, r8b ; jne 0xf79a8 ; ret
0x00000000000f7b91 : mov dh, 0xc ; adc ecx, dword ptr [rax - 0x7cb7eff4] ; ret 0x4901
0x00000000000fadbf : mov dh, 0xc0 ; add eax, 1 ; ret
0x00000000000ff02e : mov dh, 0xc0 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000002cfe9 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000001f05b : mov dh, 0xc0 ; ret
0x00000000000e0744 : mov dh, 0xdb ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000e06d8 : mov dh, 0xdb ; movsxd rdx, dword ptr [rcx + rbx*4] ; add rdx, rcx ; jmp rdx
0x00000000000dd2eb : mov dh, 0xf0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rcx
0x00000000001304bd : mov dh, 0xfc ; call rax
0x00000000001304c5 : mov dh, 0xfc ; jmp rsp
0x00000000000e6a9d : mov dh, 1 ; add bl, dh ; ret
0x000000000001d6de : mov dh, 5 ; ret 0x53b9
0x000000000012fa3c : mov dh, bh ; cli ; jmp qword ptr [rax]
0x00000000001311fc : mov dh, ch ; std ; call rsp
0x0000000000138b75 : mov dh, dh ; call qword ptr [rdx]
0x0000000000003307 : mov dil, 0xa6 ; sub ebp, ecx ; ret 0xe89f
0x00000000000e32ff : mov dl, 0x47 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ff4a4 : mov dl, 0x48 ; add eax, edx ; jmp rax
0x0000000000003410 : mov dl, 0x8d ; ret 0x5b64
0x00000000000026b5 : mov dl, 0xd4 ; in eax, dx ; ret 0xae7d
0x000000000010950d : mov dl, 0xeb ; xchg eax, ebx ; xor eax, eax ; ret
0x0000000000131095 : mov dl, 0xfd ; jmp qword ptr [rax]
0x000000000013f331 : mov dl, bh ; jmp qword ptr [rbx]
0x000000000012cd1c : mov dl, cl ; out dx, eax ; call rax
0x0000000000100c57 : mov dword ptr [rax + 0x10], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f7256 : mov dword ptr [rax + 0x10], edx ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000f16ce : mov dword ptr [rax + 0x620], eax ; ret
0x000000000002e4a1 : mov dword ptr [rax - 0x60], ebx ; pop rbx ; ret
0x00000000000f2a5d : mov dword ptr [rax - 0x76], 0x1490020 ; ret 0x894c
0x00000000000313d5 : mov dword ptr [rax], 0x417fff80 ; jmp rax
0x00000000000e8233 : mov dword ptr [rax], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e5181 : mov dword ptr [rax], edi ; ret
0x00000000000f69a7 : mov dword ptr [rax], edx ; ret
0x0000000000027d15 : mov dword ptr [rax], esi ; mov eax, 1 ; ret
0x0000000000107826 : mov dword ptr [rbp + 0x10], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000eabf2 : mov dword ptr [rbp + 8], ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b297c : mov dword ptr [rbp - 0x858], edx ; call 0xfec78
0x000000000007c51b : mov dword ptr [rbp - 0x860], eax ; call 0xe8788
0x000000000004c53f : mov dword ptr [rbp - 0x860], eax ; call 0xe87c8
0x00000000000abc4c : mov dword ptr [rbp - 0x860], edx ; call 0xe7f58
0x00000000000ac55e : mov dword ptr [rbp - 0x868], eax ; call 0xe8788
0x000000000008c574 : mov dword ptr [rbp - 0x870], eax ; call 0xe87c8
0x000000000006c4e6 : mov dword ptr [rbp - 0x878], eax ; call 0xe8788
0x00000000000fd918 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000001d6ed : mov dword ptr [rbx + 0x10], eax ; pop rbx ; ret
0x0000000000109a88 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fd0dc : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000ea476 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000100181 : mov dword ptr [rbx + 0x28], 0xffffffff ; pop rbx ; ret
0x000000000010021c : mov dword ptr [rbx + 0x30], 0xffffffff ; pop rbx ; ret
0x00000000001012c2 : mov dword ptr [rbx + 0x70], eax ; call qword ptr [rbx]
0x00000000001001ec : mov dword ptr [rbx + 8], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033d04 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000033cd4 : mov dword ptr [rbx], 1 ; pop rbx ; ret
0x00000000000f0a27 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb66b : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000002f035 : mov dword ptr [rcx + 0x10], edx ; mov qword ptr [rcx + 0x18], rdx ; ret
0x000000000002f039 : mov dword ptr [rcx + 0x18], edx ; ret
0x00000000000f169b : mov dword ptr [rcx + 0x210], esi ; ret
0x000000000002f475 : mov dword ptr [rcx + 0x30], edx ; mov qword ptr [rcx + 0x38], rdx ; ret
0x000000000002f479 : mov dword ptr [rcx + 0x38], edx ; ret
0x000000000002f915 : mov dword ptr [rcx + 0x70], edx ; mov qword ptr [rcx + 0x78], rdx ; ret
0x000000000002f919 : mov dword ptr [rcx + 0x78], edx ; ret
0x000000000002ec41 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000f732b : mov dword ptr [rcx], 0x75fa3948 ; out dx, al ; ret
0x00000000000f8079 : mov dword ptr [rcx], 0xff7f80 ; jne 0xf807d ; ret
0x000000000001c1cd : mov dword ptr [rdi + 0x10], eax ; ret
0x0000000000105d20 : mov dword ptr [rdi + 0x10], edx ; ret
0x00000000000fd234 : mov dword ptr [rdi + 0x18], eax ; ret
0x00000000000fadff : mov dword ptr [rdi + 0x20], eax ; ret
0x00000000000fadfb : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 0x20], rax ; ret
0x000000000002e831 : mov dword ptr [rdi + 0x7fff8000], eax ; xor eax, eax ; ret
0x0000000000101f8b : mov dword ptr [rdi + 0xb8], edx ; ret
0x00000000001003f2 : mov dword ptr [rdi + 0xe8], edx ; ret
0x0000000000105d0b : mov dword ptr [rdi + 8], 0 ; ret
0x00000000000f7259 : mov dword ptr [rdi + 8], eax ; ret
0x00000000000feee8 : mov dword ptr [rdi + rax*8 + 0x18], edx ; pop rbx ; ret
0x000000000001f035 : mov dword ptr [rdi], esi ; ret
0x00000000001006c8 : mov dword ptr [rdi], esi ; test rax, rax ; je 0x1006df ; jmp rax
0x0000000000106f87 : mov dword ptr [rdx + 0x10], eax ; ret
0x000000000001c20c : mov dword ptr [rdx + 0x94], eax ; ret
0x00000000000f1713 : mov dword ptr [rdx + 8], eax ; add rsp, 0x18 ; ret
0x00000000000f16fb : mov dword ptr [rdx + 8], eax ; ret
0x000000000010200d : mov dword ptr [rdx + rax*8], edi ; mov eax, 1 ; ret
0x00000000000db52c : mov dword ptr [rdx], eax ; ret
0x000000000002e246 : mov dword ptr [rdx], ecx ; mov qword ptr [rdx], rcx ; pop rbx ; ret
0x000000000003118a : mov dword ptr [rdx], ecx ; mov rax, qword ptr [rax + 0x18] ; pop rbx ; ret
0x000000000002e249 : mov dword ptr [rdx], ecx ; pop rbx ; ret
0x00000000000eac69 : mov dword ptr [rip + 0x25d3d1], edi ; ret
0x00000000000eaca1 : mov dword ptr [rip + 0x474c11], edi ; ret
0x00000000000e7430 : mov dword ptr [rip + 0x477d92], edi ; ret
0x00000000000fc9b1 : mov dword ptr [rip + 0x6b3a49], edi ; ret
0x00000000001025bd : mov dword ptr [rip + 0xeae315], edi ; ret
0x0000000000102521 : mov dword ptr [rip + 0xeae3b9], edi ; ret
0x0000000000102181 : mov dword ptr [rip + 0xeae6f9], edi ; ret
0x0000000000102111 : mov dword ptr [rip + 0xeae771], edi ; ret
0x0000000000028a82 : mov dword ptr [rsi], 0x7fff8000 ; ret
0x00000000000db525 : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [rdx], rax ; ret
0x000000000001e8c1 : mov dword ptr [rsi], eax ; ret
0x00000000000f8f96 : mov dword ptr [rsi], edi ; jne 0xf8fc2 ; ret
0x00000000000f9b17 : mov dword ptr [rsi], edi ; ret
0x0000000000020e58 : mov dword ptr [rsp + 0x20], ebx ; call 0xdd0e6
0x00000000000f4d7d : mov dword ptr [rsp + 0xc], eax ; mov rdi, rbp ; call rax
0x00000000000f4d7c : mov dword ptr [rsp + 0xc], r8d ; mov rdi, rbp ; call rax
0x00000000000f4728 : mov dword ptr [rsp + 8], eax ; mov rdi, r12 ; call rax
0x0000000000032752 : mov dword ptr [rsp + 8], eax ; sub rdx, rdi ; xor esi, esi ; call qword ptr [rax]
0x00000000000f448b : mov dword ptr [rsp + 8], ecx ; mov rdi, rsi ; call rax
0x0000000000032784 : mov dword ptr [rsp + 8], ecx ; mov rdx, rcx ; xor esi, esi ; call qword ptr [rax]
0x00000000000f1708 : mov dword ptr [rsp + 8], edx ; call rcx
0x00000000000f4727 : mov dword ptr [rsp + 8], r8d ; mov rdi, r12 ; call rax
0x00000000001099e6 : mov dword ptr [rsp], eax ; jmp 0x1099b2
0x00000000000fb83e : mov dword ptr [rsp], ebx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000df6a6 : mov dword ptr [rsp], ecx ; xor esi, esi ; sub rdx, rdi ; call qword ptr [r15]
0x000000000010de1a : mov dword ptr fs:[rbx], eax ; pop rbx ; ret
0x0000000000104220 : mov eax, 0x10 ; ret
0x00000000000fa8b0 : mov eax, 0x1000 ; ret
0x00000000000f9cd0 : mov eax, 0x18 ; syscall ; ret
0x0000000000105ff0 : mov eax, 0x1b ; ret
0x00000000000e98d8 : mov eax, 0x20c48348 ; pop rbx ; ret
0x00000000000f9c86 : mov eax, 0x20c48348 ; ret
0x00000000000f9c96 : mov eax, 0x21 ; syscall ; ret
0x00000000000fa200 : mov eax, 0x27 ; syscall ; ret
0x00000000001310f8 : mov eax, 0x2800017f ; ret 0xfffd
0x00000000000fa270 : mov eax, 0x39 ; syscall ; ret
0x00000000000668aa : mov eax, 0x3907e283 ; ret 0xb17c
0x00000000000f9d30 : mov eax, 0x3b ; syscall ; ret
0x000000000012eafc : mov eax, 0x3cfff8c3 ; fild word ptr [rax] ; add al, cl ; ret
0x0000000000131838 : mov eax, 0x4000001 ; stosb byte ptr [rdi], al ; out dx, al ; call qword ptr [rdx]
0x00000000000fa225 : mov eax, 0x4e ; syscall ; ret
0x00000000000f9cc0 : mov eax, 0x52 ; syscall ; ret
0x00000000000f9cb0 : mov eax, 0x57 ; syscall ; ret
0x00000000000e4bd4 : mov eax, 0x58fffff5 ; pop rdx ; leave ; ret
0x00000000000f9ca0 : mov eax, 0x59 ; syscall ; ret
0x000000000012eab4 : mov eax, 0x64fff8c2 ; fiadd word ptr [rax] ; add al, cl ; ret 0xfff8
0x00000000001315c8 : mov eax, 0x6800019d ; jae 0x1315d4 ; call rsp
0x00000000000fa210 : mov eax, 0x6e ; syscall ; ret
0x0000000000130388 : mov eax, 0x7800013d ; xchg ah, bh ; call qword ptr [rax]
0x00000000000e5639 : mov eax, 0x7fff8000 ; add byte ptr [rbp + 7], dh ; ret
0x00000000000e5518 : mov eax, 0x7fff8000 ; add byte ptr [rbp + 8], dh ; ret
0x00000000000fbe46 : mov eax, 0x82e80002 ; ret 0xffff
0x00000000000fa260 : mov eax, 0x83 ; syscall ; ret
0x00000000000fbe55 : mov eax, 0x89480002 ; ret 0x70e8
0x0000000000029564 : mov eax, 0x89ffff2d ; ret 0xb60f
0x0000000000102ed9 : mov eax, 0x90 ; add byte ptr [rbp - 0x26], dh ; ret
0x0000000000103861 : mov eax, 0x99 ; add byte ptr [rbp + 7], dh ; ret
0x00000000000f9b63 : mov eax, 0xa ; syscall ; ret
0x0000000000139138 : mov eax, 0xa400007a ; sbb bh, dh ; call rsp
0x0000000000104b98 : mov eax, 0xaa ; add byte ptr [rbp + 8], dh ; ret
0x00000000000f9b50 : mov eax, 0xb ; syscall ; ret
0x000000000012ce48 : mov eax, 0xb8000068 ; sbb dh, al ; call rsp
0x00000000000f9d70 : mov eax, 0xba ; syscall ; ret
0x0000000000101faa : mov eax, 0xc3000000 ; nop ; xor eax, eax ; ret
0x0000000000134738 : mov eax, 0xc4000030 ; ret
0x0000000000144e38 : mov eax, 0xc4000137 ; push rdi ; cld ; call qword ptr [rcx]
0x000000000012e24c : mov eax, 0xdcfff78e ; ret 0
0x00000000000f9dc3 : mov eax, 0xe4 ; syscall ; ret
0x0000000000132538 : mov eax, 0xe400000e ; out dx, eax ; jmp rsi
0x00000000000ea358 : mov eax, 0xffffff ; add rsp, 8 ; ret
0x00000000000fac41 : mov eax, 0xffffffea ; ret
0x00000000000fa768 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003450e : mov eax, 0xffffffff ; ret
0x0000000000029016 : mov eax, 1 ; add rsp, 8 ; ret
0x00000000000faf2b : mov eax, 1 ; jne 0xfaee8 ; ret
0x00000000000296ec : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9c25 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000027d17 : mov eax, 1 ; ret
0x000000000001f71c : mov eax, 2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9b83 : mov eax, 2 ; syscall ; ret
0x00000000000f9b73 : mov eax, 3 ; syscall ; ret
0x00000000001099d1 : mov eax, 4 ; pop rbp ; pop r12 ; ret
0x00000000000faf68 : mov eax, 4 ; ret
0x00000000000f9c30 : mov eax, 4 ; syscall ; ret
0x00000000000f9c53 : mov eax, 5 ; syscall ; ret
0x00000000000f9c40 : mov eax, 6 ; syscall ; ret
0x00000000000fa236 : mov eax, 8 ; syscall ; ret
0x0000000000104232 : mov eax, dword ptr [0x10] ; ret
0x0000000000101057 : mov eax, dword ptr [rax + 0x10] ; cmp rax, rdx ; jne 0x101081 ; ret
0x000000000001c343 : mov eax, dword ptr [rax + 0x10] ; ret
0x0000000000101099 : mov eax, dword ptr [rax + 0x18] ; cmp rax, rdx ; jne 0x1010b1 ; ret
0x000000000003118d : mov eax, dword ptr [rax + 0x18] ; pop rbx ; ret
0x0000000000033697 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x336a8 ; ret
0x00000000001010d8 : mov eax, dword ptr [rax + 0x20] ; cmp rax, rdx ; jne 0x1010f1 ; ret
0x000000000003432c : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000101110 : mov eax, dword ptr [rax + 0x28] ; cmp rax, rdx ; jne 0x101129 ; ret
0x000000000003435c : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000003438c : mov eax, dword ptr [rax + 0x30] ; jmp rax
0x00000000000343c6 : mov eax, dword ptr [rax + 0x38] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000034406 : mov eax, dword ptr [rax + 0x40] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000e47a7 : mov eax, dword ptr [rax + 0x58] ; test eax, eax ; jne 0xe47b8 ; ret
0x00000000000e47f7 : mov eax, dword ptr [rax + 0x58] ; test eax, eax ; jne 0xe4808 ; ret
0x00000000000ea3b6 : mov eax, dword ptr [rax + 0x98] ; pop rbx ; ret
0x00000000000fdd03 : mov eax, dword ptr [rax + 0xc] ; and eax, 0xfffff ; ret
0x000000000001c333 : mov eax, dword ptr [rax + 0xc] ; ret
0x000000000001c313 : mov eax, dword ptr [rax + 4] ; and eax, 0xffffff ; ret
0x00000000000ea34d : mov eax, dword ptr [rax + 8] ; add rsp, 8 ; ret
0x00000000000fdcf3 : mov eax, dword ptr [rax + 8] ; ret
0x00000000000ea45e : mov eax, dword ptr [rax + 8] ; test eax, eax ; je 0xea478 ; pop rbx ; ret
0x00000000000ea81e : mov eax, dword ptr [rax + 8] ; test eax, eax ; je 0xea838 ; pop rbx ; ret
0x00000000000e833b : mov eax, dword ptr [rax + rbx*8] ; pop rbx ; ret
0x000000000010600e : mov eax, dword ptr [rax + rsi*8] ; ret
0x0000000000034435 : mov eax, dword ptr [rax - 0x40] ; jmp rax
0x0000000000034485 : mov eax, dword ptr [rax - 0x50] ; jmp rax
0x0000000000100f55 : mov eax, dword ptr [rax] ; cmp rax, rdx ; jne 0x100f68 ; ret
0x00000000000deffd : mov eax, dword ptr [rax] ; jmp rax
0x00000000000ea34b : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 8] ; add rsp, 8 ; ret
0x00000000000fc083 : mov eax, dword ptr [rax] ; ret
0x000000000001c303 : mov eax, dword ptr [rax] ; shr eax, 8 ; ret
0x000000000005dfc1 : mov eax, dword ptr [rax] ; test eax, eax ; je 0x5dfea ; call 0xea248
0x000000000006df6e : mov eax, dword ptr [rax] ; test eax, eax ; je 0x6df97 ; call 0xea248
0x00000000000adf5a : mov eax, dword ptr [rax] ; test eax, eax ; je 0xadfe6 ; call 0xea248
0x0000000000046416 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x46428 ; xor eax, eax ; ret
0x0000000000046d26 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x46d38 ; xor eax, eax ; ret
0x0000000000046d76 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x46d88 ; xor eax, eax ; ret
0x0000000000046dc6 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x46dd8 ; xor eax, eax ; ret
0x000000000010dde8 : mov eax, dword ptr [rax] ; test eax, eax ; setg al ; ret
0x00000000000f0cad : mov eax, dword ptr [rax] ; test rax, rax ; jne 0xf0ca8 ; ret
0x0000000000102140 : mov eax, dword ptr [rbx + 0x20] ; test rax, rax ; je 0x102152 ; call rax
0x00000000000f0b99 : mov eax, dword ptr [rbx + 0x30] ; test rax, rax ; jne 0xf0b82 ; pop rbx ; ret
0x00000000000e8930 : mov eax, dword ptr [rbx + 0x58] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b0d91 : mov eax, dword ptr [rbx + 0xd0] ; pop rbx ; ret
0x000000000001bbc3 : mov eax, dword ptr [rbx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010de15 : mov eax, dword ptr [rbx] ; sub eax, 1 ; mov dword ptr fs:[rbx], eax ; pop rbx ; ret
0x000000000010e137 : mov eax, dword ptr [rcx] ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x00000000000e87b5 : mov eax, dword ptr [rdi + 0x18] ; ret
0x00000000000e883b : mov eax, dword ptr [rdi + 0x18] ; sub rax, rdx ; ret
0x00000000000db528 : mov eax, dword ptr [rdi + 0x20] ; mov qword ptr [rdx], rax ; ret
0x00000000000e87f5 : mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000113c81 : mov eax, dword ptr [rdi + 8] ; fld xword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000010600a : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + rsi*8] ; ret
0x0000000000113a85 : mov eax, dword ptr [rdi + 8] ; xor edx, edx ; add rsp, 8 ; ret
0x000000000000263e : mov eax, dword ptr [rdi + rbp*4] ; wait ; ret
0x000000000001c281 : mov eax, dword ptr [rdi] ; add rax, 0x10 ; ret
0x00000000000f6d4d : mov eax, dword ptr [rdi] ; call qword ptr [rax]
0x000000000001f041 : mov eax, dword ptr [rdi] ; cmp byte ptr [rax], 2 ; sete al ; ret
0x00000000000fc071 : mov eax, dword ptr [rdi] ; cmp dword ptr [rax], 0xb ; sete al ; ret
0x000000000001c341 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax + 0x10] ; ret
0x000000000001c331 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax + 0xc] ; ret
0x00000000000fdcf1 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax + 8] ; ret
0x00000000000fc081 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x000000000001c301 : mov eax, dword ptr [rdi] ; mov eax, dword ptr [rax] ; shr eax, 8 ; ret
0x00000000000fd231 : mov eax, dword ptr [rdi] ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000000fc061 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x00000000000defe1 : mov eax, dword ptr [rdi] ; ret
0x00000000000fa180 : mov eax, dword ptr [rdi] ; test eax, eax ; je 0xfa197 ; ret
0x00000000000fac97 : mov eax, dword ptr [rdx + 0x48] ; cmp eax, 1 ; je 0xfacb1 ; ret
0x000000000001c1c7 : mov eax, dword ptr [rdx + 0x94] ; mov dword ptr [rdi + 0x10], eax ; ret
0x00000000000db251 : mov eax, dword ptr [rip + 0x26cd99] ; ret
0x00000000000e82ca : mov eax, dword ptr [rip + 0x477508] ; ret
0x00000000000e7440 : mov eax, dword ptr [rip + 0x477d82] ; ret
0x00000000000e470a : mov eax, dword ptr [rip + 0x479b88] ; ret
0x00000000000e4799 : mov eax, dword ptr [rip + 0x479c41] ; ret
0x00000000000e4771 : mov eax, dword ptr [rip + 0x479c61] ; ret
0x00000000000e46d1 : mov eax, dword ptr [rip + 0x479cf9] ; ret
0x00000000000e46b1 : mov eax, dword ptr [rip + 0x479d11] ; ret
0x00000000000e4691 : mov eax, dword ptr [rip + 0x479d29] ; ret
0x00000000000a91d1 : mov eax, dword ptr [rip + 0x4b2bf1] ; mov rdi, r12 ; call rax
0x00000000000a91a3 : mov eax, dword ptr [rip + 0x4b2c1f] ; je 0xa91df ; call rax
0x000000000010e071 : mov eax, dword ptr [rip + 0xea2b21] ; ret
0x000000000010b6b1 : mov eax, dword ptr [rip + 0xea53e1] ; ret
0x0000000000104241 : mov eax, dword ptr [rip + 0xeac6e1] ; ret
0x00000000000fe730 : mov eax, dword ptr [rsi] ; cmp dword ptr [rdi], eax ; setb al ; ret
0x00000000000268e3 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000f9d25 : mov eax, dword ptr [rsp - 0x18] ; ret
0x00000000000f9c83 : mov eax, dword ptr [rsp - 0x48] ; add rsp, 0x20 ; ret
0x00000000000269fa : mov eax, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000104c4a : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000006c1ca : mov eax, dword ptr [rsp] ; jmp 0x6c196
0x000000000007787a : mov eax, dword ptr [rsp] ; jmp 0x77846
0x00000000000fec71 : mov eax, dword ptr [rsp] ; ret
0x000000000010dde7 : mov eax, dword ptr fs:[rax] ; test eax, eax ; setg al ; ret
0x0000000000107ee2 : mov eax, eax ; movsxd rsi, dword ptr [rdi + r8*4] ; add rsi, rdi ; jmp rsi
0x000000000002deea : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fafef : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000028aea : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026964 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fa14b : mov eax, ebx ; mov r9, rbx ; syscall ; pop rbx ; ret
0x00000000000f08fb : mov eax, ebx ; pop rbx ; cmovne rax, rdi ; ret
0x0000000000030305 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f08b3 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000031083 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000001dee0 : mov eax, ebx ; pop rbx ; ret
0x00000000000fa253 : mov eax, ebx ; syscall ; pop rbx ; ret
0x00000000000f8581 : mov eax, ecx ; ret
0x000000000001c166 : mov eax, edi ; ret
0x0000000000104853 : mov eax, edx ; pop r12 ; ret
0x0000000000105fca : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000faa99 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000105fb6 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104029 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001024bd : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000344f1 : mov eax, edx ; ret
0x00000000000fd794 : mov eax, esi ; mov rcx, qword ptr [rsp + 8] ; call r12
0x0000000000113b9d : mov eax, esi ; mov rdx, rdi ; add rsp, 8 ; ret
0x00000000001139bd : mov eax, esi ; mov rdx, rdi ; ret
0x00000000001053ef : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001e9d1 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a1f6 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001138df : mov ebp, 0x48fff07e ; add esp, 0x20 ; leave ; ret
0x000000000011370f : mov ebp, 0x48ffffea ; add esp, 0x20 ; leave ; ret
0x000000000013d451 : mov ebp, 0xc32c0000 ; stc ; jmp rcx
0x00000000000f0864 : mov ebp, 0xf3001f0f ; ret
0x00000000000692ea : mov ebp, 0xfffff7a0 ; call rax
0x000000000009274f : mov ebp, ebx ; call rax
0x00000000000de9bb : mov ebp, ebx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000132c41 : mov ebp, esi ; jmp qword ptr [rcx]
0x00000000000927f2 : mov ebp, esp ; call rax
0x0000000000108d70 : mov ebp, esp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001333c1 : mov ebx, 0x14bffef ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x100e
0x0000000000003532 : mov ebx, 0x3a6f619c ; ret 0x23fc
0x000000000008a0c6 : mov ebx, 0x5a580007 ; jmp 0x8a095
0x00000000000ff711 : mov ebx, 0x89480002 ; ret 0x8948
0x00000000000e2ac2 : mov ebx, 0x89480047 ; ret
0x00000000000fac3a : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00000000000395e9 : mov ebx, dword ptr [rbp] ; mov rdx, r13 ; mov rsi, r12 ; call rax
0x000000000001df37 : mov ebx, dword ptr [rbx + 0x28] ; mov rax, rbx ; pop rbx ; ret
0x000000000001dee9 : mov ebx, dword ptr [rdi + 8] ; mov rax, rbx ; pop rbx ; ret
0x000000000010e462 : mov ebx, edi ; call 0x10f7a8
0x00000000001412fd : mov ebx, edi ; call qword ptr [rbx]
0x00000000000dc339 : mov ebx, edi ; mov edx, 0x28 ; xor esi, esi ; call qword ptr [rax]
0x00000000000e764a : mov ebx, edi ; xor esi, esi ; mov edx, 0x220 ; call rax
0x0000000000002f0c : mov ebx, es ; ret 0xcf17
0x00000000000fd797 : mov ecx, dword ptr [rsp + 8] ; call r12
0x0000000000033bec : mov ecx, dword ptr [rsp + 8] ; mov rdx, rax ; jmp 0x33bac
0x000000000001de9b : mov ecx, dword ptr [rsp] ; mov rdx, rax ; jmp 0x1de51
0x00000000000f2be1 : mov ecx, eax ; jmp 0xf2baa
0x0000000000079a69 : mov ecx, ebp ; mov esi, 0x100 ; call 0x105cc9
0x00000000000fa14e : mov ecx, ebx ; syscall ; pop rbx ; ret
0x00000000000f9b3c : mov ecx, esp ; syscall ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000225c5 : mov edi, 0x1000000 ; ror byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000013341d : mov edi, 0x15bffef ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x100e
0x0000000000002802 : mov edi, 0x7085cbf7 ; dec dword ptr [rax] ; mov al, 0xe1 ; ret 0x8d71
0x00000000000ff312 : mov edi, 0x89480002 ; ret 0x8948
0x00000000000e26e2 : mov edi, 0x89480047 ; ret
0x000000000013d621 : mov edi, 0xddbc0000 ; stc ; jmp qword ptr [rcx]
0x0000000000002436 : mov edi, 0xe7db3878 ; ret
0x00000000000d73c5 : mov edi, 0xe8000000 ; ret 0x2ad
0x00000000000842a1 : mov edi, 0xf440072 ; mov dh, 0x70 ; and eax, ebp ; ret 0x7a9
0x000000000010242a : mov edi, 1 ; call rax
0x00000000000f6d48 : mov edi, dword ptr [rax + rbp + 0x10] ; mov rax, qword ptr [rdi] ; call qword ptr [rax]
0x000000000011477e : mov edi, dword ptr [rbp - 0x14] ; call rbx
0x00000000000692e9 : mov edi, dword ptr [rbp - 0x860] ; call rax
0x00000000000e93ea : mov edi, dword ptr [rbx + 0x10] ; call rax
0x0000000000034823 : mov edi, dword ptr [rdi] ; call rax
0x00000000000344ca : mov edi, dword ptr [rdi] ; jmp rax
0x00000000000344ea : mov edi, dword ptr [rdi] ; jmp rcx
0x0000000000077ec5 : mov edi, eax ; call 0xe4194
0x000000000004c534 : mov edi, eax ; call 0xe8784
0x00000000001013c6 : mov edi, eax ; call rdx
0x00000000000dd61d : mov edi, eax ; ja 0xdd611 ; add rsp, 8 ; ret
0x00000000000eabd7 : mov edi, eax ; mov rsi, r12 ; call rcx
0x0000000000059a8a : mov edi, ebp ; call 0x105cc4
0x000000000001f953 : mov edi, ebp ; call 0x1bb64
0x0000000000114b07 : mov edi, ebp ; call qword ptr [r12 + rbx*8]
0x000000000002695b : mov edi, ebp ; call qword ptr [rax]
0x00000000001015e1 : mov edi, ebp ; call r12
0x00000000000f11ab : mov edi, ebp ; call rax
0x00000000000f4d6c : mov edi, ebp ; call rdx
0x00000000000e7b94 : mov edi, ebp ; xor esi, esi ; call rax
0x00000000000389b3 : mov edi, ebx ; call 0x34c24
0x00000000000a6ed6 : mov edi, ebx ; call 0xe3194
0x0000000000087dba : mov edi, ebx ; call 0xe3198
0x000000000006c500 : mov edi, ebx ; call 0xe87c4
0x000000000010a74a : mov edi, ebx ; call qword ptr [rax]
0x000000000008d6d5 : mov edi, ebx ; call qword ptr [rip + 0x4cc2ab]
0x000000000008d779 : mov edi, ebx ; call rax
0x0000000000101884 : mov edi, ebx ; call rdx
0x00000000000e7b0a : mov edi, ebx ; mov edx, 0x220 ; xor esi, esi ; call rax
0x000000000005231e : mov edi, ebx ; mov esi, 4 ; call 0xde5c9
0x000000000009274c : mov edi, ebx ; mov r13, rbx ; call rax
0x0000000000062399 : mov edi, ebx ; mov rsi, r14 ; call 0xde5c7
0x00000000000c22f1 : mov edi, ebx ; mov rsi, r15 ; call 0xde5c7
0x00000000000a99c3 : mov edi, edi ; call 0x105cc4
0x0000000000112d6a : mov edi, edi ; call 0x10f074
0x0000000000033a9a : mov edi, edi ; call qword ptr [r14]
0x000000000010708d : mov edi, edi ; call rax
0x0000000000026cd9 : mov edi, edi ; call rcx
0x00000000001012c0 : mov edi, edi ; mov dword ptr [rbx + 0x70], eax ; call qword ptr [rbx]
0x0000000000113a31 : mov edi, edx ; mov rax, rsi ; mov rdx, rdi ; ret
0x00000000000389dd : mov edi, esi ; call 0x34c24
0x00000000000df6c7 : mov edi, esi ; call qword ptr [r15]
0x00000000000f4490 : mov edi, esi ; call rax
0x00000000000622ff : mov edi, esi ; mov esi, 4 ; call 0xde5c9
0x00000000000f1705 : mov edi, esi ; mov qword ptr [rsp + 8], rdx ; call rcx
0x00000000000a2391 : mov edi, esi ; mov rsi, r15 ; call 0xde5c7
0x000000000003896d : mov edi, esp ; call 0x34c24
0x000000000006bd21 : mov edi, esp ; call 0xe7f54
0x00000000000da22a : mov edi, esp ; call qword ptr [rax]
0x00000000000a91d8 : mov edi, esp ; call rax
0x00000000000927ef : mov edi, esp ; mov r13, r12 ; call rax
0x0000000000114b06 : mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x00000000001012bf : mov edi, r15d ; mov dword ptr [rbx + 0x70], eax ; call qword ptr [rbx]
0x00000000000e8790 : mov edx, 0 ; cmovae rax, rdx ; ret
0x00000000000e764e : mov edx, 0x220 ; call rax
0x00000000000e7b0c : mov edx, 0x220 ; xor esi, esi ; call rax
0x00000000000e779f : mov edx, 0x220 ; xor esi, esi ; jmp rax
0x00000000000dc33b : mov edx, 0x28 ; xor esi, esi ; call qword ptr [rax]
0x000000000005a1ce : mov edx, 0x5a58000a ; jmp 0x5a19d
0x000000000000350e : mov edx, 0x80d5bb25 ; ret 0x8e4e
0x0000000000102297 : mov edx, 0x8b48ffff ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000025eb : mov edx, 0xbec39ba7 ; test al, 0x9b ; ret
0x00000000000f4fcc : mov edx, 0xf3001f0f ; ret
0x00000000000facac : mov edx, 2 ; cmove eax, edx ; ret
0x000000000010b09d : mov edx, 8 ; call 0xf7397
0x00000000000911b1 : mov edx, dword ptr [rax - 0x7ab7fffb] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000a9a62 : mov edx, dword ptr [rbp - 0x860] ; push rax ; call 0x105cc9
0x00000000000b99de : mov edx, dword ptr [rbp - 0x868] ; push rax ; call 0x105cc9
0x00000000000699fe : mov edx, dword ptr [rbp - 0x878] ; push rax ; call 0x105cc9
0x00000000000f8e84 : mov edx, dword ptr [rdi + rax*4] ; test edx, edx ; jne 0xf8e88 ; ret
0x00000000000feee4 : mov edx, dword ptr [rdi + rdx*8] ; mov qword ptr [rdi + rax*8 + 0x18], rdx ; pop rbx ; ret
0x0000000000113abd : mov edx, dword ptr [rdx + 8] ; add rsp, 8 ; ret
0x00000000000e7a6f : mov edx, dword ptr [rsi + rax*8] ; add qword ptr [rdi + rax*8], rdx ; ret
0x000000000001de9f : mov edx, eax ; jmp 0x1de4d
0x000000000002fb8b : mov edx, eax ; jmp 0x2fb68
0x0000000000033bf1 : mov edx, eax ; jmp 0x33ba7
0x00000000000fe928 : mov edx, eax ; jmp 0xfe8cf
0x0000000000025a06 : mov edx, eax ; lea rax, qword ptr [rip + 0x536321] ; call qword ptr [rax]
0x00000000000fa1cf : mov edx, eax ; syscall ; ret
0x000000000008d6d2 : mov edx, ebp ; mov rdi, rbx ; call qword ptr [rip + 0x4cc2ab]
0x000000000008d776 : mov edx, ebp ; mov rdi, rbx ; call rax
0x00000000000395ed : mov edx, ebp ; mov rsi, r12 ; call rax
0x000000000008d7b0 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000000da944 : mov edx, ebx ; mov esi, r15d ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000da224 : mov edx, ebx ; mov rsi, r15 ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000107087 : mov edx, ebx ; mov rsi, rbp ; mov rdi, r15 ; call rax
0x0000000000026956 : mov edx, ebx ; xor esi, esi ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000fa250 : mov edx, ecx ; mov r8, rbx ; syscall ; pop rbx ; ret
0x0000000000101fba : mov edx, ecx ; syscall ; ret
0x0000000000032789 : mov edx, ecx ; xor esi, esi ; call qword ptr [rax]
0x0000000000113ba0 : mov edx, edi ; add rsp, 8 ; ret
0x00000000001139c0 : mov edx, edi ; ret
0x00000000000fe607 : mov edx, edi ; shl rcx, 0x20 ; or rdx, rcx ; ret
0x00000000000fa223 : mov edx, edx ; mov eax, 0x4e ; syscall ; ret
0x00000000000f9b93 : mov edx, edx ; mov eax, 2 ; syscall ; ret
0x0000000000109411 : mov edx, esi ; mov rsi, rdi ; mov rdi, rbp ; call rax
0x00000000000fa7b6 : mov edx, esi ; syscall ; ret
0x00000000000deff8 : mov edx, esi ; xor esi, esi ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000079a6b : mov esi, 0x100 ; call 0x105cc7
0x0000000000075eeb : mov esi, 0x201 ; call 0x102197
0x000000000006c18e : mov esi, 0x48004ed8 ; add esp, 0x28 ; ret
0x0000000000059e2e : mov esi, 0x5a58000a ; jmp 0x59dfd
0x00000000000f80bb : mov esi, 0x75d28417 ; out dx, eax ; ret
0x0000000000001bba : mov esi, 0xab7b7e3 ; ret
0x000000000013d4e5 : mov esi, 0xccf80000 ; stc ; jmp qword ptr [rax]
0x000000000006b2ce : mov esi, 0xe900077e ; ret 0xfffb
0x00000000000df01a : mov esi, 0xf1 ; mov rax, qword ptr [rax] ; jmp rax
0x00000000000df03a : mov esi, 0xf2 ; mov rax, qword ptr [rax] ; jmp rax
0x00000000000df05a : mov esi, 0xf3 ; mov rax, qword ptr [rax] ; jmp rax
0x00000000000df07a : mov esi, 0xf5 ; mov rax, qword ptr [rax] ; jmp rax
0x00000000000de0af : mov esi, 0xf7 ; call qword ptr [rax]
0x00000000000df09a : mov esi, 0xf8 ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000052320 : mov esi, 4 ; call 0xde5c7
0x00000000000253a4 : mov esi, dword ptr [rax] ; fbld dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000001f494 : mov esi, dword ptr [rsp + 8] ; add r15, rbp ; call r14
0x000000000001f50e : mov esi, dword ptr [rsp + 8] ; call r14
0x0000000000108544 : mov esi, dword ptr [rsp + 8] ; mov rdi, r15 ; call rax
0x00000000001013c1 : mov esi, dword ptr [rsp + 8] ; mov rdi, rax ; call rdx
0x00000000000fa8e5 : mov esi, eax ; ja 0xfa8f8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001021bd : mov esi, eax ; test rax, rax ; je 0x1021cd ; call rax
0x00000000001014db : mov esi, ebp ; add ebx, 1 ; call r12
0x0000000000025236 : mov esi, ebp ; call 0x21454
0x0000000000026cd2 : mov esi, ebp ; cmovbe rdx, rax ; mov rdi, r15 ; call rcx
0x000000000010708a : mov esi, ebp ; mov rdi, r15 ; call rax
0x0000000000077ec2 : mov esi, ebp ; mov rdi, rax ; call 0xe4197
0x00000000001015de : mov esi, ebp ; mov rdi, rbp ; call r12
0x000000000010a747 : mov esi, ebp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000108b26 : mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000101881 : mov esi, ebp ; mov rdi, rbx ; call rdx
0x0000000000030e37 : mov esi, ebp ; xor edx, edx ; call 0xdd0e6
0x00000000001010a9 : mov esi, ecx ; jmp rax
0x00000000000a2394 : mov esi, edi ; call 0xde5c4
0x00000000000da227 : mov esi, edi ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000389da : mov esi, edi ; mov rdi, r14 ; call 0x34c27
0x0000000000109414 : mov esi, edi ; mov rdi, rbp ; call rax
0x0000000000101a41 : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000006239c : mov esi, esi ; call 0xde5c4
0x0000000000101d69 : mov esi, esi ; call rax
0x00000000000692e6 : mov esi, esi ; mov rdi, qword ptr [rbp - 0x860] ; call rax
0x00000000000389b0 : mov esi, esi ; mov rdi, rbx ; call 0x34c27
0x00000000000395f0 : mov esi, esp ; call rax
0x00000000000eabda : mov esi, esp ; call rcx
0x00000000000f11a8 : mov esi, esp ; mov rdi, r13 ; call rax
0x00000000000a6ed3 : mov esi, esp ; mov rdi, rbx ; call 0xe3197
0x000000000008d7b3 : mov esi, esp ; mov rdi, rbx ; call rax
0x00000000000da946 : mov esi, r15d ; mov rdi, r12 ; call qword ptr [rax]
0x00000000001304b8 : mov esp, 0x18000144 ; mov dh, 0xfc ; call rax
0x000000000013d43c : mov esp, 0x200000bd ; ret
0x000000000012da80 : mov esp, 0x280000a0 ; push rdx ; hlt ; call rax
0x000000000012dcd8 : mov esp, 0x280000aa ; cmp dh, ch ; call rax
0x0000000000131018 : mov esp, 0x38000179 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rax
0x0000000000130340 : mov esp, 0x5800013b ; pop rbp ; cld ; call rax
0x0000000000130a78 : mov esp, 0x6800015e ; cmp ebp, edi ; call rax
0x000000000012f430 : mov esp, 0x80000f9 ; and cl, bh ; call rax
0x000000000012f790 : mov esp, 0x8000104 ; push -7 ; call rax
0x0000000000130668 : mov esp, 0x800014a ; fdivr st(4) ; call rax
0x000000000012e288 : mov esp, 0x880000c3 ; movsd dword ptr [rdi], dword ptr [rsi] ; idiv edi ; in al, dx ; ret
0x000000000012e970 : mov esp, 0x880000da ; mov ch, 0xf8 ; call rax
0x000000000001f75b : mov esp, 0x9de80052 ; ret
0x0000000000144c3c : mov esp, 0xa0000135 ; cld ; jmp qword ptr [rdi]
0x000000000012e850 : mov esp, 0xa80000d7 ; mov al, 0xf8 ; call rax
0x000000000012d4c0 : mov esp, 0xb8000087 ; clc ; int1 ; call rax
0x000000000012f220 : mov esp, 0xb80000f3 ; or edi, ecx ; call rax
0x000000000012d750 : mov esp, 0xc8000092 ; mov bh, 0xf2 ; call rax
0x000000000012e600 : mov esp, 0xe80000d0 ; xchg eax, esi ; clc ; call rax
0x000000000012e810 : mov esp, 0xe80000d6 ; stosb byte ptr [rdi], al ; clc ; call rax
0x0000000000132c3c : mov esp, 0xf0000015 ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000012f5f8 : mov esp, 0xf80000ff ; stc ; call rax
0x0000000000002a4a : mov esp, dword ptr [rcx] ; jb 0x2a50 ; cmp edi, edx ; mov cl, 9 ; ret
0x000000000002e245 : mov qword ptr [r10], r9 ; mov qword ptr [rdx], rcx ; pop rbx ; ret
0x0000000000031189 : mov qword ptr [r10], r9 ; mov rax, qword ptr [rax + 0x18] ; pop rbx ; ret
0x00000000001099e5 : mov qword ptr [r12], rax ; jmp 0x1099b3
0x00000000000f7255 : mov qword ptr [r8 + 0x10], rdx ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000f16cd : mov qword ptr [rax + 0x620], r8 ; ret
0x000000000002e4a0 : mov qword ptr [rax - 0x60], rbx ; pop rbx ; ret
0x00000000000e8232 : mov qword ptr [rax], rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e5180 : mov qword ptr [rax], rdi ; ret
0x0000000000027d14 : mov qword ptr [rax], rsi ; mov eax, 1 ; ret
0x00000000000eabf1 : mov qword ptr [rbp + 8], rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b297b : mov qword ptr [rbp - 0x858], r10 ; call 0xfec79
0x00000000000abc4b : mov qword ptr [rbp - 0x860], r10 ; call 0xe7f59
0x000000000007c51a : mov qword ptr [rbp - 0x860], rax ; call 0xe8789
0x000000000004c53e : mov qword ptr [rbp - 0x860], rax ; call 0xe87c9
0x00000000000ac55d : mov qword ptr [rbp - 0x868], rax ; call 0xe8789
0x000000000008c573 : mov qword ptr [rbp - 0x870], rax ; call 0xe87c9
0x000000000006c4e5 : mov qword ptr [rbp - 0x878], rax ; call 0xe8789
0x00000000000fd917 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000000fd0db : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000ea475 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000100180 : mov qword ptr [rbx + 0x28], -1 ; pop rbx ; ret
0x000000000010021b : mov qword ptr [rbx + 0x30], -1 ; pop rbx ; ret
0x00000000001001eb : mov qword ptr [rbx + 8], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033d03 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000033cd3 : mov qword ptr [rbx], 1 ; pop rbx ; ret
0x00000000000f0a26 : mov qword ptr [rbx], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb66a : mov qword ptr [rbx], rax ; pop rbx ; ret
0x000000000002f034 : mov qword ptr [rcx + 0x10], rdx ; mov qword ptr [rcx + 0x18], rdx ; ret
0x000000000002f038 : mov qword ptr [rcx + 0x18], rdx ; ret
0x00000000000f169a : mov qword ptr [rcx + 0x210], rsi ; ret
0x000000000002f474 : mov qword ptr [rcx + 0x30], rdx ; mov qword ptr [rcx + 0x38], rdx ; ret
0x000000000002f478 : mov qword ptr [rcx + 0x38], rdx ; ret
0x000000000002f914 : mov qword ptr [rcx + 0x70], rdx ; mov qword ptr [rcx + 0x78], rdx ; ret
0x000000000002f918 : mov qword ptr [rcx + 0x78], rdx ; ret
0x000000000002ec40 : mov qword ptr [rcx + 8], rdx ; ret
0x0000000000105d1f : mov qword ptr [rdi + 0x10], r10 ; ret
0x00000000000fd233 : mov qword ptr [rdi + 0x18], rax ; ret
0x00000000000fadfe : mov qword ptr [rdi + 0x20], rax ; ret
0x00000000000fadfa : mov qword ptr [rdi + 0x28], rdx ; mov qword ptr [rdi + 0x20], rax ; ret
0x000000000002e830 : mov qword ptr [rdi + 0x7fff8000], rax ; xor eax, eax ; ret
0x0000000000101f8a : mov qword ptr [rdi + 0xb8], rdx ; ret
0x00000000001003f1 : mov qword ptr [rdi + 0xe8], rdx ; ret
0x000000000010f892 : mov qword ptr [rdi + 8], rax ; ret
0x00000000000feee7 : mov qword ptr [rdi + rax*8 + 0x18], rdx ; pop rbx ; ret
0x000000000001f034 : mov qword ptr [rdi], rsi ; ret
0x00000000001006c7 : mov qword ptr [rdi], rsi ; test rax, rax ; je 0x1006e0 ; jmp rax
0x0000000000106f86 : mov qword ptr [rdx + 0x10], rax ; ret
0x000000000010200c : mov qword ptr [rdx + rax*8], rdi ; mov eax, 1 ; ret
0x00000000000db52b : mov qword ptr [rdx], rax ; ret
0x000000000002e248 : mov qword ptr [rdx], rcx ; pop rbx ; ret
0x00000000000eac68 : mov qword ptr [rip + 0x25d3d1], rdi ; ret
0x00000000000eaca0 : mov qword ptr [rip + 0x474c11], rdi ; ret
0x00000000000fc9b0 : mov qword ptr [rip + 0x6b3a49], rdi ; ret
0x00000000001025bc : mov qword ptr [rip + 0xeae315], rdi ; ret
0x0000000000102520 : mov qword ptr [rip + 0xeae3b9], rdi ; ret
0x0000000000102180 : mov qword ptr [rip + 0xeae6f9], rdi ; ret
0x0000000000102110 : mov qword ptr [rip + 0xeae771], rdi ; ret
0x0000000000028a81 : mov qword ptr [rsi], 0x7fff8000 ; ret
0x000000000001e8c0 : mov qword ptr [rsi], rax ; ret
0x00000000000f8f95 : mov qword ptr [rsi], rdi ; jne 0xf8fc3 ; ret
0x0000000000020e57 : mov qword ptr [rsp + 0x20], r11 ; call 0xdd0e7
0x00000000000f1707 : mov qword ptr [rsp + 8], rdx ; call rcx
0x000000000002fb8a : mov r10, r8 ; jmp 0x2fb69
0x00000000000fe927 : mov r10, r8 ; jmp 0xfe8d0
0x00000000000fa1ce : mov r10, r8 ; syscall ; ret
0x00000000000fa24f : mov r10, r9 ; mov r8, rbx ; syscall ; pop rbx ; ret
0x0000000000101fb9 : mov r10, rcx ; syscall ; ret
0x00000000000927f1 : mov r13, r12 ; call rax
0x000000000009274e : mov r13, rbx ; call rax
0x00000000001021bc : mov r14, r8 ; test rax, rax ; je 0x1021ce ; call rax
0x000000000005a56d : mov r15b, 0xa ; add byte ptr [rax + 0x5a], bl ; jmp 0x5a53e
0x00000000000fd793 : mov r8, r14 ; mov rcx, qword ptr [rsp + 8] ; call r12
0x00000000000fa14a : mov r8, rbx ; mov r9, rbx ; syscall ; pop rbx ; ret
0x00000000000fa252 : mov r8, rbx ; syscall ; pop rbx ; ret
0x00000000000f9b3b : mov r9, r12 ; syscall ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2be0 : mov r9, rax ; jmp 0xf2bab
0x00000000000fa14d : mov r9, rbx ; syscall ; pop rbx ; ret
0x00000000000fac40 : mov rax, -0x16 ; ret
0x0000000000104231 : mov rax, qword ptr [0x10] ; ret
0x00000000000fc063 : mov rax, qword ptr [rax + 0x10] ; ret
0x000000000003118c : mov rax, qword ptr [rax + 0x18] ; pop rbx ; ret
0x000000000003432b : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000003435b : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000003438b : mov rax, qword ptr [rax + 0x30] ; jmp rax
0x00000000000ea3b5 : mov rax, qword ptr [rax + 0x98] ; pop rbx ; ret
0x00000000000e833a : mov rax, qword ptr [rax + rbx*8] ; pop rbx ; ret
0x000000000010600d : mov rax, qword ptr [rax + rsi*8] ; ret
0x0000000000034434 : mov rax, qword ptr [rax - 0x40] ; jmp rax
0x0000000000034484 : mov rax, qword ptr [rax - 0x50] ; jmp rax
0x0000000000100f54 : mov rax, qword ptr [rax] ; cmp rax, rdx ; jne 0x100f69 ; ret
0x00000000000deffc : mov rax, qword ptr [rax] ; jmp rax
0x00000000000f0cac : mov rax, qword ptr [rax] ; test rax, rax ; jne 0xf0ca9 ; ret
0x000000000010213f : mov rax, qword ptr [rbx + 0x20] ; test rax, rax ; je 0x102153 ; call rax
0x00000000000e892f : mov rax, qword ptr [rbx + 0x58] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000001bbc2 : mov rax, qword ptr [rbx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e87b4 : mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000000e883a : mov rax, qword ptr [rdi + 0x18] ; sub rax, rdx ; ret
0x00000000000db527 : mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [rdx], rax ; ret
0x00000000000e87f4 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000106009 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + rsi*8] ; ret
0x000000000001c280 : mov rax, qword ptr [rdi] ; add rax, 0x10 ; ret
0x00000000000f6d4c : mov rax, qword ptr [rdi] ; call qword ptr [rax]
0x000000000001f040 : mov rax, qword ptr [rdi] ; cmp byte ptr [rax], 2 ; sete al ; ret
0x00000000000fc070 : mov rax, qword ptr [rdi] ; cmp dword ptr [rax], 0xb ; sete al ; ret
0x000000000001c340 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 0x10] ; ret
0x000000000001c330 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 0xc] ; ret
0x00000000000fdcf0 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 8] ; ret
0x00000000000fc080 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; ret
0x000000000001c300 : mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; shr eax, 8 ; ret
0x00000000000fd230 : mov rax, qword ptr [rdi] ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000000fc060 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x10] ; ret
0x00000000000defe0 : mov rax, qword ptr [rdi] ; ret
0x00000000000db250 : mov rax, qword ptr [rip + 0x26cd99] ; ret
0x00000000000e82c9 : mov rax, qword ptr [rip + 0x477508] ; ret
0x00000000000e4709 : mov rax, qword ptr [rip + 0x479b88] ; ret
0x00000000000e4798 : mov rax, qword ptr [rip + 0x479c41] ; ret
0x00000000000e4770 : mov rax, qword ptr [rip + 0x479c61] ; ret
0x00000000000e46d0 : mov rax, qword ptr [rip + 0x479cf9] ; ret
0x00000000000e46b0 : mov rax, qword ptr [rip + 0x479d11] ; ret
0x00000000000e4690 : mov rax, qword ptr [rip + 0x479d29] ; ret
0x00000000000a91a2 : mov rax, qword ptr [rip + 0x4b2c1f] ; je 0xa91e0 ; call rax
0x000000000010e070 : mov rax, qword ptr [rip + 0xea2b21] ; ret
0x000000000010b6b0 : mov rax, qword ptr [rip + 0xea53e1] ; ret
0x0000000000104240 : mov rax, qword ptr [rip + 0xeac6e1] ; ret
0x00000000000268e2 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000f9c82 : mov rax, qword ptr [rsp - 0x48] ; add rsp, 0x20 ; ret
0x00000000000269f9 : mov rax, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000104c49 : mov rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000006c1c9 : mov rax, qword ptr [rsp] ; jmp 0x6c197
0x0000000000077879 : mov rax, qword ptr [rsp] ; jmp 0x77847
0x00000000000fec70 : mov rax, qword ptr [rsp] ; ret
0x0000000000104230 : mov rax, qword ptr fs:[0x10] ; ret
0x00000000001053ee : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001e9d0 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fafee : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000028ae9 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026963 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000f08fa : mov rax, rbx ; pop rbx ; cmovne rax, rdi ; ret
0x0000000000030304 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f08b2 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000031082 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000001dedf : mov rax, rbx ; pop rbx ; ret
0x00000000000f8580 : mov rax, rcx ; ret
0x000000000001c165 : mov rax, rdi ; ret
0x0000000000104852 : mov rax, rdx ; pop r12 ; ret
0x0000000000104827 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000344f0 : mov rax, rdx ; ret
0x00000000001139bc : mov rax, rsi ; mov rdx, rdi ; ret
0x00000000000fac39 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000001df36 : mov rbx, qword ptr [rbx + 0x28] ; mov rax, rbx ; pop rbx ; ret
0x000000000001dee8 : mov rbx, qword ptr [rdi + 8] ; mov rax, rbx ; pop rbx ; ret
0x000000000010e461 : mov rbx, rdi ; call 0x10f7a9
0x00000000000fd796 : mov rcx, qword ptr [rsp + 8] ; call r12
0x0000000000033beb : mov rcx, qword ptr [rsp + 8] ; mov rdx, rax ; jmp 0x33bad
0x000000000001de9a : mov rcx, qword ptr [rsp] ; mov rdx, rax ; jmp 0x1de52
0x00000000000f6d47 : mov rdi, qword ptr [rax + rbp + 0x10] ; mov rax, qword ptr [rdi] ; call qword ptr [rax]
0x00000000000692e8 : mov rdi, qword ptr [rbp - 0x860] ; call rax
0x00000000000e93e9 : mov rdi, qword ptr [rbx + 0x10] ; call rax
0x0000000000034822 : mov rdi, qword ptr [rdi] ; call rax
0x00000000000344c9 : mov rdi, qword ptr [rdi] ; jmp rax
0x00000000000344e9 : mov rdi, qword ptr [rdi] ; jmp rcx
0x000000000006c4ff : mov rdi, r11 ; call 0xe87c5
0x000000000003896c : mov rdi, r12 ; call 0x34c25
0x000000000006bd20 : mov rdi, r12 ; call 0xe7f55
0x00000000000da229 : mov rdi, r12 ; call qword ptr [rax]
0x00000000000a91d7 : mov rdi, r12 ; call rax
0x00000000000927ee : mov rdi, r12 ; mov r13, r12 ; call rax
0x0000000000059a89 : mov rdi, r13 ; call 0x105cc5
0x00000000000f11aa : mov rdi, r13 ; call rax
0x00000000000389dc : mov rdi, r14 ; call 0x34c25
0x00000000000df6c6 : mov rdi, r14 ; call qword ptr [r15]
0x00000000000a2390 : mov rdi, r14 ; mov rsi, r15 ; call 0xde5c8
0x00000000000a99c2 : mov rdi, r15 ; call 0x105cc5
0x0000000000112d69 : mov rdi, r15 ; call 0x10f075
0x0000000000033a99 : mov rdi, r15 ; call qword ptr [r14]
0x000000000010708c : mov rdi, r15 ; call rax
0x0000000000026cd8 : mov rdi, r15 ; call rcx
0x00000000000dd61c : mov rdi, r8 ; ja 0xdd612 ; add rsp, 8 ; ret
0x0000000000077ec4 : mov rdi, rax ; call 0xe4195
0x000000000004c533 : mov rdi, rax ; call 0xe8785
0x000000000004c532 : mov rdi, rax ; call 0xe8786
0x00000000001013c5 : mov rdi, rax ; call rdx
0x00000000000eabd6 : mov rdi, rax ; mov rsi, r12 ; call rcx
0x000000000001f952 : mov rdi, rbp ; call 0x1bb65
0x000000000002695a : mov rdi, rbp ; call qword ptr [rax]
0x00000000001015e0 : mov rdi, rbp ; call r12
0x00000000000f4d81 : mov rdi, rbp ; call rax
0x00000000000f4d6b : mov rdi, rbp ; call rdx
0x00000000000e7b93 : mov rdi, rbp ; xor esi, esi ; call rax
0x00000000000389b2 : mov rdi, rbx ; call 0x34c25
0x00000000000a6ed5 : mov rdi, rbx ; call 0xe3195
0x0000000000087db9 : mov rdi, rbx ; call 0xe3199
0x000000000010a749 : mov rdi, rbx ; call qword ptr [rax]
0x000000000008d6d4 : mov rdi, rbx ; call qword ptr [rip + 0x4cc2ab]
0x000000000008d778 : mov rdi, rbx ; call rax
0x0000000000101883 : mov rdi, rbx ; call rdx
0x000000000009274b : mov rdi, rbx ; mov r13, rbx ; call rax
0x0000000000062398 : mov rdi, rbx ; mov rsi, r14 ; call 0xde5c8
0x00000000000c22f0 : mov rdi, rbx ; mov rsi, r15 ; call 0xde5c8
0x0000000000113a30 : mov rdi, rdx ; mov rax, rsi ; mov rdx, rdi ; ret
0x00000000000f448f : mov rdi, rsi ; call rax
0x00000000000f1704 : mov rdi, rsi ; mov qword ptr [rsp + 8], rdx ; call rcx
0x0000000000113abc : mov rdx, qword ptr [rdx + 8] ; add rsp, 8 ; ret
0x00000000000e7a6e : mov rdx, qword ptr [rsi + rax*8] ; add qword ptr [rdi + rax*8], rdx ; ret
0x00000000000395ec : mov rdx, r13 ; mov rsi, r12 ; call rax
0x0000000000109410 : mov rdx, r14 ; mov rsi, rdi ; mov rdi, rbp ; call rax
0x000000000001de9e : mov rdx, rax ; jmp 0x1de4e
0x0000000000033bf0 : mov rdx, rax ; jmp 0x33ba8
0x00000000000da943 : mov rdx, rbx ; mov esi, r15d ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000da223 : mov rdx, rbx ; mov rsi, r15 ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000107086 : mov rdx, rbx ; mov rsi, rbp ; mov rdi, r15 ; call rax
0x0000000000026955 : mov rdx, rbx ; xor esi, esi ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000032788 : mov rdx, rcx ; xor esi, esi ; call qword ptr [rax]
0x0000000000113b9f : mov rdx, rdi ; add rsp, 8 ; ret
0x00000000001139bf : mov rdx, rdi ; ret
0x00000000000fa7b5 : mov rdx, rsi ; syscall ; ret
0x00000000000deff7 : mov rdx, rsi ; xor esi, esi ; mov rax, qword ptr [rax] ; jmp rax
0x000000000001f493 : mov rsi, qword ptr [rsp + 8] ; add r15, rbp ; call r14
0x000000000001f50d : mov rsi, qword ptr [rsp + 8] ; call r14
0x0000000000108543 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r15 ; call rax
0x00000000001013c0 : mov rsi, qword ptr [rsp + 8] ; mov rdi, rax ; call rdx
0x00000000000395ef : mov rsi, r12 ; call rax
0x00000000000eabd9 : mov rsi, r12 ; call rcx
0x00000000000f11a7 : mov rsi, r12 ; mov rdi, r13 ; call rax
0x00000000000a6ed2 : mov rsi, r12 ; mov rdi, rbx ; call 0xe3198
0x000000000008d7b2 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000001014da : mov rsi, r13 ; add ebx, 1 ; call r12
0x0000000000025235 : mov rsi, r13 ; call 0x21455
0x00000000001015dd : mov rsi, r13 ; mov rdi, rbp ; call r12
0x0000000000101880 : mov rsi, r13 ; mov rdi, rbx ; call rdx
0x000000000006239b : mov rsi, r14 ; call 0xde5c5
0x0000000000101d68 : mov rsi, r14 ; call rax
0x00000000000389af : mov rsi, r14 ; mov rdi, rbx ; call 0x34c28
0x00000000000a2393 : mov rsi, r15 ; call 0xde5c5
0x00000000000da226 : mov rsi, r15 ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000389d9 : mov rsi, r15 ; mov rdi, r14 ; call 0x34c28
0x0000000000101a40 : mov rsi, r15 ; mov rdi, rbx ; call rax
0x00000000001010e8 : mov rsi, r9 ; jmp rax
0x00000000000fa8e4 : mov rsi, rax ; ja 0xfa8f9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107089 : mov rsi, rbp ; mov rdi, r15 ; call rax
0x0000000000077ec1 : mov rsi, rbp ; mov rdi, rax ; call 0xe4198
0x000000000010a746 : mov rsi, rbp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000108b25 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000030e36 : mov rsi, rbp ; xor edx, edx ; call 0xdd0e7
0x00000000001010a8 : mov rsi, rcx ; jmp rax
0x0000000000109413 : mov rsi, rdi ; mov rdi, rbp ; call rax
0x00000000001304c4 : mov sil, 0xfc ; jmp rsp
0x00000000000f2a5e : mov spl, byte ptr [rax] ; add byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000f3e60 : mov spl, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000f33f6 : mov word ptr [rax + rax*8], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002fbe5 : mov word ptr [rbx], cs ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000001ca9 : mov word ptr [rcx - 0x1e], ds ; ret
0x00000000000ff27c : mov word ptr [rdx], es ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000013dd64 : mov word ptr [rdx], ss ; cli ; call qword ptr [rcx]
0x0000000000134a40 : mov word ptr [rsi], es ; add dword ptr [r15], 2 ; ret
0x0000000000138e9c : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; ret 0xa02
0x00000000001367d8 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; ret
0x00000000000c960c : movabs al, byte ptr [0x3944008b4400280e] ; ret 0x4074
0x00000000000afa03 : movabs al, byte ptr [0x8349e0894cfffff7] ; ret 0x4e01
0x00000000000edda1 : movabs al, byte ptr [0x894c001f0ffffffa] ; ret 0x8348
0x000000000007c3f1 : movabs al, byte ptr [0xc3e8df894cfffff7] ; ret
0x00000000000cd851 : movabs byte ptr [0x63058d48f1890000], al ; ret
0x00000000000fea7a : movabs byte ptr [0x860fd23949000000], al ; ret 0
0x00000000001135ba : movabs byte ptr [0xc920c48348ffffde], al ; ret
0x000000000010c3e9 : movabs dword ptr [0x8348c38948ffff5d], eax ; ret
0x00000000000faf04 : movabs dword ptr [0x894cce894cd0894c], eax ; ret 0x50f
0x00000000000cd8a2 : movabs eax, dword ptr [0x12058d48f1890000] ; ret
0x00000000000cd995 : movabs eax, dword ptr [0x1f058d48f1890000] ; ret 0x48
0x00000000000c7fb3 : movabs eax, dword ptr [0x3944008b44002825] ; ret 0x4074
0x00000000000ea6db : movabs eax, dword ptr [0x5c415d5b90fff43c] ; ret
0x00000000000cd944 : movabs eax, dword ptr [0x70058d48f1890000] ; ret 0x48
0x000000000008471b : movabs eax, dword ptr [0x8948c0854800059e] ; ret
0x000000000007c11b : movabs eax, dword ptr [0x8948c08548000624] ; ret
0x000000000005b31b : movabs eax, dword ptr [0x8948c08548000832] ; ret
0x00000000000cd8f3 : movabs eax, dword ptr [0xc1058d48f1890000] ; ret 0x48
0x00000000000f145f : movaps xmmword ptr [rcx + rdx], xmm0 ; ret
0x000000000010e5fe : movaps xmmword ptr [rcx], xmm0 ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000010e4c4 : movaps xmmword ptr [rdx + 0x10], xmm0 ; add rsp, 0x28 ; ret
0x00000000000f145a : movhps xmm0, qword ptr [rsp - 0x10] ; movaps xmmword ptr [rcx + rdx], xmm0 ; ret
0x00000000000b5c54 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000135724 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000130c18 : movsb byte ptr [rdi], byte ptr [rsi] ; add word ptr [rax], ax ; or byte ptr [rax - 3], bl ; call rax
0x000000000012e775 : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rax
0x000000000012d8b0 : movsb byte ptr [rdi], byte ptr [rsi] ; cwde ; add byte ptr [rax], al ; sub byte ptr [rax], bh ; call rax
0x00000000001310f0 : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x1310f9 ; add byte ptr [rax], cl ; ret 0xfffd
0x000000000012f9e8 : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0xf7380001 ; cli ; call rsp
0x0000000000140524 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; clc ; adc ebx, edi ; jmp rsp
0x0000000000130cd8 : movsb byte ptr [rdi], byte ptr [rsi] ; push 1 ; add byte ptr [rax + 0x6e], bl ; std ; jmp rsp
0x000000000002a558 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xe
0x00000000001376dc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff4
0x00000000000ff055 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 2
0x000000000012da10 : movsb byte ptr [rdi], byte ptr [rsi] ; sahf ; add byte ptr [rax], al ; cwde ; or ah, dh ; call rax
0x000000000013913c : movsb byte ptr [rdi], byte ptr [rsi] ; sbb bh, dh ; call rsp
0x000000000012d960 : movsb byte ptr [rdi], byte ptr [rsi] ; wait ; add byte ptr [rax], al ; call 0xffffffffd512cd09
0x00000000000ff5d7 : movsd dword ptr [rdi], dword ptr [rsi] ; adc bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000012dbb9 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; js 0x12db88 ; hlt ; call qword ptr [rax]
0x000000000002af4e : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000e1aa1 : movsd dword ptr [rdi], dword ptr [rsi] ; call 0xe0b29
0x0000000000145bad : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x0000000000002b27 : movsd dword ptr [rdi], dword ptr [rsi] ; fstp st(1) ; ret
0x000000000012e28d : movsd dword ptr [rdi], dword ptr [rsi] ; idiv edi ; in al, dx ; ret
0x0000000000130fe5 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x00000000000f80ba : movsx edx, byte ptr [rdi] ; test dl, dl ; jne 0xf80b8 ; ret
0x00000000000ff030 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x00000000000ff4d5 : movsxd rax, dword ptr [rcx + r14*4] ; add rax, rcx ; jmp rax
0x000000000002cfeb : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000ff4a1 : movsxd rax, dword ptr [rdx + r14*4] ; add rax, rdx ; jmp rax
0x000000000002baa8 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e0746 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000fac83 : movsxd rax, dword ptr [rdx + rdi*4] ; add rax, rdx ; jmp rax
0x000000000012fbed : movsxd rdi, ebx ; call qword ptr [rax]
0x00000000000f9dc1 : movsxd rdi, edi ; mov eax, 0xe4 ; syscall ; ret
0x00000000000f9b71 : movsxd rdi, edi ; mov eax, 3 ; syscall ; ret
0x00000000000f9c51 : movsxd rdi, edi ; mov eax, 5 ; syscall ; ret
0x0000000000144ee9 : movsxd rdi, esp ; jmp qword ptr [rsi]
0x00000000000e06da : movsxd rdx, dword ptr [rcx + rbx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f9b61 : movsxd rdx, edx ; mov eax, 0xa ; syscall ; ret
0x00000000000fa234 : movsxd rdx, edx ; mov eax, 8 ; syscall ; ret
0x0000000000107ee4 : movsxd rsi, dword ptr [rdi + r8*4] ; add rsi, rdi ; jmp rsi
0x00000000000f9c94 : movsxd rsi, esi ; mov eax, 0x21 ; syscall ; ret
0x00000000000f9b81 : movsxd rsi, esi ; mov eax, 2 ; syscall ; ret
0x000000000001c0af : movups xmmword ptr [rax + 0x48], xmm0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fadbe : movzx eax, al ; add eax, 1 ; ret
0x000000000001f05a : movzx eax, al ; ret
0x000000000001c323 : movzx eax, byte ptr [rax + 7] ; shr al, 1 ; and eax, 3 ; ret
0x00000000000fa7e0 : movzx eax, byte ptr [rdi + 0x18] ; ret
0x00000000000fa5f5 : movzx eax, byte ptr [rdi + rax] ; sar eax, cl ; and eax, 1 ; ret
0x00000000000e4750 : movzx eax, byte ptr [rip + 0x479c91] ; ret
0x000000000010c250 : movzx eax, byte ptr [rip + 0xea4812] ; ret
0x000000000007299c : movzx ebx, byte ptr [rax + 0x21] ; call 0xfec76
0x00000000000f79a8 : movzx ecx, byte ptr [rdx] ; cmp cl, r8b ; jne 0xf79a9 ; ret
0x00000000001070da : movzx ecx, byte ptr [rsp + 0xf] ; jmp 0x1070a9
0x00000000000f8060 : movzx edx, byte ptr [rax] ; cmp dl, cl ; jne 0xf8060 ; ret
0x00000000000dd2ea : movzx esi, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rcx
0x0000000000082a65 : movzx esi, byte ptr [rax + 0x21] ; call 0xfec76
0x0000000000042a4a : movzx esp, byte ptr [rax + 0x21] ; call 0xfec76
0x0000000000042a49 : movzx r12d, byte ptr [rax + 0x21] ; call 0xfec77
0x0000000000082a64 : movzx r14d, byte ptr [rax + 0x21] ; call 0xfec77
0x00000000000dd380 : neg byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x00000000001063c8 : neg eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f8fbe : neg eax ; ret
0x00000000000f9b15 : neg edi ; mov dword ptr [rsi], edi ; ret
0x00000000000f8fbd : neg rax ; ret
0x00000000000f1593 : nop ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; je 0xf15a8 ; ret
0x0000000000102eda : nop ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x102ec3 ; ret
0x0000000000029b92 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000a7463 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000b8cff : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b3e1f : nop ; call rax
0x00000000000f7fff : nop ; cmp ecx, r8d ; sbb eax, eax ; or eax, 1 ; ret
0x00000000000f250f : nop ; cmp qword ptr [rdx], 0 ; jne 0xf2528 ; ret
0x00000000000f250e : nop ; cmp qword ptr [rdx], 0 ; jne 0xf2529 ; ret
0x00000000000ac573 : nop ; idiv edi ; dec dword ptr [rcx + rcx*4 - 0x21] ; call 0xe87c9
0x0000000000100f5f : nop ; jmp rax
0x00000000000fec5f : nop ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000028b3f : nop ; lea rax, qword ptr [rip + 0x100b04] ; ret
0x000000000010b74f : nop ; lea rax, qword ptr [rip + 0x1def4] ; ret
0x00000000001030df : nop ; lea rax, qword ptr [rip + 0x26564] ; ret
0x00000000000e7dbf : nop ; lea rax, qword ptr [rip + 0x41884] ; ret
0x000000000010039f : nop ; mov byte ptr [rdi + 0x68], 0 ; ret
0x00000000000e742f : nop ; mov dword ptr [rip + 0x477d92], edi ; ret
0x000000000010421f : nop ; mov eax, 0x10 ; ret
0x0000000000105fef : nop ; mov eax, 0x1b ; ret
0x00000000000fa1ff : nop ; mov eax, 0x27 ; syscall ; ret
0x00000000000f9c9f : nop ; mov eax, 0x59 ; syscall ; ret
0x00000000000f9b4f : nop ; mov eax, 0xb ; syscall ; ret
0x00000000000f9c2f : nop ; mov eax, 4 ; syscall ; ret
0x00000000000fa17f : nop ; mov eax, dword ptr [rdi] ; test eax, eax ; je 0xfa198 ; ret
0x00000000000fc9af : nop ; mov qword ptr [rip + 0x6b3a49], rdi ; ret
0x000000000010210f : nop ; mov qword ptr [rip + 0xeae771], rdi ; ret
0x00000000000fac3f : nop ; mov rax, -0x16 ; ret
0x00000000000fdcef : nop ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 8] ; ret
0x000000000001c2ff : nop ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax] ; shr eax, 8 ; ret
0x000000000010e06f : nop ; mov rax, qword ptr [rip + 0xea2b21] ; ret
0x00000000000fec6f : nop ; mov rax, qword ptr [rsp] ; ret
0x00000000000344ef : nop ; mov rax, rdx ; ret
0x00000000000fa7df : nop ; movzx eax, byte ptr [rdi + 0x18] ; ret
0x000000000010c24f : nop ; movzx eax, byte ptr [rip + 0xea4812] ; ret
0x00000000000ed7cb : nop ; or eax, 0x394c0024 ; ret 0x830f
0x00000000000ea6df : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e990f : nop ; pop rbx ; ret
0x000000000012cea0 : nop ; push 0 ; add byte ptr [rax], bh ; xor dh, al ; call rsp
0x000000000002835f : nop ; ret
0x00000000000080f8 : nop ; ret 4
0x000000000012fbe0 : nop ; sbb byte ptr [rcx], al ; add byte ptr [rax + 0x5f], ch ; sti ; call rax
0x00000000000344cf : nop ; xor eax, eax ; ret
0x00000000000313b2 : nop dword ptr [r8 + rax] ; ret
0x0000000000100feb : nop dword ptr [rax + rax] ; add rsp, 8 ; jmp rax
0x00000000001030ab : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000010111b : nop dword ptr [rax + rax] ; jmp rax
0x000000000002e29b : nop dword ptr [rax + rax] ; mov byte ptr [rdi + 0x60], 1 ; ret
0x000000000001f97b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000101f2b : nop dword ptr [rax + rax] ; mov rdi, rbp ; call rax
0x00000000001010e3 : nop dword ptr [rax + rax] ; mov rsi, r9 ; jmp rax
0x00000000001010a3 : nop dword ptr [rax + rax] ; mov rsi, rcx ; jmp rax
0x000000000001b918 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000000e4a18 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000024f28 : nop dword ptr [rax + rax] ; ret
0x0000000000031193 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000001e1bb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000005a77c : nop dword ptr [rax] ; call 0xe69f6
0x0000000000107e25 : nop dword ptr [rax] ; call rax
0x0000000000101071 : nop dword ptr [rax] ; jmp rax
0x0000000000105fdc : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000001c32d : nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; mov eax, dword ptr [rax + 0xc] ; ret
0x000000000008c564 : nop dword ptr [rax] ; mov rdi, rax ; call 0xe8789
0x0000000000101c5d : nop dword ptr [rax] ; mov rdi, rbp ; call rax
0x000000000010190d : nop dword ptr [rax] ; mov rdi, rbx ; call rax
0x0000000000101a3d : nop dword ptr [rax] ; mov rsi, r15 ; mov rdi, rbx ; call rax
0x00000000000ff755 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001b9b1 : nop dword ptr [rax] ; ret
0x0000000000029bfc : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000002e24d : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000003119c : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000df9c5 : nop dword ptr [rax] ; xor esi, esi ; call rcx
0x000000000010111a : nop word ptr [rax + rax] ; jmp rax
0x00000000000f8032 : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000001010e2 : nop word ptr [rax + rax] ; mov rsi, r9 ; jmp rax
0x000000000004afa2 : nop word ptr [rax + rax] ; ret
0x0000000000031192 : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000001ff42 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000fa5ac : not edx ; and byte ptr [rdi + rax], dl ; ret
0x0000000000143779 : or ah, bh ; call rcx
0x0000000000122845 : or ah, bh ; dec esp ; or ah, bh ; jmp rsp
0x0000000000122849 : or ah, bh ; jmp rsp
0x000000000012da15 : or ah, dh ; call rax
0x00000000001030cb : or al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000039f4d : or al, 0 ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000010e059 : or al, 0 ; jne 0x10e065 ; ret
0x0000000000028ae7 : or al, 0 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033bba : or al, 0 ; nop dword ptr [rax] ; ret
0x000000000003d527 : or al, 0 ; pop rax ; pop rdx ; jmp 0x3d4f4
0x000000000004572f : or al, 0 ; pop rax ; pop rdx ; jmp 0x456fc
0x0000000000045a3f : or al, 0 ; pop rax ; pop rdx ; jmp 0x45a0c
0x000000000001de9c : or al, 0x24 ; mov rdx, rax ; jmp 0x1de50
0x00000000000df6a7 : or al, 0x24 ; xor esi, esi ; sub rdx, rdi ; call qword ptr [r15]
0x00000000000005c1 : or al, 0x32 ; adc byte ptr [rax], spl ; ret 0x4000
0x000000000014498c : or al, 0x33 ; add dword ptr [rax], eax ; xor byte ptr [rdx - 4], al ; jmp qword ptr [rdx]
0x0000000000130218 : or al, 0x36 ; add dword ptr [rax], eax ; js 0x130262 ; cld ; jmp qword ptr [rax]
0x00000000000268cb : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000fd253 : or al, 0x48 ; add esp, 0x28 ; ret
0x00000000001025bb : or al, 0x48 ; mov dword ptr [rip + 0xeae315], edi ; ret
0x00000000000f4d80 : or al, 0x48 ; mov edi, ebp ; call rax
0x0000000000130688 : or al, 0x4b ; add dword ptr [rax], eax ; fdivr st(4) ; jmp qword ptr [rax]
0x00000000000eb84b : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002835b : or al, 0x5b ; ret
0x000000000001b963 : or al, 0x5d ; jmp rax
0x0000000000130cf0 : or al, 0x6b ; add dword ptr [rax], eax ; clc ; outsb dx, byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x0000000000033c87 : or al, 0x85 ; sal byte ptr [rbp + rdi*4 - 0x15], cl ; ret 0x9066
0x000000000012d850 : or al, 0x97 ; add byte ptr [rax], al ; js 0x12d862 ; jmp qword ptr [rax]
0x000000000012dad0 : or al, 0xa2 ; add byte ptr [rax], al ; or byte ptr [rdx - 0xc], dh ; jmp qword ptr [rax]
0x00000000001464a4 : or al, 0xd0 ; cld ; jmp qword ptr [rdi]
0x000000000012e870 : or al, 0xd8 ; add byte ptr [rax], al ; call 0x2112e130
0x000000000012fa38 : or al, 0xf ; add dword ptr [rax], eax ; mov dh, bh ; cli ; jmp qword ptr [rax]
0x000000000001d6dc : or al, 0xf ; mov dh, 5 ; ret 0x53b9
0x0000000000133e65 : or al, 0xf0 ; jmp qword ptr [rcx]
0x0000000000101ff3 : or al, 0xf3 ; ret
0x000000000012f240 : or al, 0xf4 ; add byte ptr [rax], al ; clc ; or edi, ecx ; jmp qword ptr [rax]
0x000000000012f4d0 : or al, 0xfc ; add byte ptr [rax], al ; or byte ptr [rdi], ch ; stc ; jmp qword ptr [rax]
0x0000000000122885 : or al, 0xfc ; jmp qword ptr [rax]
0x000000000012f9b9 : or al, 1 ; add byte ptr [rax - 0x15], cl ; cli ; call rax
0x000000000012f7b0 : or al, 5 ; add dword ptr [rax], eax ; push -7 ; jmp qword ptr [rax]
0x000000000013066c : or al, bl ; cld ; call rax
0x00000000000f79aa : or al, byte ptr [rax + rdi - 0x3f] ; jne 0xf79a7 ; ret
0x00000000000ed631 : or al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000032afd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f9b64 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000e11ef : or al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000117726 : or al, byte ptr [rax] ; loopne 0x11778d ; int1 ; call rax
0x0000000000055cef : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x55cbc
0x000000000005608f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5605c
0x000000000005642f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x563fc
0x00000000000567cf : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5679c
0x0000000000056b6f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x56b3c
0x0000000000056f0f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x56edc
0x00000000000572af : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5727c
0x000000000005764f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5761c
0x00000000000579ef : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x579bc
0x0000000000057d8f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x57d5c
0x000000000005812f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x580fc
0x00000000000584cf : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5849c
0x000000000005886f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5883c
0x0000000000058c0f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x58bdc
0x0000000000058faf : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x58f7c
0x000000000005934f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5931c
0x00000000000596ef : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x596bc
0x0000000000059a8f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x59a5c
0x0000000000059e2f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x59dfc
0x000000000005a1cf : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5a19c
0x000000000005a56f : or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5a53c
0x00000000000f26e7 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f2746 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001420d1 : or al, byte ptr [rcx] ; add byte ptr [rcx + rsi*4], ch ; sti ; jmp qword ptr [rdx]
0x0000000000133c55 : or al, dh ; call qword ptr [rbx]
0x0000000000133b61 : or al, dh ; jmp qword ptr [rcx]
0x00000000000d8e2d : or al, dh ; sub dword ptr [rdx], 1 ; add rsp, 8 ; ret
0x00000000001301f5 : or bh, ah ; call rsp
0x000000000012f95c : or bh, bl ; cli ; jmp qword ptr [rax]
0x000000000012fa75 : or bh, bl ; jmp rsp
0x000000000012f1c5 : or bh, cl ; jmp rax
0x000000000010f85e : or bl, al ; lea rax, qword ptr [rip + 0x19de4] ; ret
0x000000000002e24a : or bl, byte ptr [rbx - 0x3d] ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000b3e5c : or bl, ch ; wait ; nop ; ret
0x00000000000e478f : or bl, dh ; ret
0x00000000001305f4 : or bl, dl ; cld ; call qword ptr [rax]
0x00000000001001ed : or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000eabe4 : or byte ptr [r8 + 0x29], r9b ; ret 0x3948
0x000000000010bd57 : or byte ptr [r8 + 0x39], r9b ; ret
0x000000000010600b : or byte ptr [r8 - 0x75], r9b ; add al, 0xf0 ; ret
0x00000000000f11d4 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsi + rcx + 0x48], 0x83 ; ret
0x00000000000f2562 : or byte ptr [r8], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001099bd : or byte ptr [r9 - 0x76b7f7b6], cl ; insb byte ptr [rdi], dx ; ret 0x7410
0x00000000000fee26 : or byte ptr [r9 - 0x77], r8b ; ret 0x840f
0x0000000000033a74 : or byte ptr [rax + 0x29], cl ; cli ; xor esi, esi ; call qword ptr [r14]
0x0000000000032755 : or byte ptr [rax + 0x29], cl ; cli ; xor esi, esi ; call qword ptr [rax]
0x00000000000eabe5 : or byte ptr [rax + 0x29], cl ; ret 0x3948
0x000000000001bd4a : or byte ptr [rax + 0x39], cl ; ret
0x0000000000101793 : or byte ptr [rax + 0x39], cl ; ret 0x3374
0x00000000000ea0f0 : or byte ptr [rax + 0x39], cl ; ret 0xa72
0x000000000002fd36 : or byte ptr [rax + 0x39], cl ; ret 0xf475
0x000000000001b9eb : or byte ptr [rax + 0x39], cl ; sal dword ptr [rbp - 0x11], -0xd ; ret
0x00000000000f55b6 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000000803 : or byte ptr [rax + rax], al ; ret
0x00000000000fe62a : or byte ptr [rax - 0x3f], cl ; loope 0xfe657 ; or rdx, rcx ; ret
0x000000000010600c : or byte ptr [rax - 0x75], cl ; add al, 0xf0 ; ret
0x00000000000e4708 : or byte ptr [rax - 0x75], cl ; add eax, 0x479b88 ; ret
0x000000000010e55a : or byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x00000000000f0a25 : or byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000031081 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000001099c1 : or byte ptr [rax - 0x77], cl ; insb byte ptr [rdi], dx ; ret 0x7410
0x0000000000020562 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000f5f17 : or byte ptr [rax - 0x77], cl ; ret 0x10e8
0x000000000010f913 : or byte ptr [rax - 0x77], cl ; ret 0x14e8
0x0000000000031a12 : or byte ptr [rax - 0x77], cl ; ret 0x15e8
0x00000000000f6410 : or byte ptr [rax - 0x77], cl ; ret 0x17e8
0x00000000000f5b0c : or byte ptr [rax - 0x77], cl ; ret 0x1be8
0x000000000002810a : or byte ptr [rax - 0x77], cl ; ret 0x1de8
0x00000000000f6307 : or byte ptr [rax - 0x77], cl ; ret 0x20e8
0x0000000000031706 : or byte ptr [rax - 0x77], cl ; ret 0x21e8
0x00000000000f5d00 : or byte ptr [rax - 0x77], cl ; ret 0x27e8
0x00000000000f67ff : or byte ptr [rax - 0x77], cl ; ret 0x28e8
0x00000000000f61fe : or byte ptr [rax - 0x77], cl ; ret 0x29e8
0x00000000000f5dfa : or byte ptr [rax - 0x77], cl ; ret 0x2de8
0x00000000000f66f6 : or byte ptr [rax - 0x77], cl ; ret 0x31e8
0x0000000000027ef3 : or byte ptr [rax - 0x77], cl ; ret 0x34e8
0x0000000000027ff2 : or byte ptr [rax - 0x77], cl ; ret 0x35e8
0x00000000000f65ed : or byte ptr [rax - 0x77], cl ; ret 0x3ae8
0x0000000000031cea : or byte ptr [rax - 0x77], cl ; ret 0x3de8
0x0000000000027f24 : or byte ptr [rax - 0x77], cl ; ret 0x3e8
0x00000000000f60e7 : or byte ptr [rax - 0x77], cl ; ret 0x40e8
0x00000000000f5fe6 : or byte ptr [rax - 0x77], cl ; ret 0x41e8
0x00000000000f64e4 : or byte ptr [rax - 0x77], cl ; ret 0x43e8
0x0000000000031ae2 : or byte ptr [rax - 0x77], cl ; ret 0x45e8
0x00000000000f5ede : or byte ptr [rax - 0x77], cl ; ret 0x49e8
0x00000000000f63db : or byte ptr [rax - 0x77], cl ; ret 0x4ce8
0x00000000000318da : or byte ptr [rax - 0x77], cl ; ret 0x4de8
0x00000000000f6123 : or byte ptr [rax - 0x77], cl ; ret 0x4e8
0x000000000010b3d9 : or byte ptr [rax - 0x77], cl ; ret 0x4ee8
0x00000000000280d5 : or byte ptr [rax - 0x77], cl ; ret 0x52e8
0x00000000000f5bd4 : or byte ptr [rax - 0x77], cl ; ret 0x53e8
0x00000000000f62d2 : or byte ptr [rax - 0x77], cl ; ret 0x55e8
0x00000000000f5cce : or byte ptr [rax - 0x77], cl ; ret 0x59e8
0x00000000000f67ca : or byte ptr [rax - 0x77], cl ; ret 0x5de8
0x0000000000031e22 : or byte ptr [rax - 0x77], cl ; ret 0x5e8
0x00000000000f61c9 : or byte ptr [rax - 0x77], cl ; ret 0x5ee8
0x00000000000f5dc8 : or byte ptr [rax - 0x77], cl ; ret 0x5fe8
0x000000000010b5c7 : or byte ptr [rax - 0x77], cl ; ret 0x60e8
0x0000000000027ec2 : or byte ptr [rax - 0x77], cl ; ret 0x65e8
0x00000000000f66c1 : or byte ptr [rax - 0x77], cl ; ret 0x66e8
0x0000000000027fc0 : or byte ptr [rax - 0x77], cl ; ret 0x67e8
0x0000000000031dba : or byte ptr [rax - 0x77], cl ; ret 0x6de8
0x00000000000f65b8 : or byte ptr [rax - 0x77], cl ; ret 0x6fe8
0x0000000000031bb2 : or byte ptr [rax - 0x77], cl ; ret 0x75e8
0x00000000000f64af : or byte ptr [rax - 0x77], cl ; ret 0x78e8
0x00000000000f60ae : or byte ptr [rax - 0x77], cl ; ret 0x79e8
0x00000000000f5fad : or byte ptr [rax - 0x77], cl ; ret 0x7ae8
0x00000000000319aa : or byte ptr [rax - 0x77], cl ; ret 0x7de8
0x00000000000f5aa8 : or byte ptr [rax - 0x77], cl ; ret 0x7fe8
0x00000000000f63a6 : or byte ptr [rax - 0x77], cl ; ret 0x81e8
0x00000000000f5ea5 : or byte ptr [rax - 0x77], cl ; ret 0x82e8
0x00000000000317a2 : or byte ptr [rax - 0x77], cl ; ret 0x85e8
0x00000000000269e2 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f689e : or byte ptr [rax - 0x77], cl ; ret 0x89e8
0x00000000000f629d : or byte ptr [rax - 0x77], cl ; ret 0x8ae8
0x000000000002809c : or byte ptr [rax - 0x77], cl ; ret 0x8be8
0x00000000000f5d96 : or byte ptr [rax - 0x77], cl ; ret 0x91e8
0x0000000000031f95 : or byte ptr [rax - 0x77], cl ; ret 0x92e8
0x00000000000f6194 : or byte ptr [rax - 0x77], cl ; ret 0x93e8
0x000000000010b592 : or byte ptr [rax - 0x77], cl ; ret 0x95e8
0x0000000000027e91 : or byte ptr [rax - 0x77], cl ; ret 0x96e8
0x00000000000f668c : or byte ptr [rax - 0x77], cl ; ret 0x9be8
0x0000000000031e8a : or byte ptr [rax - 0x77], cl ; ret 0x9de8
0x0000000000027f86 : or byte ptr [rax - 0x77], cl ; ret 0xa1e8
0x00000000000f6583 : or byte ptr [rax - 0x77], cl ; ret 0xa4e8
0x0000000000031c82 : or byte ptr [rax - 0x77], cl ; ret 0xa5e8
0x00000000000f607c : or byte ptr [rax - 0x77], cl ; ret 0xabe8
0x00000000000f5f7b : or byte ptr [rax - 0x77], cl ; ret 0xace8
0x0000000000031a7a : or byte ptr [rax - 0x77], cl ; ret 0xade8
0x00000000000f5a76 : or byte ptr [rax - 0x77], cl ; ret 0xb1e8
0x0000000000033bef : or byte ptr [rax - 0x77], cl ; ret 0xb1eb
0x0000000000031872 : or byte ptr [rax - 0x77], cl ; ret 0xb5e8
0x00000000000f6371 : or byte ptr [rax - 0x77], cl ; ret 0xb6e8
0x00000000000f5b70 : or byte ptr [rax - 0x77], cl ; ret 0xb7e8
0x00000000000f5e6c : or byte ptr [rax - 0x77], cl ; ret 0xbbe8
0x000000000002806a : or byte ptr [rax - 0x77], cl ; ret 0xbde8
0x00000000000f6869 : or byte ptr [rax - 0x77], cl ; ret 0xbee8
0x00000000000f6268 : or byte ptr [rax - 0x77], cl ; ret 0xbfe8
0x00000000000f5d64 : or byte ptr [rax - 0x77], cl ; ret 0xc3e8
0x000000000010b561 : or byte ptr [rax - 0x77], cl ; ret 0xc6e8
0x00000000000f6760 : or byte ptr [rax - 0x77], cl ; ret 0xc7e8
0x00000000000f615f : or byte ptr [rax - 0x77], cl ; ret 0xc8e8
0x000000000010315a : or byte ptr [rax - 0x77], cl ; ret 0xcde8
0x00000000000f6657 : or byte ptr [rax - 0x77], cl ; ret 0xd0e8
0x0000000000027f55 : or byte ptr [rax - 0x77], cl ; ret 0xd2e8
0x0000000000031d52 : or byte ptr [rax - 0x77], cl ; ret 0xd5e8
0x000000000010f94f : or byte ptr [rax - 0x77], cl ; ret 0xd8e8
0x00000000000f654e : or byte ptr [rax - 0x77], cl ; ret 0xd9e8
0x0000000000031b4a : or byte ptr [rax - 0x77], cl ; ret 0xdde8
0x0000000000031c1a : or byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000f5f49 : or byte ptr [rax - 0x77], cl ; ret 0xdee8
0x00000000000f6445 : or byte ptr [rax - 0x77], cl ; ret 0xe2e8
0x0000000000031942 : or byte ptr [rax - 0x77], cl ; ret 0xe5e8
0x00000000000f5b3e : or byte ptr [rax - 0x77], cl ; ret 0xe9e8
0x00000000000f633c : or byte ptr [rax - 0x77], cl ; ret 0xebe8
0x000000000010b43b : or byte ptr [rax - 0x77], cl ; ret 0xece8
0x000000000003173a : or byte ptr [rax - 0x77], cl ; ret 0xede8
0x00000000000f6519 : or byte ptr [rax - 0x77], cl ; ret 0xee8
0x00000000000f5c38 : or byte ptr [rax - 0x77], cl ; ret 0xefe8
0x00000000000f6834 : or byte ptr [rax - 0x77], cl ; ret 0xf3e8
0x00000000000f5e33 : or byte ptr [rax - 0x77], cl ; ret 0xf4e8
0x00000000000f5d32 : or byte ptr [rax - 0x77], cl ; ret 0xf5e8
0x000000000010b530 : or byte ptr [rax - 0x77], cl ; ret 0xf7e8
0x000000000002802e : or byte ptr [rax - 0x77], cl ; ret 0xf9e8
0x0000000000031f2d : or byte ptr [rax - 0x77], cl ; ret 0xfae8
0x00000000000f672b : or byte ptr [rax - 0x77], cl ; ret 0xfce8
0x00000000000f6018 : or byte ptr [rax - 0x77], cl ; ret 0xfe8
0x0000000000032787 : or byte ptr [rax - 0x77], cl ; retf 0xf631 ; call qword ptr [rax]
0x0000000000027d13 : or byte ptr [rax - 0x77], cl ; xor byte ptr [rax + 1], bh ; ret
0x00000000000f11d5 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rcx + 0x48], 0x83 ; ret
0x00000000000fa78b : or byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000001edcd : or byte ptr [rax - 0x7d], cl ; rcl byte ptr [rax], 0x5b ; pop rbp ; ret
0x00000000000e7fe4 : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000fa767 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000130c1c : or byte ptr [rax - 3], bl ; call rax
0x000000000012f434 : or byte ptr [rax], ah ; stc ; call rax
0x00000000000fa7dc : or byte ptr [rax], al ; add byte ptr [rax + 0x1847b60f], dl ; ret
0x00000000000ed4e3 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000ed685 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8548
0x00000000000e95bf : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010b09e : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0xf7396
0x00000000000fa55a : or byte ptr [rax], al ; add byte ptr [rax], al ; mov r10, r8 ; syscall ; ret
0x00000000000f1561 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000fa237 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; ret
0x0000000000131f35 : or byte ptr [rax], al ; add byte ptr [rax], ch ; out dx, al ; out dx, al ; jmp rsp
0x00000000000659c7 : or byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x35], cl ; ret
0x000000000010e39e : or byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a405a : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x46 ; add al, 0x89 ; ret 0xe283
0x00000000000f2563 : or byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fd250 : or byte ptr [rax], al ; jne 0xfd268 ; add rsp, 0x28 ; ret
0x0000000000130914 : or byte ptr [rax], cl ; std ; call rsp
0x000000000012f2e4 : or byte ptr [rax], dl ; stc ; jmp rax
0x00000000000f45b1 : or byte ptr [rbp + 0x31], al ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000000ceee7 : or byte ptr [rbp + 0x5890147], cl ; ret
0x00000000000ea460 : or byte ptr [rbp + 0x5b0b74c0], al ; ret
0x000000000013daa8 : or byte ptr [rbp + 0xb], al ; add al, byte ptr [rdi + 0x43280e0a] ; ret
0x00000000000fae32 : or byte ptr [rbp + 2], dh ; ret
0x000000000004f874 : or byte ptr [rbp - 0x17e48b37], al ; ret 0x9a9
0x0000000000042174 : or byte ptr [rbp - 0x17e88b37], al ; ret 0xa80
0x000000000003f774 : or byte ptr [rbp - 0x17e88b37], al ; ret 0xaaa
0x000000000008b3a6 : or byte ptr [rbp], cl ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000343cc : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000033e0a : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000df0cf : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001bbc8 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b0d26 : or byte ptr [rbx + 0x7501a807], cl ; ret
0x000000000012f814 : or byte ptr [rbx - 7], ch ; call qword ptr [rax]
0x000000000013b4be : or byte ptr [rcx + 0xb], al ; add ecx, dword ptr [rax + 0x8070c02] ; ret
0x00000000001402ae : or byte ptr [rcx + 0xb], al ; ret
0x000000000013d2d3 : or byte ptr [rcx + 0xb], cl ; add edx, dword ptr [rax + 0x8070c01] ; ret
0x000000000001f497 : or byte ptr [rcx + 1], cl ; out dx, eax ; call r14
0x00000000000f472b : or byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000108547 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000010692f : or byte ptr [rcx - 0x73], cl ; jg 0x106944 ; xor ebx, ebx ; call qword ptr [r14]
0x00000000001099be : or byte ptr [rcx - 0x76b7f7b6], cl ; insb byte ptr [rdi], dx ; ret 0x7410
0x00000000000fee27 : or byte ptr [rcx - 0x77], al ; ret 0x840f
0x000000000012f8f1 : or byte ptr [rcx], al ; add byte ptr [rax], cl ; jle 0x12f8f6 ; call qword ptr [rax]
0x00000000000007fe : or byte ptr [rcx], al ; add byte ptr [rdx - 0x18], al ; or byte ptr [rax + rax], al ; ret
0x00000000001227ac : or byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x0000000000102096 : or byte ptr [rcx], ch ; ret 0x8d48
0x00000000000fff2b : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000108cd3 : or byte ptr [rdi + 0xa], dh ; xor eax, eax ; ret
0x000000000012f4d4 : or byte ptr [rdi], ch ; stc ; jmp qword ptr [rax]
0x00000000000e01f2 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000103423 : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf083
0x000000000013d9b9 : or byte ptr [rdx + 0xb], cl ; jo 0x13d9c6 ; add byte ptr [rax], al ; ret
0x000000000012dad4 : or byte ptr [rdx - 0xc], dh ; jmp qword ptr [rax]
0x000000000012d2e4 : or byte ptr [rdx - 0xf], dh ; jmp rsp
0x000000000012f794 : or byte ptr [rdx - 7], ch ; call rax
0x0000000000104eb9 : or byte ptr [rdx], al ; jne 0x104ed0 ; add rsp, 0x48 ; ret
0x000000000012f8f4 : or byte ptr [rsi - 7], bh ; call qword ptr [rax]
0x000000000012e42c : or byte ptr [rsi - 8], ah ; jmp qword ptr [rax]
0x00000000001329dd : or byte ptr [rsi], 8 ; ret
0x0000000000122884 : or byte ptr [rsp + rdi*8], cl ; jmp qword ptr [rax]
0x0000000000130915 : or ch, bh ; call rsp
0x0000000000028a95 : or cl, byte ptr [rax - 0x73] ; add eax, 0x100bae ; ret
0x00000000000ea45a : or cl, byte ptr [rax - 0x77] ; ret
0x00000000000f068f : or cl, byte ptr [rax - 0x77] ; ret 0xdb75
0x0000000000104851 : or cl, byte ptr [rax - 0x77] ; rol byte ptr [rcx + 0x5c], 1 ; ret
0x000000000001ce16 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000f9068 : or cl, byte ptr [rax - 0x7d] ; ret 0x4c01
0x000000000005521e : or cl, byte ptr [rbx] ; add byte ptr [rax + 0x5a], bl ; jmp 0x551ed
0x00000000000fc135 : or cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x000000000012ca4c : or cl, dh ; out dx, al ; call qword ptr [rax]
0x000000000013fc88 : or dh, ah ; add byte ptr [rax], al ; hlt ; mov al, 0xfa ; call qword ptr [rax]
0x0000000000033cb5 : or dh, bl ; ret
0x0000000000106f2c : or dh, byte ptr [rcx + rcx - 0xd] ; ret
0x0000000000003056 : or dh, byte ptr [rsi + 0x26] ; add eax, 0xa82345b8 ; ret 0x4e99
0x000000000012dc65 : or dh, ch ; jmp rax
0x000000000012ea5c : or dl, al ; clc ; dec dword ptr [rax + 0x180000dd] ; ret 0xfff8
0x000000000012e2e4 : or dl, al ; idiv edi ; add ch, 0 ; add al, ch ; ret 0xfff7
0x00000000000ff033 : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x00000000000e76e1 : or dword ptr [rax - 0x73], ecx ; adc byte ptr [rax + 0x39], cl ; ret
0x00000000000e87aa : or dword ptr [rax - 0x75], ecx ; sub byte ptr [r8 + 0x39], r9b ; ret 0x472
0x00000000000cefe1 : or dword ptr [rbp + rcx*4 + 0x42], ecx ; add dword ptr [rax - 0x7d], ecx ; ret 0x4902
0x0000000000141f81 : or dword ptr [rcx], eax ; add ah, bl ; stosb byte ptr [rdi], al ; sti ; jmp qword ptr [rax]
0x00000000000fcf8c : or dword ptr [rsi - 0x33], esi ; ret
0x0000000000107327 : or eax, 0x148ffff ; ret
0x00000000000e0729 : or eax, 0x35f99 ; jmp 0xe06ff
0x00000000000ed7cc : or eax, 0x394c0024 ; ret 0x830f
0x00000000000282cc : or eax, 0x48010053 ; add esp, 0x28 ; ret
0x00000000000a2a1f : or eax, 0x49e80000 ; ret 5
0x0000000000033be9 : or eax, 0x4c8b4800 ; and al, 8 ; mov rdx, rax ; jmp 0x33baf
0x000000000001ef31 : or eax, 0x58b4800 ; push rsi ; ret 0x32
0x00000000000204d1 : or eax, 0x5b5a5800 ; pop rbp ; pop r12 ; ret
0x000000000000273a : or eax, 0x6b1ecaa6 ; ret
0x0000000000028354 : or eax, 0x85000053 ; sal byte ptr [rbp + 0xc], 0x5b ; ret
0x0000000000106472 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000000e6a52 : or eax, 0x8c48348 ; ret
0x00000000000edf94 : or eax, 0x8d480004 ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x0000000000003304 : or eax, 0xb748926b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub ebp, ecx ; ret 0xe89f
0x00000000000dd0d4 : or eax, 0xc0840048 ; setne al ; ret
0x00000000001423b5 : or eax, 0xc3880001 ; sti ; call qword ptr [rsi]
0x0000000000142471 : or eax, 0xc87c0001 ; sti ; jmp qword ptr [rax]
0x0000000000107bf8 : or eax, 0xe8ef8948 ; call qword ptr [rbx]
0x00000000000f802a : or eax, 0xf175c084 ; xor eax, eax ; ret
0x000000000012f9e9 : or eax, 0xf7380001 ; cli ; call rsp
0x00000000000f7faa : or eax, 1 ; ret
0x00000000000ee861 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8548
0x000000000013d8bc : or eax, dword ptr [rax] ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000000f9b51 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000e17b3 : or eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000e3777 : or eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000045d4f : or eax, dword ptr [rax] ; pop rax ; pop rdx ; jmp 0x45d1c
0x000000000004da25 : or eax, dword ptr [rax] ; pop rax ; pop rdx ; jmp 0x4d9f3
0x0000000000054e8f : or eax, dword ptr [rax] ; pop rax ; pop rdx ; jmp 0x54e5c
0x000000000005521f : or eax, dword ptr [rax] ; pop rax ; pop rdx ; jmp 0x551ec
0x0000000000055947 : or eax, dword ptr [rax] ; pop rax ; pop rdx ; jmp 0x55914
0x000000000004643a : or eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000001329db : or eax, dword ptr [rdx] ; or byte ptr [rsi], 8 ; ret
0x0000000000133004 : or eax, dword ptr [rdx] ; ret
0x00000000000e0517 : or eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f6b66 : or ebx, esi ; ret
0x000000000001c164 : or ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000108b64 : or edi, dword ptr [rax + 1] ; ret
0x000000000012f225 : or edi, ecx ; call rax
0x000000000012f245 : or edi, ecx ; jmp qword ptr [rax]
0x000000000012f22d : or edi, ecx ; jmp rsp
0x0000000000122881 : or edi, esp ; dec dword ptr [rax] ; or al, 0xfc ; jmp qword ptr [rax]
0x00000000000fe60e : or edx, ecx ; ret
0x000000000013dbcd : or edx, edi ; jmp qword ptr [rax]
0x00000000000f0f92 : or edx, esp ; imul eax, dword ptr [rax], 0 ; je 0xf0fa8 ; ret
0x000000000013d9bb : or esi, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000001f06f : or esi, eax ; mov byte ptr [rdx + 7], sil ; ret
0x00000000000ffd24 : or esi, ebx ; ret
0x000000000013e687 : or esp, dword ptr [r15 + 0xa] ; ret
0x00000000001048a1 : or esp, dword ptr [rax - 1] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000013e688 : or esp, dword ptr [rdi + 0xa] ; ret
0x00000000001329da : or r8d, dword ptr [rdx] ; or byte ptr [rsi], 8 ; ret
0x0000000000133003 : or r8d, dword ptr [rdx] ; ret
0x00000000000fe60d : or rdx, rcx ; ret
0x000000000013d9ba : or rsi, qword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000013fc89 : out 0, al ; add ah, dh ; mov al, 0xfa ; call qword ptr [rax]
0x000000000012edd1 : out 0, eax ; add al, bh ; out dx, eax ; clc ; jmp rax
0x000000000013fe7d : out 0, eax ; add byte ptr [rax - 0x35], al ; cli ; jmp rdi
0x0000000000106f82 : out 0x2a, eax ; add al, byte ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; ret
0x000000000001f06d : out 0x3f, al ; or esi, eax ; mov byte ptr [rdx + 7], sil ; ret
0x00000000000a6ed4 : out 0x48, al ; mov edi, ebx ; call 0xe3196
0x000000000008d7b4 : out 0x48, al ; mov edi, ebx ; call rax
0x00000000000ef895 : out 0x4b, al ; add al, ch ; ret
0x00000000000f11a9 : out 0x4c, al ; mov edi, ebp ; call rax
0x000000000002e42f : out 0x4c, eax ; add edi, esi ; lea rsi, qword ptr [rdi + rbx] ; call rax
0x00000000001015dc : out 0x4c, eax ; mov esi, ebp ; mov rdi, rbp ; call r12
0x00000000000927f0 : out 0x4d, eax ; mov ebp, esp ; call rax
0x00000000000f5934 : out 0x89, eax ; ret
0x000000000005764e : out 0xa, al ; add byte ptr [rax + 0x5a], bl ; jmp 0x5761d
0x000000000003896e : out 0xe8, eax ; lodsb al, byte ptr [rsi] ; ret 0xffff
0x000000000003e057 : out 0xe8, eax ; ret
0x00000000000ad0c8 : out 0xe8, eax ; ret 0x360
0x00000000000ffa48 : out 0xe8, eax ; ret 0xff85
0x000000000012d48d : out 0xf1, al ; jmp rsp
0x00000000000fe728 : out 0xf3, eax ; ret
0x00000000000f6b17 : out 0xfb, al ; cmp sil, 9 ; sete al ; ret
0x00000000001307bd : out 0xfc, al ; call qword ptr [rax]
0x0000000000129dd9 : out 0xfd, eax ; jmp rsp
0x00000000000e5abe : out 0xff, al ; lcall ptr [rax + 0x5a] ; leave ; ret
0x00000000000e59df : out 0xff, eax ; lcall ptr [rax + 0x5a] ; leave ; ret
0x00000000000de4b1 : out 1, eax ; add cl, ch ; ret 0xfffd
0x00000000000fff4f : out 5, al ; add rax, rsi ; ret
0x0000000000034c93 : out 7, eax ; cmp edi, edx ; setl al ; ret
0x00000000000fae31 : out 8, al ; jne 0xfae3c ; ret
0x00000000000e887e : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x840f
0x0000000000140525 : out dx, al ; add byte ptr [rax], al ; clc ; adc ebx, edi ; jmp rsp
0x000000000012f039 : out dx, al ; add byte ptr [rax], al ; clc ; add al, 0xf9 ; jmp rax
0x00000000001404b5 : out dx, al ; add byte ptr [rax], al ; cmp byte ptr [rax], dl ; sti ; jmp qword ptr [rbx]
0x00000000001014dc : out dx, al ; add ebx, 1 ; call r12
0x00000000000e6f29 : out dx, al ; add ecx, dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000e628d : out dx, al ; add ecx, dword ptr [rax - 0x7f] ; ret 0x8000
0x0000000000025237 : out dx, al ; call 0x21453
0x000000000012ca4e : out dx, al ; call qword ptr [rax]
0x000000000013182a : out dx, al ; call qword ptr [rdx]
0x000000000013177a : out dx, al ; call qword ptr [rsi]
0x000000000012cad6 : out dx, al ; call rsp
0x0000000000026cd3 : out dx, al ; cmovbe rdx, rax ; mov rdi, r15 ; call rcx
0x000000000001bd45 : out dx, al ; cmp byte ptr [rax + 3], cl ; or byte ptr [rax + 0x39], cl ; ret
0x000000000012dc25 : out dx, al ; hlt ; call rax
0x000000000012cace : out dx, al ; inc eax ; add byte ptr [rax], r8b ; sbb cl, bh ; out dx, al ; call rsp
0x000000000012d495 : out dx, al ; int1 ; call qword ptr [rax]
0x00000000001316e2 : out dx, al ; jmp qword ptr [rbx]
0x0000000000132c42 : out dx, al ; jmp qword ptr [rcx]
0x000000000012ca3e : out dx, al ; jmp rax
0x0000000000131f3a : out dx, al ; jmp rsp
0x00000000000d2a35 : out dx, al ; jo 0xd2a41 ; add al, ch ; ret 0x17f
0x000000000010708b : out dx, al ; mov rdi, r15 ; call rax
0x0000000000077ec3 : out dx, al ; mov rdi, rax ; call 0xe4196
0x00000000001015df : out dx, al ; mov rdi, rbp ; call r12
0x000000000010a748 : out dx, al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000108b27 : out dx, al ; mov rdi, rbx ; call rax
0x0000000000101882 : out dx, al ; mov rdi, rbx ; call rdx
0x0000000000131f39 : out dx, al ; out dx, al ; jmp rsp
0x000000000012ca36 : out dx, al ; push qword ptr [rax + 0x4c] ; add byte ptr [rax], al ; fsubr st(7) ; out dx, al ; jmp rax
0x000000000012ca46 : out dx, al ; push rsp ; add byte ptr [rax], r8b ; or cl, dh ; out dx, al ; call qword ptr [rax]
0x00000000000e7621 : out dx, al ; ret
0x00000000001311fd : out dx, al ; std ; call rsp
0x0000000000122611 : out dx, al ; sti ; call qword ptr [rax]
0x000000000012260d : out dx, al ; sti ; dec eax ; out dx, al ; sti ; call qword ptr [rax]
0x0000000000030e38 : out dx, al ; xor edx, edx ; call 0xdd0e5
0x000000000012f0a1 : out dx, eax ; add byte ptr [rax], al ; call 0xffffffffe512e9b4
0x0000000000059a8b : out dx, eax ; call 0x105cc3
0x000000000001f954 : out dx, eax ; call 0x1bb63
0x0000000000114b08 : out dx, eax ; call qword ptr [r12 + rbx*8]
0x000000000002695c : out dx, eax ; call qword ptr [rax]
0x00000000001015e2 : out dx, eax ; call r12
0x000000000001f49a : out dx, eax ; call r14
0x00000000000f11ac : out dx, eax ; call rax
0x00000000000f4d6d : out dx, eax ; call rdx
0x000000000012cbfe : out dx, eax ; call rsp
0x000000000012edd5 : out dx, eax ; clc ; jmp rax
0x00000000000fcfc5 : out dx, eax ; cmp dil, 5 ; setbe al ; ret
0x000000000000260a : out dx, eax ; cwde ; stosd dword ptr [rdi], eax ; wait ; ret
0x000000000012cbf6 : out dx, eax ; dec dword ptr [rax + 0x58000055] ; out dx, eax ; call rsp
0x00000000001333c2 : out dx, eax ; dec dword ptr [rbx + 1] ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x100e
0x000000000012dc2d : out dx, eax ; hlt ; jmp rsp
0x00000000000567cd : out dx, eax ; hlt ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5679e
0x000000000012814c : out dx, eax ; jae 0x12814f ; jmp rsi
0x000000000012cbd6 : out dx, eax ; jmp qword ptr [rax]
0x000000000012ccf6 : out dx, eax ; jmp rax
0x0000000000133032 : out dx, eax ; jmp rcx
0x000000000013253e : out dx, eax ; jmp rsi
0x000000000012ccae : out dx, eax ; jmp rsp
0x000000000013341e : out dx, eax ; lcall ptr [rbx + 1] ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x100e
0x000000000012cb56 : out dx, eax ; lcall ptr [rcx + rdx*2 + 0x1e680000] ; out dx, eax ; call rax
0x000000000012cd16 : out dx, eax ; ljmp ptr [rsi + rbx*2 - 0x35780000] ; out dx, eax ; call rax
0x00000000000f7e80 : out dx, eax ; mov byte ptr [rax + rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005a1cd : out dx, eax ; mov edx, 0x5a58000a ; jmp 0x5a19e
0x00000000000f3e5f : out dx, eax ; mov spl, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000012ca3d : out dx, eax ; out dx, al ; jmp rax
0x00000000000f8330 : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f7540 : out dx, eax ; pop rbx ; ret
0x000000000001b9f0 : out dx, eax ; ret
0x00000000000cd8c1 : out dx, eax ; ret 0x48
0x00000000000d332d : out dx, eax ; ret 0xfffa
0x0000000000122621 : out dx, eax ; sti ; jmp rax
0x000000000012261d : out dx, eax ; sti ; lcall ptr [rax - 0x11] ; sti ; jmp rax
0x0000000000001f78 : out dx, eax ; sub byte ptr [rbp + 0x2c], cl ; ret 0xda
0x00000000000584cd : out dx, eax ; xlatb ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5849e
0x00000000000e7b95 : out dx, eax ; xor esi, esi ; call rax
0x000000000001d85e : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000130cf5 : outsb dx, byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x0000000000130cdd : outsb dx, byte ptr [rsi] ; std ; jmp rsp
0x00000000000bb640 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; cmp eax, dword ptr [rax] ; je 0xbb661 ; pop rbx ; ret
0x0000000000045d4d : outsd dx, dword ptr [rsi] ; dec dword ptr [rbx] ; add byte ptr [rax + 0x5a], bl ; jmp 0x45d1e
0x000000000005934d : outsd dx, dword ptr [rsi] ; leave ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5931e
0x000000000005764d : outsd dx, dword ptr [rsi] ; out 0xa, al ; add byte ptr [rax + 0x5a], bl ; jmp 0x5761e
0x00000000000b28fd : outsd dx, dword ptr [rsi] ; ret
0x00000000000f9352 : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000000e71ad : outsd dx, dword ptr [rsi] ; ret 3
0x0000000000130d55 : outsd dx, dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000130d3d : outsd dx, dword ptr [rsi] ; std ; call rsp
0x000000000012fc05 : outsd dx, dword ptr [rsi] ; sti ; jmp rax
0x00000000000fd03b : pcmpeqd mm1, mm6 ; ret
0x00000000000572ad : pminsw mm1, qword ptr [rdx] ; add byte ptr [rax + 0x5a], bl ; jmp 0x5727e
0x000000000004572d : pop qword ptr [rip + 0x5a58000c] ; jmp 0x456fe
0x00000000000dbef1 : pop r10 ; jmp 0xdbe06
0x000000000006bd1c : pop r10 ; pop r11 ; mov rdi, r12 ; call 0xe7f59
0x000000000006bd1e : pop r11 ; mov rdi, r12 ; call 0xe7f57
0x00000000000dd383 : pop r12 ; pop r13 ; jmp rax
0x00000000000dd2ef : pop r12 ; pop r13 ; jmp rcx
0x00000000000f71d3 : pop r12 ; pop r13 ; pop r14 ; mov rax, qword ptr [rax] ; jmp rax
0x000000000001ff38 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001c83c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dedd6 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000002366c : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000debd0 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000217ba : pop r12 ; pop r13 ; ret
0x00000000000312dd : pop r12 ; pop r13 ; sub rdx, rdi ; jmp rax
0x00000000000e47e5 : pop r12 ; pop rbp ; ret
0x000000000001c61a : pop r12 ; ret
0x00000000001071e2 : pop r12 ; sbb rax, -1 ; ret
0x00000000000dd385 : pop r13 ; jmp rax
0x00000000000dd2f1 : pop r13 ; jmp rcx
0x00000000000f71d5 : pop r13 ; pop r14 ; mov rax, qword ptr [rax] ; jmp rax
0x000000000001ff3a : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001c83e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dedd8 : pop r13 ; pop r14 ; pop rbp ; ret
0x000000000002366e : pop r13 ; pop r14 ; ret
0x00000000000debd2 : pop r13 ; pop rbp ; ret
0x00000000000217bc : pop r13 ; ret
0x00000000000312df : pop r13 ; sub rdx, rdi ; jmp rax
0x00000000000f71d7 : pop r14 ; mov rax, qword ptr [rax] ; jmp rax
0x000000000001ff3c : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001c840 : pop r14 ; pop r15 ; ret
0x00000000000dedda : pop r14 ; pop rbp ; ret
0x0000000000023670 : pop r14 ; ret
0x000000000001ff3e : pop r15 ; pop rbp ; ret
0x000000000001c842 : pop r15 ; ret
0x00000000000e8931 : pop r8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000002678 : pop r9 ; xchg edi, edi ; ret 0xaf0a
0x00000000001459d8 : pop rax ; add dword ptr [r8], eax ; mov ah, 0x9f ; cld ; jmp rdi
0x0000000000130979 : pop rax ; add dword ptr [rax], eax ; js 0x13099b ; std ; jmp rsp
0x00000000000e8932 : pop rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000001c10e : pop rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000137f79 : pop rax ; cmc ; call rdx
0x00000000000f59a5 : pop rax ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000659c6 : pop rax ; or byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x35], cl ; ret
0x00000000000a4059 : pop rax ; or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x46 ; add al, 0x89 ; ret 0xe283
0x00000000001307bc : pop rax ; out 0xfc, al ; call qword ptr [rax]
0x000000000012cbfc : pop rax ; out dx, eax ; call rsp
0x0000000000122620 : pop rax ; out dx, eax ; sti ; jmp rax
0x0000000000130cdc : pop rax ; outsb dx, byte ptr [rsi] ; std ; jmp rsp
0x0000000000130344 : pop rax ; pop rbp ; cld ; call rax
0x000000000002a1e2 : pop rax ; pop rbx ; pop rbp ; ret
0x00000000000fac29 : pop rax ; pop rdi ; call rax
0x000000000003d529 : pop rax ; pop rdx ; jmp 0x3d4f2
0x0000000000045731 : pop rax ; pop rdx ; jmp 0x456fa
0x0000000000045a41 : pop rax ; pop rdx ; jmp 0x45a0a
0x0000000000045d51 : pop rax ; pop rdx ; jmp 0x45d1a
0x000000000004da27 : pop rax ; pop rdx ; jmp 0x4d9f1
0x0000000000054e91 : pop rax ; pop rdx ; jmp 0x54e5a
0x0000000000055221 : pop rax ; pop rdx ; jmp 0x551ea
0x0000000000055949 : pop rax ; pop rdx ; jmp 0x55912
0x0000000000055cf1 : pop rax ; pop rdx ; jmp 0x55cba
0x0000000000056091 : pop rax ; pop rdx ; jmp 0x5605a
0x0000000000056431 : pop rax ; pop rdx ; jmp 0x563fa
0x00000000000567d1 : pop rax ; pop rdx ; jmp 0x5679a
0x0000000000056b71 : pop rax ; pop rdx ; jmp 0x56b3a
0x0000000000056f11 : pop rax ; pop rdx ; jmp 0x56eda
0x00000000000572b1 : pop rax ; pop rdx ; jmp 0x5727a
0x0000000000057651 : pop rax ; pop rdx ; jmp 0x5761a
0x00000000000579f1 : pop rax ; pop rdx ; jmp 0x579ba
0x0000000000057d91 : pop rax ; pop rdx ; jmp 0x57d5a
0x0000000000058131 : pop rax ; pop rdx ; jmp 0x580fa
0x00000000000584d1 : pop rax ; pop rdx ; jmp 0x5849a
0x0000000000058871 : pop rax ; pop rdx ; jmp 0x5883a
0x0000000000058c11 : pop rax ; pop rdx ; jmp 0x58bda
0x0000000000058fb1 : pop rax ; pop rdx ; jmp 0x58f7a
0x0000000000059351 : pop rax ; pop rdx ; jmp 0x5931a
0x00000000000596f1 : pop rax ; pop rdx ; jmp 0x596ba
0x0000000000059a91 : pop rax ; pop rdx ; jmp 0x59a5a
0x0000000000059e31 : pop rax ; pop rdx ; jmp 0x59dfa
0x000000000005a1d1 : pop rax ; pop rdx ; jmp 0x5a19a
0x000000000005a571 : pop rax ; pop rdx ; jmp 0x5a53a
0x0000000000089c89 : pop rax ; pop rdx ; jmp 0x89c52
0x000000000008a0c9 : pop rax ; pop rdx ; jmp 0x8a092
0x000000000008a509 : pop rax ; pop rdx ; jmp 0x8a4d2
0x00000000000e45f0 : pop rax ; pop rdx ; leave ; ret
0x00000000000204d3 : pop rax ; pop rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000002944 : pop rax ; ret
0x000000000012ea84 : pop rax ; ret 0xfff8
0x00000000000d4d54 : pop rax ; ret 4
0x0000000000130c1d : pop rax ; std ; call rax
0x0000000000133ed8 : pop rax ; sub byte ptr [rax], al ; add ah, al ; or al, 0xf0 ; jmp qword ptr [rcx]
0x00000000000e47a9 : pop rax ; test eax, eax ; jne 0xe47b6 ; ret
0x00000000000e47a8 : pop rax ; test eax, eax ; jne 0xe47b7 ; ret
0x00000000000e47f9 : pop rax ; test eax, eax ; jne 0xe4806 ; ret
0x00000000000e47f8 : pop rax ; test eax, eax ; jne 0xe4807 ; ret
0x00000000000395ea : pop rbp ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; call rax
0x0000000000130a51 : pop rbp ; add dword ptr [rax], eax ; fdiv dword ptr [rdi] ; std ; call qword ptr [rax]
0x00000000000fac3b : pop rbp ; clc ; leave ; ret
0x0000000000130345 : pop rbp ; cld ; call rax
0x000000000001b913 : pop rbp ; jmp rax
0x00000000000dd2f2 : pop rbp ; jmp rcx
0x00000000000eabf3 : pop rbp ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000dd382 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000dd2ee : pop rbp ; pop r12 ; pop r13 ; jmp rcx
0x000000000001c83b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002366b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000217b9 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000312dc : pop rbp ; pop r12 ; pop r13 ; sub rdx, rdi ; jmp rax
0x000000000001c619 : pop rbp ; pop r12 ; ret
0x00000000001071e1 : pop rbp ; pop r12 ; sbb rax, -1 ; ret
0x00000000000f71d6 : pop rbp ; pop r14 ; mov rax, qword ptr [rax] ; jmp rax
0x000000000001ff3b : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001c83f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dedd9 : pop rbp ; pop r14 ; pop rbp ; ret
0x000000000002366f : pop rbp ; pop r14 ; ret
0x00000000000debd3 : pop rbp ; pop rbp ; ret
0x000000000001b920 : pop rbp ; ret
0x000000000002a507 : pop rbp ; ret 0xe
0x00000000000312e0 : pop rbp ; sub rdx, rdi ; jmp rax
0x00000000001090ed : pop rbp ; xor edx, edx ; jmp rax
0x0000000000130a01 : pop rbx ; add dword ptr [rax], eax ; cwde ; std ; jmp rax
0x00000000000f9db8 : pop rbx ; add rax, rdx ; ret
0x000000000012dd25 : pop rbx ; cmc ; call qword ptr [rax]
0x00000000000f08fd : pop rbx ; cmovne rax, rdi ; ret
0x00000000001099d0 : pop rbx ; mov eax, 4 ; pop rbp ; pop r12 ; ret
0x0000000000105fc9 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000faa98 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000003432a : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000003435a : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000003438a : pop rbx ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x0000000000034433 : pop rbx ; mov rax, qword ptr [rax - 0x40] ; jmp rax
0x0000000000034483 : pop rbx ; mov rax, qword ptr [rax - 0x50] ; jmp rax
0x000000000006bd1f : pop rbx ; mov rdi, r12 ; call 0xe7f56
0x00000000001063c7 : pop rbx ; neg eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e0516 : pop rbx ; or eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dedd5 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000debcf : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000e47e4 : pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001145dc : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000000343cd : pop rbx ; pop rbp ; jmp rax
0x00000000000dd381 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000dd2ed : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rcx
0x000000000002366a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000217b8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001c618 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001bb3f : pop rbx ; pop rbp ; ret
0x00000000001090ec : pop rbx ; pop rbp ; xor edx, edx ; jmp rax
0x000000000001c0b7 : pop rbx ; ret
0x0000000000001fcc : pop rbx ; ret 0x2a63
0x00000000000fb8a4 : pop rbx ; xor eax, 1 ; ret
0x00000000000348d0 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010f733 : pop rcx ; adc eax, 0xc4e800ea ; ret
0x00000000000bfd12 : pop rcx ; pop rsi ; jmp 0xbfcdc
0x0000000000002679 : pop rcx ; xchg edi, edi ; ret 0xaf0a
0x00000000000bfd0f : pop rdi ; add al, 0 ; pop rcx ; pop rsi ; jmp 0xbfcdf
0x00000000000e072b : pop rdi ; add eax, dword ptr [rax] ; jmp 0xe06fd
0x00000000000fac2a : pop rdi ; call rax
0x000000000011321d : pop rdi ; enter -1, 0x48 ; add esp, 0x20 ; leave ; ret
0x0000000000033b32 : pop rdi ; je 0x33b46 ; mov rax, rdi ; ret
0x0000000000046d49 : pop rdi ; or eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000001ff3f : pop rdi ; pop rbp ; ret
0x000000000001c843 : pop rdi ; ret
0x0000000000140b59 : pop rdi ; sti ; call qword ptr [rdi]
0x000000000012fbe5 : pop rdi ; sti ; call rax
0x00000000000b252a : pop rdx ; add al, 0 ; nop dword ptr [rax] ; ret
0x000000000003d52a : pop rdx ; jmp 0x3d4f1
0x0000000000045732 : pop rdx ; jmp 0x456f9
0x0000000000045a42 : pop rdx ; jmp 0x45a09
0x0000000000045d52 : pop rdx ; jmp 0x45d19
0x000000000004da28 : pop rdx ; jmp 0x4d9f0
0x0000000000054e92 : pop rdx ; jmp 0x54e59
0x0000000000055222 : pop rdx ; jmp 0x551e9
0x000000000005594a : pop rdx ; jmp 0x55911
0x0000000000055cf2 : pop rdx ; jmp 0x55cb9
0x0000000000056092 : pop rdx ; jmp 0x56059
0x0000000000056432 : pop rdx ; jmp 0x563f9
0x00000000000567d2 : pop rdx ; jmp 0x56799
0x0000000000056b72 : pop rdx ; jmp 0x56b39
0x0000000000056f12 : pop rdx ; jmp 0x56ed9
0x00000000000572b2 : pop rdx ; jmp 0x57279
0x0000000000057652 : pop rdx ; jmp 0x57619
0x00000000000579f2 : pop rdx ; jmp 0x579b9
0x0000000000057d92 : pop rdx ; jmp 0x57d59
0x0000000000058132 : pop rdx ; jmp 0x580f9
0x00000000000584d2 : pop rdx ; jmp 0x58499
0x0000000000058872 : pop rdx ; jmp 0x58839
0x0000000000058c12 : pop rdx ; jmp 0x58bd9
0x0000000000058fb2 : pop rdx ; jmp 0x58f79
0x0000000000059352 : pop rdx ; jmp 0x59319
0x00000000000596f2 : pop rdx ; jmp 0x596b9
0x0000000000059a92 : pop rdx ; jmp 0x59a59
0x0000000000059e32 : pop rdx ; jmp 0x59df9
0x000000000005a1d2 : pop rdx ; jmp 0x5a199
0x000000000005a572 : pop rdx ; jmp 0x5a539
0x0000000000089c8a : pop rdx ; jmp 0x89c51
0x000000000008a0ca : pop rdx ; jmp 0x8a091
0x000000000008a50a : pop rdx ; jmp 0x8a4d1
0x00000000000dbef2 : pop rdx ; jmp 0xdbe05
0x00000000000e5db9 : pop rdx ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000e45f1 : pop rdx ; leave ; ret
0x000000000006bd1d : pop rdx ; pop r11 ; mov rdi, r12 ; call 0xe7f58
0x00000000000e070f : pop rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000204d4 : pop rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000143426 : pop rdx ; ret
0x00000000000029ff : pop rdx ; ret 0x793b
0x0000000000002d23 : pop rdx ; ret 0xc910
0x000000000007c522 : pop rdx ; ret 6
0x000000000012cd19 : pop rsi ; add byte ptr [rax], al ; mov dl, cl ; out dx, eax ; call rax
0x0000000000117729 : pop rsi ; int1 ; call rax
0x00000000000bfd13 : pop rsi ; jmp 0xbfcdb
0x00000000000f71d8 : pop rsi ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000003303 : pop rsi ; or eax, 0xb748926b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub ebp, ecx ; ret 0xe89f
0x0000000000046de9 : pop rsi ; or eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000e5b2e : pop rsi ; out 0xff, al ; lcall ptr [rax + 0x5a] ; leave ; ret
0x0000000000002608 : pop rsi ; out dx, eax ; cwde ; stosd dword ptr [rdi], eax ; wait ; ret
0x000000000001ff3d : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000001c841 : pop rsi ; pop r15 ; ret
0x0000000000002943 : pop rsi ; pop rax ; ret
0x00000000000deddb : pop rsi ; pop rbp ; ret
0x0000000000023671 : pop rsi ; ret
0x00000000000facaa : pop rsp ; add byte ptr [rdx + 2], bh ; cmove eax, edx ; ret
0x00000000000e07f4 : pop rsp ; add eax, dword ptr [rax] ; jmp 0xe07bf
0x00000000001464dc : pop rsp ; add qword ptr [rax], r8 ; sar spl, 1 ; jmp qword ptr [rdi]
0x0000000000020e59 : pop rsp ; and al, 0x20 ; call 0xdd0e5
0x00000000001463f4 : pop rsp ; iretd ; cld ; jmp qword ptr [rdi]
0x00000000000dd384 : pop rsp ; pop r13 ; jmp rax
0x00000000000dd2f0 : pop rsp ; pop r13 ; jmp rcx
0x00000000000f71d4 : pop rsp ; pop r13 ; pop r14 ; mov rax, qword ptr [rax] ; jmp rax
0x000000000001ff39 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001c83d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dedd7 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000002366d : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000debd1 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000217bb : pop rsp ; pop r13 ; ret
0x00000000000312de : pop rsp ; pop r13 ; sub rdx, rdi ; jmp rax
0x00000000000e47e6 : pop rsp ; pop rbp ; ret
0x000000000001c61b : pop rsp ; ret
0x0000000000002f31 : pop rsp ; ret 0x44c0
0x000000000013e0dc : pop rsp ; retf 0 ; push rax ; sub bh, dl ; call qword ptr [rsi]
0x0000000000142524 : pop rsp ; sar bl, 1 ; call qword ptr [rsi]
0x00000000001071e3 : pop rsp ; sbb rax, -1 ; ret
0x0000000000130c55 : pop rsp ; std ; call rax
0x00000000000abd38 : popfq ; add byte ptr [rax], al ; add al, ch ; jmp rsp
0x000000000010f864 : popfq ; add dword ptr [rax], eax ; ret
0x00000000000b3ddf : popfq ; jg 0xb3e35 ; add byte ptr [rax + 0x3875003a], al ; call rax
0x000000000001f75f : popfq ; ret
0x0000000000002433 : psubw mm6, mm1 ; mov edi, 0xe7db3878 ; ret
0x00000000001141f4 : push -0x17fffe7d ; ret
0x0000000000046439 : push -0x3fcefff5 ; add rsp, 8 ; ret
0x000000000001f75a : push -0x44 ; push rdx ; add al, ch ; popfq ; ret
0x0000000000109a2d : push -0x7d ; ret 0x4801
0x000000000012f795 : push -7 ; call rax
0x000000000012f7fd : push -7 ; call rsp
0x000000000012f7b5 : push -7 ; jmp qword ptr [rax]
0x000000000012f79d : push -7 ; jmp rsp
0x000000000012cea1 : push 0 ; add byte ptr [rax], bh ; xor dh, al ; call rsp
0x0000000000104965 : push 0 ; cmp byte ptr [rax + 0x31], 0 ; jne 0x104979 ; ret
0x000000000010b2c5 : push 0 ; cmp byte ptr [rax + 0x39], 0 ; jne 0x10b2d8 ; ret
0x000000000010b7b2 : push 0 ; cmp byte ptr [rax + 0x39], 0 ; jne 0x10b7c9 ; pop rbx ; ret
0x000000000010d825 : push 0 ; cmp byte ptr [rax + 0x39], 0 ; jne 0x10d839 ; ret
0x000000000010dc45 : push 0 ; cmp byte ptr [rax + 0x39], 0 ; jne 0x10dc59 ; ret
0x000000000012e25c : push 0x20fff793 ; ret
0x0000000000137f31 : push 0x57ec0000 ; cmc ; call rdx
0x0000000000137f75 : push 0x58880000 ; cmc ; call rdx
0x00000000000e5624 : push 0x58ffffeb ; pop rdx ; leave ; ret
0x000000000002c88d : push 0x5c415d5b ; pop r13 ; ret
0x000000000002f913 : push 0x70518948 ; mov qword ptr [rcx + 0x78], rdx ; ret
0x0000000000130cd9 : push 1 ; add byte ptr [rax + 0x6e], bl ; std ; jmp rsp
0x00000000000d6250 : push 2 ; add cl, ch ; ret 0xffff
0x00000000000f8769 : push qword ptr [r13 - 0x1d] ; mov byte ptr [r10], 0 ; ret
0x000000000013013f : push qword ptr [rax + 0x30] ; add dword ptr [rax], eax ; cmp bh, bl ; sti ; jmp rsp
0x00000000001301d7 : push qword ptr [rax + 0x33] ; add dword ptr [rax], eax ; sbb dl, dh ; sti ; call rsp
0x000000000012ea6f : push qword ptr [rax + 0x380000dd] ; ret 0xfff8
0x000000000012eac7 : push qword ptr [rax + 0x380000de] ; ret
0x000000000010165d : push qword ptr [rax + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ca37 : push qword ptr [rax + 0x4c] ; add byte ptr [rax], al ; fsubr st(7) ; out dx, al ; jmp rax
0x000000000013090f : push qword ptr [rax + 0x8000156] ; or ch, bh ; call rsp
0x0000000000122843 : push qword ptr [rax + rcx + 0x8ccfffc] ; cld ; jmp rsp
0x0000000000122933 : push qword ptr [rax - 0x370003ed] ; adc edi, esp ; jmp rax
0x0000000000122707 : push qword ptr [rax - 0x37000407] ; stc ; sti ; jmp rax
0x000000000012267b : push qword ptr [rax - 0x3700040e] ; sti ; jmp rax
0x000000000012260b : push qword ptr [rax - 0x37000412] ; out dx, al ; sti ; call qword ptr [rax]
0x000000000012dc5f : push qword ptr [rax - 0x47ffff58] ; or dh, ch ; jmp rax
0x000000000013142f : push qword ptr [rax - 0x6a] ; add dword ptr [rax], eax ; fcom dword ptr [rdi - 2] ; jmp rsp
0x00000000001311f7 : push qword ptr [rax - 0x77fffe7b] ; out dx, al ; std ; call rsp
0x00000000001230a7 : push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x00000000001230e7 : push qword ptr [rax] ; xor eax, 0x3520fffc ; cld ; call qword ptr [rax]
0x0000000000104da1 : push qword ptr [rbp + 0x2c] ; add rsp, 0x28 ; ret
0x0000000000100777 : push qword ptr [rbp + 0x3e] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdd76 : push qword ptr [rbp + 7] ; xor eax, eax ; ret
0x00000000000faea5 : push qword ptr [rbp + 8] ; xor eax, eax ; ret
0x000000000012d46f : push qword ptr [rbp + rax*4 - 0x24180000] ; int1 ; call qword ptr [rax]
0x000000000012ea57 : push qword ptr [rbp + rbx*8] ; add byte ptr [rax], cl ; ret 0xfff8
0x0000000000116e8b : push qword ptr [rbp + rdx*2 + 0x5520fff1] ; int1 ; call qword ptr [rax]
0x00000000000f7806 : push qword ptr [rbp - 0x11] ; ret
0x00000000000f167b : push qword ptr [rbp - 0x16] ; ret
0x00000000000f876a : push qword ptr [rbp - 0x1d] ; mov byte ptr [r10], 0 ; ret
0x0000000000104cba : push qword ptr [rbx + rbp + 0x48] ; add esp, 0x28 ; ret
0x0000000000067b75 : push qword ptr [rbx + rbx - 0x18] ; ret
0x00000000000ddc76 : push qword ptr [rbx + rbx - 0x18] ; ret 0xc5
0x00000000001309ff : push qword ptr [rbx + rbx*2 + 0x2e980001] ; std ; jmp rax
0x000000000001c162 : push qword ptr [rbx + rcx + 0x48] ; mov eax, edi ; ret
0x0000000000108bb5 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000130c4f : push qword ptr [rdi + 0x5c280001] ; std ; call rax
0x00000000000f9bbf : push qword ptr [rdi - 0x12] ; ret
0x00000000000f9d22 : push qword ptr [rsp + rax - 0x75] ; and al, 0xe8 ; ret
0x000000000012d25f : push qword ptr [rsp + rdi*2 + 0x39b80000] ; int1 ; jmp rsp
0x0000000000116e87 : push qword ptr [rsp + rdx*2 + 0x55b4fff1] ; int1 ; jmp qword ptr [rax]
0x0000000000099a0a : push r12 ; push rax ; call 0x105cc5
0x0000000000069a70 : push r13 ; push rax ; call 0x105cc5
0x00000000000599dc : push r14 ; push rax ; call 0x105cc5
0x000000000010cc78 : push rax ; adc byte ptr [rbp + 0x39], cl ; push rcx ; adc byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x000000000010cd4b : push rax ; adc byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x00000000001227a7 : push rax ; add ah, bh ; dec dword ptr [rax] ; add esp, edi ; jmp qword ptr [rax]
0x00000000000e41e5 : push rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001466fd : push rax ; add dword ptr [rax], eax ; adc dl, 0xfc ; call rdi
0x00000000000599de : push rax ; call 0x105cc3
0x0000000000020721 : push rax ; dec dword ptr [rax + 0x21] ; ret 0x8948
0x00000000000e6f25 : push rax ; dec dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000fbd07 : push rax ; dec dword ptr [rax - 0x77] ; add byte ptr [r8 - 0x7b], r9b ; ret 0x840f
0x00000000001040ba : push rax ; dec dword ptr [rax - 0x7b] ; ret 0x2f75
0x000000000001c44b : push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x0000000000033a35 : push rax ; dec dword ptr [rcx - 0x7b] ; ret 0x850f
0x00000000001431d0 : push rax ; hlt ; sti ; call rsi
0x0000000000033c86 : push rax ; or al, 0x85 ; sal byte ptr [rbp + rdi*4 - 0x15], cl ; ret 0x9066
0x00000000001420d0 : push rax ; or al, byte ptr [rcx] ; add byte ptr [rcx + rsi*4], ch ; sti ; jmp qword ptr [rdx]
0x00000000000f5f16 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x10e8
0x000000000010f912 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x14e8
0x0000000000031a11 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x15e8
0x00000000000f640f : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x17e8
0x00000000000f5b0b : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x1be8
0x0000000000028109 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x1de8
0x00000000000f6306 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x20e8
0x0000000000031705 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x21e8
0x00000000000f5cff : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x27e8
0x00000000000f67fe : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x28e8
0x00000000000f61fd : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x29e8
0x00000000000f5df9 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x2de8
0x00000000000f66f5 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x31e8
0x0000000000027ef2 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x34e8
0x0000000000027ff1 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x35e8
0x00000000000f65ec : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x3ae8
0x0000000000031ce9 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x3de8
0x0000000000027f23 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x3e8
0x00000000000f60e6 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x40e8
0x00000000000f5fe5 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x41e8
0x00000000000f64e3 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x43e8
0x0000000000031ae1 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x45e8
0x00000000000f5edd : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x49e8
0x00000000000f63da : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x4ce8
0x00000000000318d9 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x4de8
0x00000000000f6122 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x4e8
0x000000000010b3d8 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x4ee8
0x00000000000280d4 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x52e8
0x00000000000f5bd3 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x53e8
0x00000000000f62d1 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x55e8
0x00000000000f5ccd : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x59e8
0x00000000000f67c9 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x5de8
0x0000000000031e21 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x5e8
0x00000000000f61c8 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x5ee8
0x00000000000f5dc7 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x5fe8
0x000000000010b5c6 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x60e8
0x0000000000027ec1 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x65e8
0x00000000000f66c0 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x66e8
0x0000000000027fbf : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x67e8
0x0000000000031db9 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x6de8
0x00000000000f65b7 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x6fe8
0x0000000000031bb1 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x75e8
0x00000000000f64ae : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x78e8
0x00000000000f60ad : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x79e8
0x00000000000f5fac : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x7ae8
0x00000000000319a9 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x7de8
0x00000000000f5aa7 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x7fe8
0x00000000000f63a5 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x81e8
0x00000000000f5ea4 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x82e8
0x00000000000317a1 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x85e8
0x00000000000f689d : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x89e8
0x00000000000f629c : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x8ae8
0x000000000002809b : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x8be8
0x00000000000f5d95 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x91e8
0x0000000000031f94 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x92e8
0x00000000000f6193 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x93e8
0x000000000010b591 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x95e8
0x0000000000027e90 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x96e8
0x00000000000f668b : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x9be8
0x0000000000031e89 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0x9de8
0x0000000000027f85 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xa1e8
0x00000000000f6582 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xa4e8
0x0000000000031c81 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xa5e8
0x00000000000f607b : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xabe8
0x00000000000f5f7a : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xace8
0x0000000000031a79 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xade8
0x00000000000f5a75 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xb1e8
0x0000000000031871 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xb5e8
0x00000000000f6370 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xb6e8
0x00000000000f5b6f : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xb7e8
0x00000000000f5e6b : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xbbe8
0x0000000000028069 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xbde8
0x00000000000f6868 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xbee8
0x00000000000f6267 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xbfe8
0x00000000000f5d63 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xc3e8
0x000000000010b560 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xc6e8
0x00000000000f675f : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xc7e8
0x00000000000f615e : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xc8e8
0x0000000000103159 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xcde8
0x00000000000f6656 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xd0e8
0x0000000000027f54 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xd2e8
0x0000000000031d51 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xd5e8
0x000000000010f94e : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xd8e8
0x00000000000f654d : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xd9e8
0x0000000000031b49 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xdde8
0x0000000000031c19 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000f5f48 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xdee8
0x00000000000f6444 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xe2e8
0x0000000000031941 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xe5e8
0x00000000000f5b3d : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xe9e8
0x00000000000f633b : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xebe8
0x000000000010b43a : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xece8
0x0000000000031739 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xede8
0x00000000000f6518 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xee8
0x00000000000f5c37 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xefe8
0x00000000000f6833 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xf3e8
0x00000000000f5e32 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xf4e8
0x00000000000f5d31 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xf5e8
0x000000000010b52f : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xf7e8
0x000000000002802d : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xf9e8
0x0000000000031f2c : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xfae8
0x00000000000f672a : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xfce8
0x00000000000f6017 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xfe8
0x000000000010e39d : push rax ; or byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012287f : push rax ; or edi, esp ; dec dword ptr [rax] ; or al, 0xfc ; jmp qword ptr [rax]
0x00000000000fa6b0 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000006628 : push rax ; ret
0x000000000012e257 : push rax ; ret 0
0x0000000000142330 : push rax ; ret 0xfffb
0x00000000000e690e : push rax ; ret 3
0x000000000012e427 : push rax ; retf 0 ; or byte ptr [rsi - 8], ah ; jmp qword ptr [rax]
0x000000000013e0e0 : push rax ; sub bh, dl ; call qword ptr [rsi]
0x0000000000111aba : push rax ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000001230f7 : push rax ; xor al, 0xfc ; jmp rax
0x00000000001230b7 : push rax ; xor eax, 0x35e0fffc ; cld ; call rax
0x00000000000eabe0 : push rbp ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x29], r9b ; ret 0x3948
0x0000000000136c61 : push rbp ; add byte ptr [rax], al ; cld ; sal ebx, cl ; call qword ptr [rbx]
0x000000000012cbf9 : push rbp ; add byte ptr [rax], al ; pop rax ; out dx, eax ; call rsp
0x00000000000287d4 : push rbp ; add byte ptr [rcx - 0x77], cl ; ret 0xf66
0x00000000001308c1 : push rbp ; add dword ptr [rax], eax ; mov byte ptr [rdx], al ; std ; call rsp
0x000000000012dd1d : push rbp ; cmc ; jmp rax
0x0000000000116e91 : push rbp ; int1 ; call qword ptr [rax]
0x0000000000116e99 : push rbp ; int1 ; call rax
0x0000000000116e95 : push rbp ; int1 ; inc dword ptr [rax] ; push rbp ; int1 ; call rax
0x0000000000116e8d : push rbp ; int1 ; jmp qword ptr [rax]
0x0000000000001f45 : push rbp ; jrcxz 0x1f20 ; js 0x1f0c ; in al, dx ; call rdi
0x0000000000069a71 : push rbp ; push rax ; call 0x105cc4
0x000000000002722e : push rbx ; add byte ptr [rax + 1], cl ; ret
0x0000000000029192 : push rbx ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000273d7 : push rbx ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012cbd1 : push rbx ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; out dx, eax ; jmp qword ptr [rax]
0x0000000000028355 : push rbx ; add byte ptr [rax], al ; test eax, eax ; jne 0x28370 ; pop rbx ; ret
0x0000000000028f16 : push rbx ; add byte ptr [rcx - 0x75], cl ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000282cd : push rbx ; add byte ptr [rcx], al ; add rsp, 0x28 ; ret
0x0000000000130869 : push rbx ; add dword ptr [rax], eax ; js 0x130868 ; cld ; jmp rsp
0x00000000000ece7a : push rbx ; add dword ptr [rax], eax ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000fc68a : push rbx ; add dword ptr [rcx + 1], eax ; ret 0x144
0x000000000001eab6 : push rbx ; dec dword ptr [rax + 1] ; ret
0x00000000000287d0 : push rbx ; dec dword ptr [rax - 0x77] ; push rbp ; add byte ptr [rcx - 0x77], cl ; ret 0xf66
0x000000000001c20b : push rbx ; mov dword ptr [rdx + 0x94], eax ; ret
0x000000000009c53b : push rbx ; mov rdi, rax ; call 0xe8786
0x0000000000079a1f : push rbx ; push rax ; call 0x105cc4
0x000000000008d639 : push rbx ; ret
0x00000000000f4808 : push rcx ; adc byte ptr [rax + 9], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x000000000010cc7c : push rcx ; adc byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x000000000010cd47 : push rcx ; adc byte ptr [rcx + rdi + 0x50], cl ; adc byte ptr [rcx + 0xf], al ; xchg eax, edi ; ret 0x8445
0x00000000000aeca3 : push rcx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002f916 : push rcx ; jo 0x2f967 ; mov dword ptr [rcx + 0x78], edx ; ret
0x00000000000b996b : push rcx ; ret
0x000000000001d271 : push rcx ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f593e : push rdi ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0ee7 : push rdi ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000026a68 : push rdi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000144e3d : push rdi ; cld ; call qword ptr [rcx]
0x0000000000137f35 : push rdi ; cmc ; call rdx
0x00000000000fcfd2 : push rdi ; cmp eax, 0xf ; setbe al ; ret
0x00000000000fcf22 : push rdi ; cmp edx, 9 ; setbe al ; ret
0x00000000000fc21e : push rdi ; inc dword ptr [rcx] ; fisttp word ptr [rax + 0x63] ; ret 0x8d49
0x0000000000101542 : push rdi ; jo 0x1014cb ; ret
0x0000000000028f15 : push rdi ; push rbx ; add byte ptr [rcx - 0x75], cl ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000ea1fe : push rdi ; sbb byte ptr [rax + 0x39], cl ; sal byte ptr [rdx + 0x2a], 1 ; xor eax, eax ; ret
0x00000000000e87f0 : push rdi ; sub byte ptr [rdx + 4], dh ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000025d22 : push rdi ; xor byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000001f75c : push rdx ; add al, ch ; popfq ; ret
0x0000000000034025 : push rdx ; add byte ptr [rax + 0x75001c78], al ; add esi, ebx ; ret
0x000000000001b899 : push rdx ; add byte ptr [rax], al ; ret
0x000000000012da85 : push rdx ; hlt ; call rax
0x0000000000053eaa : push rdx ; ret
0x00000000000a9a6a : push rdx ; ret 5
0x000000000001e426 : push rsi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000e9dc5 : push rsi ; add dword ptr [rax], eax ; add al, ch ; ret 0x183
0x0000000000130911 : push rsi ; add dword ptr [rax], eax ; or byte ptr [rax], cl ; std ; call rsp
0x0000000000022cf2 : push rsi ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000001015c2 : push rsi ; jo 0x10154b ; ret
0x00000000000e7c06 : push rsi ; js 0xe7c57 ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000599dd : push rsi ; push rax ; call 0x105cc4
0x0000000000028fdb : push rsi ; push rbx ; add byte ptr [rcx - 0x75], cl ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000e2306 : push rsi ; ret
0x000000000001ef36 : push rsi ; ret 0x32
0x0000000000072a16 : push rsi ; ret 8
0x00000000000f1123 : push rsi ; xor eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012cbe1 : push rsp ; add byte ptr [rax], al ; clc ; cmp ch, bh ; call rax
0x000000000012ca47 : push rsp ; add byte ptr [rax], r8b ; or cl, dh ; out dx, al ; call qword ptr [rax]
0x0000000000130899 : push rsp ; add dword ptr [rax], eax ; fdivr st(1) ; cld ; call rax
0x00000000001303ff : push rsp ; add dword ptr [rax], eax ; js 0x1303ae ; cld ; jmp qword ptr [rax]
0x000000000010a743 : push rsp ; and al, 0x20 ; mov rsi, rbp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000f1709 : push rsp ; and al, 8 ; call rcx
0x0000000000033a72 : push rsp ; and al, 8 ; sub rdx, rdi ; xor esi, esi ; call qword ptr [r14]
0x0000000000032de8 : push rsp ; je 0x32dff ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000130e77 : push rsp ; jo 0x130e84 ; add byte ptr [rax], cl ; test ch, bh ; call qword ptr [rax]
0x00000000000ff1eb : push rsp ; lea eax, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000129d9b : push rsp ; loope 0x129da0 ; jmp rsp
0x0000000000130a4f : push rsp ; pop rbp ; add dword ptr [rax], eax ; fdiv dword ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000099a0b : push rsp ; push rax ; call 0x105cc4
0x0000000000029191 : push rsp ; push rbx ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000cc64a : push rsp ; ret
0x000000000012e230 : push rsp ; ret 0
0x000000000001d574 : push rsp ; ret 0x4838
0x00000000000fef11 : push rsp ; xor al, bh ; cmp rax, rcx ; jne 0xfef11 ; pop rbx ; ret
0x00000000000f13ce : pushfq ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000131589 : pushfq ; add dword ptr [rax], eax ; sbb byte ptr [rdi - 2], ch ; jmp rsp
0x000000000012ea68 : pushfq ; fld qword ptr [rax] ; add byte ptr [rax], ch ; ret 0xfff8
0x000000000012e26d : pushfq ; idiv edi ; ret
0x0000000000133031 : pushfq ; out dx, eax ; jmp rcx
0x000000000013d91c : pushfq ; ret 0
0x000000000012e608 : rcl al, 1 ; add byte ptr [rax], al ; clc ; xchg eax, esi ; clc ; jmp rsp
0x000000000004dacf : rcl byte ptr [rax], 0x48 ; add esp, 0x28 ; ret
0x000000000001edd0 : rcl byte ptr [rax], 0x5b ; pop rbp ; ret
0x000000000004da4f : rcl dword ptr [rax], 0x48 ; add esp, 0x28 ; ret
0x000000000004da4e : rcl dword ptr ss:[rax], 0x48 ; add esp, 0x28 ; ret
0x000000000012ea10 : rcr ah, 0 ; add byte ptr [rax - 0x3f], bh ; clc ; call rsp
0x000000000012fbe8 : rcr byte ptr [rax], 1 ; add dword ptr [rax], eax ; movsxd rdi, ebx ; call qword ptr [rax]
0x00000000000eb8f2 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000348d2 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e0518 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000000faa9a : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000103a6c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000f9e6f : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000002e6d5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000105fb7 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000010402a : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000001024be : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000012cca8 : rcr byte ptr [rbx], 1 ; add byte ptr [rax], ch ; mov bl, 0xef ; jmp rsp
0x000000000012e978 : rcr dl, 1 ; add byte ptr [rax], al ; cwde ; mov ch, 0xf8 ; jmp rsp
0x00000000000fddcb : rcr dword ptr [rbx + 0x31], 1 ; ret
0x000000000002158b : rcr dword ptr [rbx - 0x74b7ffce], 1 ; ret 0x4c38
0x00000000000f8002 : rcr dword ptr [rcx], -0x40 ; or eax, 1 ; ret
0x00000000000fddf7 : rdtsc ; ret
0x0000000000000346 : ret
0x00000000000003d1 : ret 0
0x00000000000eec35 : ret 0x10
0x00000000001333ca : ret 0x100e
0x00000000000eabba : ret 0x103
0x00000000000db5b8 : ret 0x1072
0x00000000000dec75 : ret 0x107d
0x00000000000f5f1a : ret 0x10e8
0x0000000000022269 : ret 0x110f
0x000000000001a551 : ret 0x12
0x000000000001d5b7 : ret 0x1273
0x00000000000fe6c3 : ret 0x1274
0x00000000000dedca : ret 0x137d
0x00000000000dd65d : ret 0x141
0x00000000000fc68e : ret 0x144
0x0000000000024008 : ret 0x148
0x00000000000718d0 : ret 0x149
0x0000000000002b8c : ret 0x14b1
0x00000000000afb32 : ret 0x14d
0x000000000010f916 : ret 0x14e8
0x000000000000a178 : ret 0x15
0x0000000000031a15 : ret 0x15e8
0x0000000000049917 : ret 0x15ff
0x00000000000e1e3a : ret 0x162
0x000000000001f2c3 : ret 0x1673
0x00000000000b3117 : ret 0x1674
0x000000000004b966 : ret 0x177d
0x00000000000f6413 : ret 0x17e8
0x00000000000d2a3a : ret 0x17f
0x00000000000eb1fe : ret 0x180f
0x00000000000e9dca : ret 0x183
0x00000000000e2aba : ret 0x184
0x000000000004c9d5 : ret 0x187d
0x00000000000328ea : ret 0x18ba
0x0000000000002160 : ret 0x1979
0x000000000004a9f3 : ret 0x197c
0x000000000004c00c : ret 0x197d
0x00000000000fb625 : ret 0x198
0x000000000004cd2b : ret 0x1a7d
0x00000000000ebd33 : ret 0x1b74
0x00000000000aab20 : ret 0x1b7c
0x00000000000fd10a : ret 0x1b8
0x00000000000f3148 : ret 0x1ba
0x00000000000f46b9 : ret 0x1be
0x00000000000f5b0f : ret 0x1be8
0x0000000000023060 : ret 0x1bf
0x00000000000d387e : ret 0x1c
0x00000000000f7f87 : ret 0x1c75
0x000000000008ea48 : ret 0x1c7d
0x0000000000052e49 : ret 0x1d7c
0x000000000004a9d6 : ret 0x1d7d
0x000000000010ce4a : ret 0x1de
0x000000000002810d : ret 0x1de8
0x000000000000ba20 : ret 0x1e
0x0000000000055370 : ret 0x1e7c
0x000000000004fcde : ret 0x1e7d
0x000000000003d52c : ret 0x1f0f
0x000000000007dc1e : ret 0x1f7c
0x00000000000bbbe5 : ret 0x1f7d
0x000000000003cb97 : ret 0x2074
0x000000000005aa66 : ret 0x207c
0x00000000000b578d : ret 0x207d
0x00000000000f26d9 : ret 0x208
0x00000000000f630a : ret 0x20e8
0x0000000000020c95 : ret 0x214c
0x00000000000acee5 : ret 0x217c
0x000000000004c67c : ret 0x217d
0x0000000000031709 : ret 0x21e8
0x0000000000052ae2 : ret 0x227d
0x00000000000fbed8 : ret 0x22b9
0x000000000010b338 : ret 0x23
0x00000000001149c2 : ret 0x2335
0x00000000001054f2 : ret 0x2374
0x00000000000b198a : ret 0x237d
0x0000000000105693 : ret 0x23d
0x0000000000003537 : ret 0x23fc
0x00000000000fbd81 : ret 0x24
0x000000000003d603 : ret 0x2474
0x000000000005aa49 : ret 0x247d
0x0000000000000369 : ret 0x24c
0x00000000001040da : ret 0x24e
0x0000000000103eda : ret 0x250
0x00000000000a4ac7 : ret 0x2574
0x0000000000060878 : ret 0x257d
0x0000000000022647 : ret 0x2676
0x00000000000aad27 : ret 0x267d
0x000000000004c374 : ret 0x26e8
0x00000000000cdeaa : ret 0x27
0x000000000003c487 : ret 0x2774
0x00000000000f15be : ret 0x2778
0x00000000000a204e : ret 0x277d
0x00000000000cecba : ret 0x27b3
0x00000000000dddfa : ret 0x27e
0x00000000000f5d03 : ret 0x27e8
0x00000000000be575 : ret 0x28
0x00000000000c88f2 : ret 0x281c
0x00000000000c67e2 : ret 0x283e
0x0000000000024c95 : ret 0x2876
0x000000000007a155 : ret 0x287d
0x00000000000e0943 : ret 0x28ba
0x00000000000f6802 : ret 0x28e8
0x0000000000002d49 : ret 0x28fb
0x00000000000201d4 : ret 0x290f
0x00000000000a7d51 : ret 0x2941
0x000000000002996c : ret 0x2948
0x00000000000a6802 : ret 0x2949
0x0000000000103eb5 : ret 0x294c
0x0000000000054c1b : ret 0x297c
0x00000000000b0e94 : ret 0x297d
0x00000000000f6201 : ret 0x29e8
0x00000000000a483a : ret 0x2a5d
0x0000000000001fcd : ret 0x2a63
0x00000000000d75ca : ret 0x2ab
0x00000000000d73ca : ret 0x2ad
0x000000000005a6a2 : ret 0x2b7c
0x000000000008ac32 : ret 0x2b7d
0x00000000000ff121 : ret 0x2be9
0x00000000000f4f08 : ret 0x2bf
0x000000000009b6c1 : ret 0x2c7c
0x00000000000b1a51 : ret 0x2c7d
0x000000000000c170 : ret 0x2d
0x00000000000dec58 : ret 0x2d7d
0x00000000000f5dfd : ret 0x2de8
0x0000000000031efc : ret 0x2ee8
0x00000000001040be : ret 0x2f75
0x00000000000725be : ret 0x2f7c
0x00000000000f653a : ret 0x2fb
0x00000000000a4ae9 : ret 0x2fe9
0x00000000000213ad : ret 0x3076
0x000000000006f27d : ret 0x307c
0x0000000000066486 : ret 0x307d
0x00000000000f5d89 : ret 0x309
0x00000000000f3d9a : ret 0x3101
0x000000000001d43f : ret 0x3145
0x00000000000f66f9 : ret 0x31e8
0x000000000001eec1 : ret 0x32
0x0000000000063118 : ret 0x3274
0x000000000001b702 : ret 0x32c7
0x000000000001d0ca : ret 0x32e0
0x0000000000101796 : ret 0x3374
0x000000000004d735 : ret 0x337d
0x000000000004b949 : ret 0x347d
0x0000000000047643 : ret 0x348
0x00000000000fc5bf : ret 0x349
0x0000000000027ef6 : ret 0x34e8
0x000000000004c9b8 : ret 0x357d
0x00000000000cef35 : ret 0x3589
0x000000000000262d : ret 0x3594
0x0000000000027ff5 : ret 0x35e8
0x00000000000ad0ca : ret 0x360
0x00000000000b1cda : ret 0x361
0x0000000000063b98 : ret 0x3674
0x000000000004bfef : ret 0x367d
0x000000000004cd0e : ret 0x377d
0x00000000000ec42a : ret 0x379
0x0000000000007970 : ret 0x38
0x00000000000e528e : ret 0x3801
0x00000000000e53de : ret 0x3803
0x00000000000eb43a : ret 0x38a
0x000000000002a982 : ret 0x3948
0x00000000000e0508 : ret 0x3949
0x00000000000de86c : ret 0x394c
0x000000000001cb27 : ret 0x394d
0x000000000004a9b9 : ret 0x3a7d
0x00000000000e8e4a : ret 0x3ac
0x00000000000f65f0 : ret 0x3ae8
0x00000000000fb220 : ret 0x3ba
0x000000000010250c : ret 0x3c6
0x0000000000031ced : ret 0x3de8
0x00000000000c0baa : ret 0x3e0
0x0000000000066837 : ret 0x3e7c
0x000000000004c65f : ret 0x3e7d
0x0000000000027f27 : ret 0x3e8
0x00000000000aaae6 : ret 0x3f7d
0x00000000000005c6 : ret 0x4000
0x00000000000fc657 : ret 0x4001
0x00000000000c66fe : ret 0x4074
0x00000000000a40f7 : ret 0x407d
0x00000000000e181a : ret 0x40c
0x00000000000f60ea : ret 0x40e8
0x000000000000b3d8 : ret 0x41
0x0000000000024c4b : ret 0x410
0x00000000000ebd17 : ret 0x4101
0x00000000000fc615 : ret 0x4108
0x0000000000001bf2 : ret 0x4117
0x00000000000f9391 : ret 0x4166
0x00000000000b57aa : ret 0x417c
0x000000000005aa2c : ret 0x417d
0x00000000000e0342 : ret 0x41c
0x00000000000f5fe9 : ret 0x41e8
0x000000000006ae0b : ret 0x427d
0x00000000000f84d9 : ret 0x4301
0x000000000004d06a : ret 0x437d
0x0000000000026ea0 : ret 0x438b
0x00000000000f64e7 : ret 0x43e8
0x00000000000fdcca : ret 0x44
0x00000000000f9353 : ret 0x4466
0x000000000006a109 : ret 0x447d
0x0000000000002f32 : ret 0x44c0
0x00000000000ffadb : ret 0x4508
0x00000000000c06fa : ret 0x455
0x00000000000fc79b : ret 0x4551
0x00000000000cabe8 : ret 0x4574
0x000000000009d638 : ret 0x457d
0x00000000000032db : ret 0x45b5
0x0000000000031ae5 : ret 0x45e8
0x00000000000f59e5 : ret 0x45e9
0x00000000000d1f16 : ret 0x46
0x00000000000d7ab2 : ret 0x461
0x00000000000d7982 : ret 0x462
0x0000000000071827 : ret 0x467d
0x00000000000e1c54 : ret 0x47
0x00000000000e87b1 : ret 0x472
0x00000000000d257b : ret 0x477
0x00000000000720e6 : ret 0x477d
0x00000000000e5fb9 : ret 0x4786
0x00000000000cd8c2 : ret 0x48
0x000000000001cdc9 : ret 0x4801
0x00000000000287b4 : ret 0x4802
0x000000000002fb31 : ret 0x4808
0x00000000000229ef : ret 0x4810
0x00000000000dc93d : ret 0x4818
0x000000000010d809 : ret 0x4820
0x000000000001d575 : ret 0x4838
0x00000000000d3ee9 : ret 0x4854
0x00000000000d3712 : ret 0x485d
0x00000000000d8f2a : ret 0x486
0x000000000005f355 : ret 0x487d
0x000000000001ba2a : ret 0x488d
0x0000000000032cd3 : ret 0x48ba
0x00000000000f5812 : ret 0x48d
0x00000000000cbdee : ret 0x48dd
0x00000000000cb3ee : ret 0x48e7
0x00000000000f4a38 : ret 0x48f3
0x000000000010aadf : ret 0x48f8
0x000000000002ce4f : ret 0x4901
0x00000000000cefe8 : ret 0x4902
0x00000000000225ff : ret 0x4910
0x00000000000c79ee : ret 0x4921
0x00000000000c62b1 : ret 0x4937
0x00000000000c60f9 : ret 0x4939
0x00000000000c5c92 : ret 0x493e
0x00000000000733d4 : ret 0x497d
0x000000000009e58a : ret 0x499
0x00000000000f5ee1 : ret 0x49e8
0x00000000000b23a1 : ret 0x4a
0x0000000000074b23 : ret 0x4a7d
0x0000000000001b8e : ret 0x4b17
0x0000000000089082 : ret 0x4b7d
0x000000000008d6ab : ret 0x4c
0x0000000000029214 : ret 0x4c01
0x0000000000023ddd : ret 0x4c04
0x000000000002880c : ret 0x4c10
0x0000000000021592 : ret 0x4c38
0x00000000000506e8 : ret 0x4c7d
0x00000000000957ce : ret 0x4c8e
0x00000000000b1daa : ret 0x4ce
0x00000000000f63de : ret 0x4ce8
0x0000000000082472 : ret 0x4d
0x000000000008dcb3 : ret 0x4d01
0x00000000000232c2 : ret 0x4d03
0x0000000000023302 : ret 0x4d10
0x000000000005c9b7 : ret 0x4d7d
0x00000000000318dd : ret 0x4de8
0x00000000000723db : ret 0x4e
0x00000000000afa0c : ret 0x4e01
0x00000000000bf357 : ret 0x4e7d
0x00000000000f6126 : ret 0x4e8
0x000000000000305e : ret 0x4e99
0x000000000004c04c : ret 0x4ee8
0x0000000000069ace : ret 0x4f4b
0x000000000008ac0e : ret 0x4f7d
0x000000000005fd02 : ret 0x4fc0
0x00000000000523f3 : ret 0x50
0x000000000005e1ce : ret 0x5004
0x000000000005c7ce : ret 0x501e
0x00000000000ca8b5 : ret 0x506
0x00000000000b1a2d : ret 0x507d
0x00000000000fa1d0 : ret 0x50f
0x000000000004f4ce : ret 0x50f1
0x00000000000423e5 : ret 0x51
0x000000000004d5ca : ret 0x5110
0x000000000004b92c : ret 0x517d
0x000000000001ef93 : ret 0x52
0x000000000003168e : ret 0x527a
0x000000000004c99b : ret 0x527d
0x00000000000361ce : ret 0x5284
0x0000000000095dba : ret 0x529
0x000000000002bd3a : ret 0x52d3
0x00000000000280d8 : ret 0x52e8
0x000000000004bfd2 : ret 0x537d
0x000000000001d6e0 : ret 0x53b9
0x00000000000f5bd7 : ret 0x53e8
0x0000000000002500 : ret 0x546c
0x000000000004ccf1 : ret 0x547d
0x000000000010342b : ret 0x5488
0x000000000010cd17 : ret 0x5573
0x00000000000faed0 : ret 0x5576
0x0000000000052aaf : ret 0x557d
0x00000000000f62d5 : ret 0x55e8
0x00000000000b5756 : ret 0x577d
0x00000000000f5cd1 : ret 0x59e8
0x000000000007a173 : ret 0x5a7c
0x0000000000003412 : ret 0x5b64
0x000000000004c642 : ret 0x5b7d
0x0000000000054571 : ret 0x5c7d
0x00000000000a84fa : ret 0x5d7
0x000000000005dd47 : ret 0x5d7d
0x00000000000f67cd : ret 0x5de8
0x000000000009b747 : ret 0x5e7d
0x0000000000031e25 : ret 0x5e8
0x00000000000f61cc : ret 0x5ee8
0x00000000000f5dcb : ret 0x5fe8
0x000000000010b5ca : ret 0x60e8
0x0000000000002391 : ret 0x617e
0x00000000000deb1b : ret 0x61e9
0x00000000000f228e : ret 0x6348
0x00000000000c6ab2 : ret 0x6374
0x000000000002ee69 : ret 0x6474
0x00000000000e016f : ret 0x6476
0x0000000000027ec5 : ret 0x65e8
0x000000000010e4a4 : ret 0x6602
0x00000000000e7aea : ret 0x6610
0x00000000000245bc : ret 0x6688
0x00000000000e8798 : ret 0x66c3
0x00000000000f66c4 : ret 0x66e8
0x00000000000e87eb : ret 0x672
0x0000000000027fc3 : ret 0x67e8
0x000000000007f8ba : ret 0x68e
0x00000000000740fc : ret 0x697c
0x00000000000eef4a : ret 0x6bf1
0x0000000000031dbd : ret 0x6de8
0x00000000000c3f31 : ret 0x6e
0x000000000005ebba : ret 0x6e7d
0x00000000000b3f8c : ret 0x6f
0x00000000000f65bb : ret 0x6fe8
0x00000000000a3fea : ret 0x70
0x000000000008ebaa : ret 0x700
0x00000000000fbe5a : ret 0x70e8
0x0000000000052ddc : ret 0x717d
0x000000000009213a : ret 0x71e0
0x00000000000622fb : ret 0x727c
0x0000000000055303 : ret 0x727d
0x0000000000073f3e : ret 0x73
0x000000000007583a : ret 0x73a9
0x0000000000063f29 : ret 0x74
0x00000000001099c5 : ret 0x7410
0x00000000000249f3 : ret 0x7474
0x00000000000b5739 : ret 0x747d
0x0000000000053f83 : ret 0x75
0x00000000000fe6ad : ret 0x7501
0x00000000000fed3b : ret 0x7507
0x0000000000031bb5 : ret 0x75e8
0x0000000000043fd4 : ret 0x76
0x00000000000aaaaf : ret 0x767d
0x00000000000e5114 : ret 0x76e8
0x0000000000002782 : ret 0x7714
0x000000000001ba46 : ret 0x775
0x000000000005a9f5 : ret 0x787d
0x00000000000f64b2 : ret 0x78e8
0x0000000000002a00 : ret 0x793b
0x0000000000060824 : ret 0x797d
0x00000000000f60b1 : ret 0x79e8
0x0000000000007bb0 : ret 0x7a
0x0000000000054553 : ret 0x7a7d
0x00000000000842aa : ret 0x7a9
0x000000000008b0fa : ret 0x7ab
0x00000000000f5fb0 : ret 0x7ae8
0x000000000000a070 : ret 0x7b
0x000000000009b72a : ret 0x7b7d
0x00000000000898fa : ret 0x7c3
0x000000000006b68a : ret 0x7c8
0x00000000000ace70 : ret 0x7d7d
0x00000000000319ad : ret 0x7de8
0x00000000000f5aab : ret 0x7fe8
0x00000000000291e3 : ret 0x7fff
0x000000000001cda8 : ret 0x8000
0x000000000002dce3 : ret 0x8001
0x00000000000004a4 : ret 0x8010
0x000000000010c80e : ret 0x8090
0x000000000007d9aa : ret 0x812
0x00000000000e7c69 : ret 0x8148
0x00000000000718ec : ret 0x817d
0x00000000000f63a9 : ret 0x81e8
0x00000000000f6d7f : ret 0x820f
0x00000000000f5ea8 : ret 0x82e8
0x00000000000ed7d1 : ret 0x830f
0x00000000000829fa : ret 0x832
0x00000000000e7c0d : ret 0x8348
0x00000000000f8192 : ret 0x840
0x0000000000000604 : ret 0x8400
0x00000000000223a3 : ret 0x840f
0x00000000000f89aa : ret 0x841
0x00000000000230a9 : ret 0x8445
0x00000000000299fe : ret 0x8488
0x000000000001c44f : ret 0x850f
0x000000000003c47f : ret 0x8545
0x000000000002ae52 : ret 0x8548
0x0000000000028e3c : ret 0x854d
0x00000000000a4a7e : ret 0x858b
0x00000000000317a5 : ret 0x85e8
0x00000000000a4ab8 : ret 0x85f7
0x0000000000021970 : ret 0x860f
0x000000000005dda4 : ret 0x867c
0x000000000006a1c7 : ret 0x867d
0x000000000001c961 : ret 0x870f
0x00000000000a6c56 : ret 0x877d
0x00000000000312a4 : ret 0x8801
0x00000000000f164f : ret 0x880f
0x0000000000111130 : ret 0x8889
0x00000000000a7d42 : ret 0x8908
0x0000000000023bc0 : ret 0x8941
0x000000000002467c : ret 0x8944
0x000000000001bd7c : ret 0x8948
0x000000000008dcbb : ret 0x8949
0x000000000001f2b4 : ret 0x894c
0x0000000000047091 : ret 0x894d
0x00000000000faa97 : ret 0x895b
0x00000000000f68a1 : ret 0x89e8
0x00000000000bc263 : ret 0x8a7d
0x000000000005f97a : ret 0x8a8
0x00000000000f62a0 : ret 0x8ae8
0x000000000007aafa : ret 0x8b1
0x0000000000021e50 : ret 0x8b41
0x0000000000025756 : ret 0x8b44
0x000000000003c974 : ret 0x8b48
0x00000000000243af : ret 0x8b49
0x00000000000241c8 : ret 0x8b4c
0x00000000000f1cce : ret 0x8b4d
0x0000000000052e84 : ret 0x8b7c
0x00000000000ffffa : ret 0x8ba
0x000000000002809f : ret 0x8be8
0x000000000005aaa4 : ret 0x8c0f
0x000000000011210c : ret 0x8c89
0x000000000004a639 : ret 0x8d0f
0x000000000001d84e : ret 0x8d48
0x00000000000244d7 : ret 0x8d49
0x000000000002581e : ret 0x8d4a
0x0000000000089c8c : ret 0x8d4c
0x00000000000a5929 : ret 0x8d4d
0x00000000000f9110 : ret 0x8d4e
0x000000000000280b : ret 0x8d71
0x0000000000003513 : ret 0x8e4e
0x00000000000aa647 : ret 0x8e7d
0x00000000000554ca : ret 0x8ec
0x00000000000071d8 : ret 0x8f
0x0000000000029925 : ret 0x8f0f
0x00000000000b63f6 : ret 0x8f7d
0x00000000000c65ba : ret 0x90
0x0000000000033c8d : ret 0x9066
0x000000000007ac3f : ret 0x907c
0x00000000000749fa : ret 0x912
0x00000000000f5d99 : ret 0x91e8
0x00000000000553a4 : ret 0x927c
0x0000000000072efa : ret 0x92d
0x0000000000031f98 : ret 0x92e8
0x0000000000086564 : ret 0x93c
0x00000000000f6197 : ret 0x93e8
0x000000000000c7a0 : ret 0x94
0x000000000005298a : ret 0x955
0x000000000005218a : ret 0x95d
0x000000000010b595 : ret 0x95e8
0x000000000004d117 : ret 0x967d
0x0000000000027e94 : ret 0x96e8
0x000000000002ede1 : ret 0x972
0x000000000004d7b4 : ret 0x977c
0x000000000008c726 : ret 0x977d
0x000000000002565f : ret 0x9848
0x00000000000664a3 : ret 0x987c
0x000000000000a808 : ret 0x9a
0x000000000010cdd2 : ret 0x9a73
0x000000000004f87a : ret 0x9a9
0x00000000000f668f : ret 0x9be8
0x00000000000696fa : ret 0x9c5
0x0000000000031e8d : ret 0x9de8
0x000000000008912f : ret 0x9e7d
0x00000000000e5081 : ret 0x9e8
0x0000000000066afa : ret 0x9f1
0x000000000005f6aa : ret 0x9f5
0x0000000000086a0e : ret 0x9f7d
0x00000000000436ca : ret 0x9fa
0x0000000000030e3d : ret 0xa
0x0000000000138ea1 : ret 0xa02
0x000000000005d1aa : ret 0xa1a
0x0000000000027f89 : ret 0xa1e8
0x000000000010f989 : ret 0xa1e9
0x00000000000fe929 : ret 0xa2eb
0x00000000000ef45a : ret 0xa375
0x000000000006238a : ret 0xa37c
0x00000000000f6586 : ret 0xa4e8
0x0000000000066892 : ret 0xa57d
0x0000000000031c85 : ret 0xa5e8
0x000000000005f3f7 : ret 0xa67d
0x00000000000c49ba : ret 0xa7
0x00000000000ea0f3 : ret 0xa72
0x0000000000071456 : ret 0xa77d
0x000000000004217a : ret 0xa80
0x000000000003faba : ret 0xa8c
0x00000000000f6981 : ret 0xa9e9
0x000000000001dea0 : ret 0xa9eb
0x00000000000030aa : ret 0xaa17
0x000000000003f77a : ret 0xaaa
0x000000000005acfa : ret 0xaaf
0x00000000000fc7a3 : ret 0xab9
0x00000000000fd96b : ret 0xabe
0x00000000000f607f : ret 0xabe8
0x00000000000f5f7e : ret 0xace8
0x00000000000c54ea : ret 0xad
0x0000000000058afa : ret 0xad1
0x000000000007e2e2 : ret 0xad7c
0x0000000000031a7d : ret 0xade8
0x000000000000296a : ret 0xae17
0x00000000000026b8 : ret 0xae7d
0x0000000000056dfa : ret 0xaee
0x000000000000267c : ret 0xaf0a
0x00000000000718be : ret 0xaf7d
0x0000000000020e5e : ret 0xb
0x00000000000fb7bf : ret 0xb0ba
0x00000000000668af : ret 0xb17c
0x00000000000f5a79 : ret 0xb1e8
0x0000000000033bf2 : ret 0xb1eb
0x00000000000dc17a : ret 0xb2
0x000000000003528a : ret 0xb2c
0x00000000000664b6 : ret 0xb37c
0x0000000000002dda : ret 0xb417
0x00000000000deac1 : ret 0xb4e9
0x0000000000031875 : ret 0xb5e8
0x0000000000029569 : ret 0xb60f
0x0000000000049944 : ret 0xb6e8
0x000000000002954c : ret 0xb70f
0x000000000004e4fa : ret 0xb77
0x00000000000f5b73 : ret 0xb7e8
0x0000000000145e1c : ret 0xb80e
0x00000000000208e2 : ret 0xb841
0x0000000000002b6d : ret 0xb8d3
0x00000000000f5e6f : ret 0xbbe8
0x00000000000db77a : ret 0xbc
0x00000000000491fa : ret 0xbca
0x000000000002806d : ret 0xbde8
0x00000000000f686c : ret 0xbee8
0x00000000000f626b : ret 0xbfe8
0x000000000002087a : ret 0xc031
0x00000000000473d2 : ret 0xc083
0x000000000001bc36 : ret 0xc148
0x0000000000020f2c : ret 0xc149
0x0000000000052b04 : ret 0xc17c
0x0000000000002fee : ret 0xc282
0x00000000000fefad : ret 0xc35b
0x00000000000422fa : ret 0xc39
0x00000000000f5d67 : ret 0xc3e8
0x000000000002696a : ret 0xc43
0x00000000000bbc04 : ret 0xc47c
0x00000000000fcc96 : ret 0xc4e8
0x00000000000ddc7a : ret 0xc5
0x00000000000407fa : ret 0xc54
0x000000000004fcfc : ret 0xc57c
0x000000000010b564 : ret 0xc6e8
0x000000000008ea64 : ret 0xc77c
0x00000000000f6763 : ret 0xc7e8
0x00000000000f6162 : ret 0xc8e8
0x0000000000002d24 : ret 0xc910
0x00000000000f1891 : ret 0xc931
0x000000000005ca04 : ret 0xc97c
0x0000000000032f8a : ret 0xc9d
0x00000000000cbb46 : ret 0xca
0x0000000000050734 : ret 0xca7c
0x000000000003b2fa : ret 0xca9
0x0000000000085c22 : ret 0xcb7c
0x0000000000001fc2 : ret 0xcd64
0x000000000010315d : ret 0xcde8
0x0000000000002f0e : ret 0xcf17
0x00000000000075a1 : ret 0xd
0x00000000000fbb1d : ret 0xd008
0x00000000000f0f04 : ret 0xd009
0x00000000000f665a : ret 0xd0e8
0x0000000000020ec0 : ret 0xd108
0x000000000002b70a : ret 0xd12
0x00000000000cef8c : ret 0xd149
0x000000000001c9de : ret 0xd184
0x00000000000dd7dd : ret 0xd189
0x0000000000027f58 : ret 0xd2e8
0x0000000000023bdb : ret 0xd304
0x00000000000206b8 : ret 0xd348
0x00000000000f2c3e : ret 0xd349
0x00000000001022e4 : ret 0xd389
0x0000000000031d55 : ret 0xd5e8
0x00000000000df3f3 : ret 0xd72
0x00000000000de9ed : ret 0xd87c
0x000000000010f952 : ret 0xd8e8
0x000000000002fb8c : ret 0xd8eb
0x00000000000ec075 : ret 0xd90
0x00000000000ff6c9 : ret 0xd989
0x00000000000286ca : ret 0xd9a
0x00000000000f6551 : ret 0xd9e8
0x0000000000001f7c : ret 0xda
0x00000000000f0692 : ret 0xdb75
0x0000000000031b4d : ret 0xdde8
0x0000000000031c1d : ret 0xde8
0x00000000000f5f4c : ret 0xdee8
0x0000000000029ffb : ret 0xe
0x000000000001eb58 : ret 0xe281
0x00000000000a4062 : ret 0xe283
0x00000000000f6448 : ret 0xe2e8
0x0000000000000352 : ret 0xe408
0x000000000003079a : ret 0xe55
0x00000000000f7ff8 : ret 0xe575
0x000000000003342a : ret 0xe5c
0x0000000000031945 : ret 0xe5e8
0x000000000002f89a : ret 0xe64
0x000000000003239a : ret 0xe69
0x0000000000002bdd : ret 0xe6ce
0x00000000000ea099 : ret 0xe6e9
0x0000000000025a1a : ret 0xe83
0x000000000010796e : ret 0xe883
0x000000000000330c : ret 0xe89f
0x00000000000f4de5 : ret 0xe95b
0x00000000000ebd24 : ret 0xe972
0x00000000000f736c : ret 0xe975
0x000000000002da6c : ret 0xe9a
0x00000000000f5b41 : ret 0xe9e8
0x000000000002d1b3 : ret 0xe9f
0x000000000010d0cb : ret 0xea75
0x0000000000106afa : ret 0xea9e
0x000000000003a983 : ret 0xeac1
0x000000000008d1f2 : ret 0xeb01
0x0000000000101639 : ret 0xeb08
0x00000000000f9072 : ret 0xeb72
0x00000000000f633f : ret 0xebe8
0x000000000010b43e : ret 0xece8
0x00000000000f8140 : ret 0xed75
0x000000000002749a : ret 0xedc
0x000000000003173d : ret 0xede8
0x00000000000e5291 : ret 0xee7c
0x00000000000f651c : ret 0xee8
0x000000000001d1cc : ret 0xef75
0x00000000000252e2 : ret 0xef8
0x00000000000f5c3b : ret 0xefe8
0x0000000000110aa9 : ret 0xf001
0x000000000001d1eb : ret 0xf01
0x00000000000247aa : ret 0xf07
0x000000000010c81d : ret 0xf075
0x0000000000103426 : ret 0xf083
0x000000000010675c : ret 0xf175
0x00000000000224e2 : ret 0xf26
0x0000000000109bea : ret 0xf30
0x00000000000f6837 : ret 0xf3e8
0x0000000000025a24 : ret 0xf41
0x00000000000fc489 : ret 0xf45
0x000000000002fd39 : ret 0xf475
0x0000000000113a24 : ret 0xf48
0x00000000000ffe5f : ret 0xf49
0x00000000000f5e36 : ret 0xf4e8
0x00000000000f5d35 : ret 0xf5e8
0x00000000000287d8 : ret 0xf66
0x00000000000021c6 : ret 0xf717
0x000000000001cb2f : ret 0xf74
0x000000000010b533 : ret 0xf7e8
0x00000000000fc138 : ret 0xf980
0x0000000000028031 : ret 0xf9e8
0x00000000000a48b1 : ret 0xfa39
0x00000000000c4d4a : ret 0xfac5
0x00000000000a487b : ret 0xfad1
0x0000000000031f30 : ret 0xfae8
0x00000000000d358a : ret 0xfafd
0x00000000000e8821 : ret 0xfc3
0x00000000000f672e : ret 0xfce8
0x0000000000128140 : ret 0xfd73
0x0000000000108e9a : ret 0xfe1c
0x00000000000f601b : ret 0xfe8
0x000000000004905a : ret 0xfebb
0x0000000000111eba : ret 0xfee3
0x000000000010ceea : ret 0xfefd
0x0000000000109fca : ret 0xff81
0x00000000000ffa4a : ret 0xff85
0x000000000010e46a : ret 0xff8c
0x000000000010ca3a : ret 0xff8f
0x00000000000fb70a : ret 0xff96
0x00000000000d6884 : ret 0xffb2
0x00000000000e6140 : ret 0xffb9
0x0000000000100a8a : ret 0xffc2
0x00000000001127aa : ret 0xffc8
0x00000000000d5c35 : ret 0xffd1
0x0000000000110f2a : ret 0xffd5
0x00000000001104ba : ret 0xffe1
0x000000000010eceb : ret 0xffe8
0x0000000000104097 : ret 0xfff0
0x000000000012d77d : ret 0xfff2
0x00000000001376dd : ret 0xfff4
0x00000000000a3bc3 : ret 0xfff7
0x000000000012ea5d : ret 0xfff8
0x0000000000033cca : ret 0xfff9
0x00000000000d3327 : ret 0xfffa
0x000000000006b2d3 : ret 0xfffb
0x000000000009856e : ret 0xfffc
0x0000000000040798 : ret 0xfffd
0x000000000004f275 : ret 0xfffe
0x000000000001f957 : ret 0xffff
0x0000000000003b18 : ret 1
0x00000000000010ac : ret 2
0x00000000000012d8 : ret 3
0x00000000000080f9 : ret 4
0x0000000000005fb1 : ret 5
0x0000000000001a40 : ret 6
0x0000000000062308 : ret 7
0x0000000000052327 : ret 8
0x000000000004c538 : ret 9
0x000000000012e429 : retf 0 ; or byte ptr [rsi - 8], ah ; jmp qword ptr [rax]
0x000000000013e0dd : retf 0 ; push rax ; sub bh, dl ; call qword ptr [rsi]
0x000000000001b508 : retf 0x32 ; test rax, rax ; je 0x1b51a ; call rax
0x000000000003278a : retf 0xf631 ; call qword ptr [rax]
0x000000000013fe81 : retf ; cli ; jmp rdi
0x00000000001300b5 : retf ; sti ; jmp rsp
0x000000000013d740 : rol al, 0 ; add ah, ch ; loope 0x13d747 ; jmp qword ptr [rdx]
0x0000000000131128 : rol byte ptr [rax - 0x3947ffff], 0xfd ; jmp rax
0x000000000001f4bc : rol byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000000f33f8 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013d741 : rol byte ptr [rax], 0 ; in al, dx ; loope 0x13d746 ; jmp qword ptr [rdx]
0x000000000012e609 : rol byte ptr [rax], 1 ; add al, bh ; xchg eax, esi ; clc ; jmp rsp
0x000000000012e601 : rol byte ptr [rax], 1 ; add al, ch ; xchg eax, esi ; clc ; call rax
0x00000000000b0d93 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010e099 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; test eax, eax ; jne 0x10e0ac ; ret
0x00000000000f7fa9 : rol byte ptr [rbx + 0x66c301c8], 0x90 ; xor eax, eax ; ret
0x0000000000104854 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x00000000000e9269 : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x394d
0x000000000012f798 : rol byte ptr [rcx + rax], 1 ; add byte ptr [rax], bl ; push -7 ; jmp rsp
0x00000000001304c0 : rol byte ptr [rcx + rax], 1 ; mov sil, 0xfc ; jmp rsp
0x000000000010ece8 : rol byte ptr [rcx + rcx*4 - 0x3e], 0xe8 ; jmp rax
0x00000000000f8fe4 : rol byte ptr [rcx - 0x7d], 0xf9 ; add dword ptr [rbp - 0x2e], esi ; ret
0x00000000000e761a : rol byte ptr [rcx], 0x48 ; cmp eax, 0x44 ; jne 0xe7619 ; ret
0x00000000000e7a8a : rol byte ptr [rcx], 0x48 ; cmp eax, 0x44 ; jne 0xe7a89 ; ret
0x0000000000106d58 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x106d59 ; xor eax, eax ; ret
0x00000000000f7368 : rol byte ptr [rcx], 0x48 ; cmp edx, eax ; jne 0xf7361 ; xor eax, eax ; ret
0x00000000000f7ff4 : rol byte ptr [rcx], 0x48 ; cmp edx, eax ; jne 0xf7fe9 ; xor eax, eax ; ret
0x00000000000f8da8 : rol byte ptr [rcx], 0x48 ; cmp esi, eax ; jne 0xf8da8 ; ret
0x00000000000f80e2 : rol byte ptr [rcx], 0x80 ; cmp al, 7 ; add byte ptr [rbp - 0xa], dh ; ret
0x000000000012f688 : rol byte ptr [rcx], 1 ; add dword ptr [rax], eax ; cmp byte ptr [rbp - 7], ah ; call qword ptr [rax]
0x0000000000089c86 : rol byte ptr [rdi], 0 ; pop rax ; pop rdx ; jmp 0x89c55
0x000000000012f7f8 : rol byte ptr [rip + 0x6ad80001], 0xf9 ; call rsp
0x0000000000113a1f : rol dword ptr [rax + 0x48], 0xf ; ret 0xf48
0x000000000012e681 : rol dword ptr [rax], 1 ; add al, ch ; xchg eax, edi ; clc ; call qword ptr [rax]
0x000000000012e621 : rol dword ptr [rax], 1 ; add byte ptr [rax], ch ; xchg eax, edi ; clc ; jmp qword ptr [rax]
0x000000000000a068 : rol dword ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7b
0x00000000000f7975 : rol dword ptr [rcx], 0x48 ; cmp ecx, edx ; jne 0xf7978 ; ret
0x00000000000f753a : rol dword ptr [rcx], 0x48 ; cmp edx, ecx ; ja 0xf7538 ; pop rbx ; ret
0x00000000000f77da : rol dword ptr [rcx], 0x48 ; cmp edx, ecx ; jg 0xf77d8 ; pop rbx ; ret
0x00000000000f7562 : rol dword ptr [rcx], 0x48 ; cmp edx, ecx ; jne 0xf7560 ; ret
0x00000000000f782a : rol dword ptr [rcx], 0x48 ; cmp edx, ecx ; jne 0xf7828 ; ret
0x00000000000f8d48 : rol dword ptr [rcx], 0x48 ; cmp edx, ecx ; jne 0xf8d40 ; ret
0x000000000001c2f9 : rol dword ptr [rdx], -0x2d ; loopne 0x1c2f6 ; ret
0x000000000012e3a0 : ror al, 0 ; add byte ptr [rax + 0x22], bh ; clc ; call rsp
0x00000000000f1b24 : ror byte ptr [rax + 0x21], 1 ; ret
0x000000000001c95e : ror byte ptr [rax + 0x39], 1 ; ret 0x870f
0x00000000000f480c : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x000000000001f857 : ror byte ptr [rax + 0x5d5b0755], 0x41 ; pop rsp ; ret
0x00000000000ff02f : ror byte ptr [rax + 0x63], 4 ; or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000002e92c : ror byte ptr [rax + 1], 1 ; ret
0x00000000000e73ed : ror byte ptr [rax - 0x3f], 0xea ; add ecx, dword ptr [rax - 0x7f] ; ret 0x8000
0x00000000000f95c3 : ror byte ptr [rax - 0x73], 4 ; ret
0x00000000000f08f9 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdi ; ret
0x000000000001d26e : ror byte ptr [rax - 0x77], 1 ; push rcx ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004d094 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000002ea61 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001e4eb : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e01ee : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000103fa2 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f2b8c : ror byte ptr [rax - 0x7d], 0xc5 ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000000225ca : ror byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000287b1 : ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000027039 : ror byte ptr [rax - 0x7f], 1 ; ret
0x000000000002fd35 : ror byte ptr [rax], 0x48 ; cmp edx, eax ; jne 0x2fd37 ; ret
0x0000000000030125 : ror byte ptr [rax], 0x48 ; cmp edx, eax ; jne 0x30127 ; ret
0x00000000000fa1ed : ror byte ptr [rbp - 0x77], 0xc2 ; syscall ; ret
0x00000000000f1821 : ror byte ptr [rcx + 0x21], 1 ; ret
0x00000000000f241a : ror byte ptr [rcx + 0x21], cl ; ret 0x894c
0x000000000002ee66 : ror byte ptr [rcx + 0x39], 1 ; ret 0x6474
0x00000000000da321 : ror byte ptr [rcx + 1], cl ; fld qword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8548
0x0000000000026cd6 : ror byte ptr [rcx + r9*4 - 1], 1 ; call rcx
0x0000000000039781 : ror byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x0000000000026cd7 : ror byte ptr [rcx + rcx*4 - 1], 1 ; call rcx
0x000000000007aaf5 : ror byte ptr [rcx + rcx*4 - 9], 0xe8 ; ret 0x8b1
0x00000000000dd7d7 : ror byte ptr [rcx + rdi - 0x31], 0xf ; xchg eax, ebx ; ret 0xd189
0x00000000000f3d87 : ror byte ptr [rcx - 0x7f], cl ; ret
0x00000000001307b0 : ror byte ptr [rdi + 1], 0 ; mov ch, ah ; cld ; call rsp
0x00000000000e890f : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x3949
0x00000000000ed798 : ror byte ptr [rdi], 0x24 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000069d4a : ror byte ptr [rdi], 0x84 ; add eax, 0xe9fffff9 ; ret
0x00000000000e9c7f : ror byte ptr [rdi], 0x84 ; add qword ptr [r8], r8 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000004a2e5 : ror byte ptr [rdi], 0x84 ; add r8b, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000003891f : ror byte ptr [rdi], 0x84 ; mov al, byte ptr [rdi] ; add byte ptr [rax], al ; call rax
0x000000000001d85b : ror byte ptr [rdi], 0x84 ; outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000032dee : ror byte ptr [rdi], 0x84 ; ret
0x000000000003812f : ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000d1f13 : ror byte ptr [rdi], 0x84 ; ret 0x46
0x00000000000c54e7 : ror byte ptr [rdi], 0x84 ; ret 0xad
0x00000000000d5c32 : ror byte ptr [rdi], 0x84 ; ret 0xffd1
0x000000000007a7c7 : ror byte ptr [rdi], 0x84 ; ret 1
0x00000000000eaf97 : ror byte ptr [rdi], 0x84 ; ret 2
0x00000000000a3175 : ror byte ptr [rdi], 0x84 ; ret 7
0x00000000000a5025 : ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000102307 : ror byte ptr [rdi], 0x84 ; sub al, 1 ; add byte ptr [rax], al ; xor edi, edi ; call rax
0x000000000003ff1c : ror byte ptr [rdi], 0x85 ; ret
0x00000000000f5217 : ror byte ptr [rdi], 0x85 ; ret 0
0x00000000000c49b7 : ror byte ptr [rdi], 0x85 ; ret 0xa7
0x0000000000033398 : ror byte ptr [rdi], 0x87 ; add al, byte ptr [r8] ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000010b9e9 : ror byte ptr [rdi], 0x87 ; ret 1
0x00000000000e0505 : ror byte ptr [rdi], 0x94 ; ret 0x3949
0x0000000000024952 : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0xd108
0x00000000001138cb : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x00000000001312b8 : ror byte ptr [rdx + 0x13180001], 0xfe ; jmp rax
0x0000000000130670 : ror byte ptr [rdx + 1], 1 ; add byte ptr [rax], bl ; fdivr st(4) ; jmp rsp
0x00000000000f25d7 : ror byte ptr [rdx - 0x39], 0x84 ; ret
0x0000000000058c0e : ror byte ptr [rdx], 1 ; add byte ptr [rax + 0x5a], bl ; jmp 0x58bdd
0x000000000012cad0 : ror byte ptr [rsi], 0 ; sbb cl, bh ; out dx, al ; call rsp
0x0000000000146340 : ror dh, 0xfc ; jmp qword ptr [rdi]
0x00000000000fee83 : ror dword ptr [rax + 1], cl ; ret 0x2948
0x00000000000c98a5 : ror dword ptr [rax - 0x73], 0x1d ; ret
0x00000000000ca8b1 : ror dword ptr [rax - 0x73], 0x1d ; ret 0x506
0x0000000000024889 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000dc93a : ror dword ptr [rax - 0x7d], 1 ; ret 0x4818
0x00000000000fddbe : ror dword ptr [rax], -0x77 ; ret 0xeac1
0x000000000001b9ea : ror dword ptr [rax], 0x48 ; cmp ecx, eax ; jne 0x1b9e8 ; ret
0x000000000002e244 : ror dword ptr [rbp - 0x77], 0xa ; mov qword ptr [rdx], rcx ; pop rbx ; ret
0x000000000010e8dc : ror dword ptr [rcx + 0x39], 1 ; ret
0x00000000000291fd : ror dword ptr [rcx - 0x3f], cl ; jmp 0x2920c
0x00000000000dd58f : ror dword ptr [rcx - 0x3f], cl ; jmp 0xdd59e
0x00000000000f3145 : ror dword ptr [rcx - 0x77], cl ; ret 0x1ba
0x00000000000f3d97 : ror dword ptr [rcx - 0x7d], 1 ; ret 0x3101
0x00000000000232bf : ror dword ptr [rcx - 0x7d], cl ; ret 0x4d03
0x00000000000cc647 : ror dword ptr [rdi], -0x79 ; push rsp ; ret
0x00000000000cbb43 : ror dword ptr [rdi], -0x79 ; ret 0xca
0x00000000000cc5d5 : ror dword ptr [rdi], -0x79 ; stosd dword ptr [rdi], eax ; ret
0x00000000000cc75b : ror dword ptr [rdi], -0x79 ; xchg eax, ecx ; ret 0
0x00000000000fe920 : ror dword ptr [rdi], -0x7c ; hlt ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0xa2eb
0x0000000000101806 : ror dword ptr [rdi], -0x7d ; ret
0x00000000000ec35d : ror dword ptr [rdi], cl ; test dword ptr [rax], eax ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000eefbd : ror dword ptr [rdi], cl ; test dword ptr [rsp + rax], ebp ; add byte ptr [rax + 0x29], cl ; ret
0x000000000001eb30 : ror dword ptr [rdi], cl ; test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000ec04a : ror dword ptr [rdi], cl ; test edi, edi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000109b71 : ror dword ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000000f7a13 : ror dword ptr [rdi], cl ; xchg eax, ebx ; ret 0xd108
0x00000000000ff476 : ror dword ptr [rdx - 0x76b7fffe], cl ; ret 0x8948
0x00000000000dcbba : sahf ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000000000012da11 : sahf ; add byte ptr [rax], al ; cwde ; or ah, dh ; call rax
0x00000000000f976b : sahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000131611 : sahf ; add dword ptr [rax], eax ; call 0xffffffffe513149c
0x0000000000145991 : sahf ; cld ; call qword ptr [rdi]
0x00000000000e69f2 : sahf ; jl 0xe6a45 ; add byte ptr [rbp - 0xcf98b40], al ; ret
0x0000000000029b91 : sahf ; nop ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000cd912 : sahf ; ret 0x48
0x00000000000523f2 : sahf ; ret 0x50
0x00000000000f8fea : sal bl, cl ; ret
0x0000000000103565 : sal byte ptr [rax + rcx + 0x48], cl ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f2546 : sal byte ptr [rax + rdx + 0x48], 0x89 ; ret 0x8148
0x00000000000e03db : sal byte ptr [rbp + 0x12], 0x48 ; add esp, 8 ; ret
0x00000000000fac23 : sal byte ptr [rbp + 0x13], 0x48 ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x000000000010105c : sal byte ptr [rbp + 0x19], 1 ; ret
0x00000000000e02d8 : sal byte ptr [rbp + 0x25], 0x48 ; add esp, 8 ; ret
0x00000000000b0d40 : sal byte ptr [rbp + 0x48], 0x89 ; ret
0x0000000000109da3 : sal byte ptr [rbp + 0xa], 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000100fe3 : sal byte ptr [rbp + 0xa], 1 ; add rsp, 8 ; ret
0x0000000000108b62 : sal byte ptr [rbp + 0xb], cl ; mov eax, 1 ; ret
0x0000000000028359 : sal byte ptr [rbp + 0xc], 0x5b ; ret
0x000000000010bc67 : sal byte ptr [rbp + 0xe], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000102f2f : sal byte ptr [rbp + 0xe], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003369b : sal byte ptr [rbp + 2], 0xf3 ; ret
0x0000000000100f59 : sal byte ptr [rbp + 4], 1 ; ret
0x0000000000104bcb : sal byte ptr [rbp + 5], 0x48 ; add esp, 0x18 ; ret
0x00000000000d4a3d : sal byte ptr [rbp + 5], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000001034f7 : sal byte ptr [rbp + 6], 0x48 ; add esp, 8 ; ret
0x00000000000e515f : sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000feb66 : sal byte ptr [rbp + 7], 0x31 ; sal byte ptr [rcx], 0xd2 ; ret
0x000000000001e77b : sal byte ptr [rbp + 7], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010109e : sal byte ptr [rbp + 7], 1 ; ret
0x0000000000033c46 : sal byte ptr [rbp + 7], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001010dd : sal byte ptr [rbp + 8], 1 ; ret
0x00000000000f87a5 : sal byte ptr [rbp + 8], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eaba0 : sal byte ptr [rbp + rdi*2 + 0x48], 0x39 ; ret
0x0000000000033c89 : sal byte ptr [rbp + rdi*4 - 0x15], cl ; ret 0x9066
0x00000000000f80be : sal byte ptr [rbp - 0x11], cl ; ret
0x00000000000f0cb1 : sal byte ptr [rbp - 0x14], 0xf3 ; ret
0x00000000000fa0f3 : sal byte ptr [rbp - 0x16], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f093c : sal byte ptr [rbp - 0x1f], 0xc6 ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000f0b9e : sal byte ptr [rbp - 0x28], 0x5b ; ret
0x00000000000b0cb7 : sal byte ptr [rbp - 0x2a], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000001bb38 : sal byte ptr [rbp - 0x2b], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f79c3 : sal byte ptr [rbp - 0x36], 0xf3 ; ret
0x000000000010950b : sal byte ptr [rbp - 0x4e], 0xeb ; xchg eax, ebx ; xor eax, eax ; ret
0x00000000000f8e88 : sal byte ptr [rbp - 0xb], cl ; ret
0x0000000000106d5c : sal byte ptr [rbp - 0xf], 1 ; xor eax, eax ; ret
0x00000000000ead38 : sal byte ptr [rbx + rax + 0x31], 0xc0 ; ret
0x000000000006deec : sal byte ptr [rbx + rbx - 0x18], 0x4c ; ret
0x000000000005dfc4 : sal byte ptr [rbx + rbx - 0x18], 0x74 ; ret 8
0x000000000006df71 : sal byte ptr [rbx + rbx - 0x18], 0xc7 ; ret 7
0x000000000010706a : sal byte ptr [rbx + rdi*2 + 0x48], 1 ; ret
0x000000000007deb5 : sal byte ptr [rbx + rdx - 0x18], 0x83 ; ret
0x00000000000f11a0 : sal byte ptr [rcx + rdx + 0x48], 0x83 ; ret
0x00000000001090e9 : sal byte ptr [rcx], 0xc9 ; pop rbx ; pop rbp ; xor edx, edx ; jmp rax
0x00000000000febbd : sal byte ptr [rcx], 0xd2 ; add rsp, 8 ; ret
0x00000000000feb6a : sal byte ptr [rcx], 0xd2 ; ret
0x0000000000101e18 : sal byte ptr [rdi + 0x33], 1 ; ret
0x0000000000100d18 : sal byte ptr [rdi + 0x34], 1 ; ret
0x000000000005f976 : sal byte ptr [rdi + rsi*2 - 0x18], cl ; ret 0x8a8
0x00000000000ea202 : sal byte ptr [rdx + 0x2a], 1 ; xor eax, eax ; ret
0x000000000010909b : sal byte ptr [rdx + rax + 0x5b], 0xc3 ; mov rax, rbx ; pop rbx ; ret
0x000000000001b50d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x00000000000ea458 : sal byte ptr [rdx + rcx + 0x48], 0x89 ; ret
0x0000000000100dd3 : sal byte ptr [rdx + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e613b : sal byte ptr [rdx + rdx*2 + 0x48], 0x89 ; ret 0xffb9
0x00000000000f8d7f : sal byte ptr [rdx - 0x12], 1 ; ret
0x00000000000fed95 : sal byte ptr [rdx - 0x38], cl ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000f873c : sal byte ptr [rsi + rbp + 0x48], 1 ; ret 0x8d4a
0x00000000000f11d8 : sal byte ptr [rsi + rcx + 0x48], 0x83 ; ret
0x00000000000adf5d : sal byte ptr [rsi + rdi*2 - 0x18], 0xdb ; ret 3
0x0000000000113d48 : sal dword ptr [rbp + 6], 1 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000113eb3 : sal dword ptr [rbp + 6], 1 ; add rsp, 0x30 ; pop rbp ; ret
0x00000000000f79ad : sal dword ptr [rbp - 0x10], -0xd ; ret
0x000000000010d80d : sal dword ptr [rbp - 0x10], 1 ; ret
0x000000000001b9ee : sal dword ptr [rbp - 0x11], -0xd ; ret
0x00000000000f8e41 : sal dword ptr [rbp - 0x14], 1 ; ret
0x00000000000fefab : sal dword ptr [rbp - 0x3e], cl ; pop rbx ; ret
0x00000000000f7979 : sal dword ptr [rbp - 0xc], 1 ; ret
0x00000000000e618d : sal dword ptr [rbx + 8], 0x5b ; ret
0x00000000000e884e : sal dword ptr [rbx - 0x1b], 0x48 ; sub eax, edx ; ret
0x00000000000e98d6 : sal dword ptr [rbx - 0x48], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000023587 : sal dword ptr [rdx + 6], 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000012d13d : sal eax, cl ; jmp qword ptr [rax]
0x0000000000136c65 : sal ebx, cl ; call qword ptr [rbx]
0x000000000012dbed : sal esp, 1 ; call rsp
0x000000000012d13c : sal rax, cl ; jmp qword ptr [rax]
0x000000000012e811 : salc ; add byte ptr [rax], al ; call 0xffffffffd112e0c9
0x00000000000b0cb9 : salc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ea236 : salc ; jae 0xea20d ; mov eax, 1 ; ret
0x00000000000f6b64 : salc ; jb 0xf6b74 ; ret
0x00000000000faf2a : salc ; mov eax, 1 ; jne 0xfaee9 ; ret
0x00000000000b99e6 : salc ; ret 4
0x000000000010317a : salc ; sub eax, 0x89480001 ; ret 0x8948
0x00000000001464a5 : sar ah, 1 ; jmp qword ptr [rdi]
0x0000000000146701 : sar ah, cl ; call rdi
0x00000000001305dd : sar ah, cl ; call rsp
0x000000000012f3e8 : sar al, 0 ; add byte ptr [rax + 0x17], bh ; stc ; call rsp
0x0000000000142525 : sar bl, 1 ; call qword ptr [rsi]
0x00000000000fa224 : sar byte ptr [rax + 0x4e], cl ; syscall ; ret
0x00000000000f9b62 : sar byte ptr [rax + 0xa], cl ; syscall ; ret
0x00000000000f9b94 : sar byte ptr [rax + 2], cl ; syscall ; ret
0x00000000000fa235 : sar byte ptr [rax + 8], cl ; syscall ; ret
0x0000000000001f47 : sar byte ptr [rax - 0x44], cl ; in al, dx ; call rdi
0x000000000013d450 : sar byte ptr [rbp - 0x3cd40000], 1 ; stc ; jmp rcx
0x000000000012e0a0 : sar byte ptr [rbx - 0x36380000], 0xf6 ; call rsp
0x00000000000de5b8 : sar byte ptr [rcx], 0xd7 ; setge al ; ret
0x00000000000025ea : sar byte ptr [rdx - 0x413c6459], cl ; test al, 0x9b ; ret
0x00000000000d75c3 : sar byte ptr [rsi + 0xd1], 0xe8 ; ret 0x2ab
0x000000000013117d : sar ch, 1 ; jmp rax
0x00000000000f832e : sar dword ptr [rdi - 0x11], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e8818 : sar dword ptr [rdx], 1 ; cmovae rax, rdx ; ret
0x000000000010bbc2 : sar dword ptr [rsi + 0x1fc], -0x18 ; ret
0x00000000000fa5f9 : sar eax, cl ; and eax, 1 ; ret
0x00000000001310ed : sar ebp, -1 ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x1310fc ; add byte ptr [rax], cl ; ret 0xfffd
0x00000000001425b5 : sar ebx, 1 ; jmp qword ptr [rcx]
0x0000000000146685 : sar esp, 1 ; jmp qword ptr [rdi]
0x000000000013057d : sar esp, 1 ; jmp rax
0x00000000001305f5 : sar esp, cl ; call qword ptr [rax]
0x00000000001464e0 : sar spl, 1 ; jmp qword ptr [rdi]
0x0000000000034029 : sbb al, 0 ; jne 0x34035 ; ret
0x0000000000002e6d : sbb al, 0x16 ; int1 ; ret
0x000000000013dec4 : sbb al, 0x23 ; cli ; call qword ptr [rdi]
0x00000000000fb83f : sbb al, 0x24 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001059b3 : sbb al, 0x48 ; add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000273d6 : sbb al, 0x53 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000128124 : sbb al, 0x74 ; std ; call qword ptr [rbx]
0x000000000003860a : sbb al, 0xb ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000001301fd : sbb al, 0xfc ; jmp qword ptr [rax]
0x0000000000143314 : sbb al, 0xfd ; sti ; call qword ptr [rbx]
0x0000000000130674 : sbb al, bl ; cld ; jmp rsp
0x0000000000102962 : sbb al, byte ptr [rsi - 0x76b70001] ; ret
0x0000000000103f69 : sbb al, ch ; adc dword ptr [rax - 0xf], edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000010d1b7 : sbb al, ch ; ret
0x00000000000f71b8 : sbb al, ch ; ret 0xd
0x000000000010ca38 : sbb al, ch ; ret 0xff8f
0x0000000000122ab5 : sbb bh, ah ; jmp rsi
0x000000000002a79d : sbb bh, bh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ff04c : sbb bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000102429 : sbb bh, byte ptr [rdi + 1] ; call rax
0x000000000012dc2c : sbb bh, ch ; hlt ; jmp rsp
0x000000000012e16d : sbb bh, dh ; call qword ptr [rax]
0x000000000013913d : sbb bh, dh ; call rsp
0x000000000012eccc : sbb bl, ch ; clc ; call qword ptr [rax]
0x00000000000e87b7 : sbb bl, dh ; ret
0x00000000000eb09d : sbb byte ptr [r8 - 0x7d], cl ; ret 0x4801
0x00000000000e8be8 : sbb byte ptr [rax + 0x39], cl ; ret 0x972
0x000000000010109b : sbb byte ptr [rax + 0x39], cl ; sal byte ptr [rbp + 7], 1 ; ret
0x00000000000ea1ff : sbb byte ptr [rax + 0x39], cl ; sal byte ptr [rdx + 0x2a], 1 ; xor eax, eax ; ret
0x00000000000e9c24 : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000e7dc4 : sbb byte ptr [rax + rax], al ; ret
0x0000000000023e39 : sbb byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000e969c : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000001001ea : sbb byte ptr [rax - 0x77], cl ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000010b5c3 : sbb byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0x60e8
0x000000000006f114 : sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000100ad8 : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000102a2f : sbb byte ptr [rax - 0x77], cl ; ret 0x8b49
0x0000000000107067 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rdi*2 + 0x48], 1 ; ret
0x0000000000029f26 : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000001d272 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000109cb6 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000f9cd1 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; ret
0x00000000000f7e83 : sbb byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033699 : sbb byte ptr [rbp - 0xcfd8a40], al ; ret
0x00000000000fdb75 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000217b7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001bb3e : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000143b68 : sbb byte ptr [rbx], dl ; cld ; call qword ptr [rbx]
0x0000000000105fb5 : sbb byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000025234 : sbb byte ptr [rcx + rcx*4 - 0x12], cl ; call 0x21456
0x000000000008d6d1 : sbb byte ptr [rcx - 0x2076b716], cl ; call qword ptr [rip + 0x4cc2ab]
0x000000000008d775 : sbb byte ptr [rcx - 0x2076b716], cl ; call rax
0x000000000012fbe1 : sbb byte ptr [rcx], al ; add byte ptr [rax + 0x5f], ch ; sti ; call rax
0x000000000012fbe9 : sbb byte ptr [rcx], al ; add byte ptr [rax + 0x63], cl ; sti ; call qword ptr [rax]
0x00000000000dd37e : sbb byte ptr [rcx], dh ; neg byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x00000000000f9e6d : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000013158c : sbb byte ptr [rdi - 2], ch ; jmp rsp
0x000000000012f79c : sbb byte ptr [rdx - 7], ch ; jmp rsp
0x00000000000e87cf : sbb byte ptr [rdx], bh ; cmovae rax, rdx ; ret
0x000000000012cad4 : sbb cl, bh ; out dx, al ; call rsp
0x000000000003175a : sbb cl, byte ptr [rax + 0xe] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000079a1a : sbb dh, 0 ; add byte ptr [rcx], al ; push rbx ; push rax ; call 0x105cc9
0x000000000012ce4d : sbb dh, al ; call rsp
0x00000000000a82ba : sbb dh, byte ptr [rcx] ; shr al, cl ; ret
0x00000000001300bc : sbb dh, cl ; sti ; call qword ptr [rax]
0x00000000001301dc : sbb dl, dh ; sti ; call rsp
0x000000000013302d : sbb dword ptr [rax], eax ; add byte ptr [rax], ah ; pushfq ; out dx, eax ; jmp rcx
0x000000000012813c : sbb dword ptr [rbp + rdi*8 - 1], esi ; ret 0xfd73
0x00000000001071e5 : sbb eax, -1 ; ret
0x0000000000102efa : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000105ff1 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000133255 : sbb eax, dword ptr [rax] ; add byte ptr [rax], ch ; mov cl, 0xef ; jmp rsp
0x00000000001431cd : sbb eax, dword ptr [rcx] ; add byte ptr [rax - 0xc], dl ; sti ; call rsi
0x00000000000f7fa8 : sbb eax, eax ; or eax, 1 ; ret
0x0000000000044577 : sbb ebp, eax ; ret
0x000000000004f878 : sbb ebp, eax ; ret 0x9a9
0x00000000000ddc78 : sbb ebp, eax ; ret 0xc5
0x000000000010105e : sbb ebx, esi ; ret
0x00000000000f6de8 : sbb edi, dword ptr [rax] ; ret 0x775
0x00000000000e26e1 : sbb edi, dword ptr [rdi - 0x76b7ffb9] ; ret
0x000000000012faa5 : sbb edi, ebx ; jmp rax
0x000000000002a8b5 : sbb edi, edi ; dec dword ptr [rax + 0x29] ; ret
0x0000000000143db1 : sbb esp, edi ; jmp rbx
0x00000000000e87b6 : sbb r11b, r14b ; ret
0x000000000002a92d : sbb r15, r15 ; dec dword ptr [rax + 0x29] ; ret
0x00000000001431cc : sbb r8, qword ptr [rcx] ; add byte ptr [rax - 0xc], dl ; sti ; call rsi
0x00000000001071e4 : sbb rax, -1 ; ret
0x00000000000e3701 : scasb al, byte ptr [rdi] ; add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000b689e : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000001d73e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; call qword ptr [rax]
0x00000000000777be : scasb al, byte ptr [rdi] ; and byte ptr [rsi], cl ; add rsp, 0x28 ; ret
0x000000000013fb71 : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000000f0731 : scasb al, byte ptr [rdi] ; nop word ptr [rax + rax] ; ret
0x00000000000e59de : scasb al, byte ptr [rdi] ; out 0xff, eax ; lcall ptr [rax + 0x5a] ; leave ; ret
0x00000000000bfd0e : scasb al, byte ptr [rdi] ; pop rdi ; add al, 0 ; pop rcx ; pop rsi ; jmp 0xbfce0
0x00000000000faf31 : scasb al, byte ptr [rdi] ; ret
0x0000000000099a0e : scasb al, byte ptr [rdi] ; ret 6
0x00000000000ba11d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000013fba9 : scasd eax, dword ptr [rdi] ; cli ; jmp rcx
0x000000000008d915 : scasd eax, dword ptr [rdi] ; in al, 0x4c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000056f0d : scasd eax, dword ptr [rdi] ; in eax, dx ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x56ede
0x0000000000058c0d : scasd eax, dword ptr [rdi] ; ror byte ptr [rdx], 1 ; add byte ptr [rax + 0x5a], bl ; jmp 0x58bde
0x000000000012ff8d : scasd eax, dword ptr [rdi] ; sti ; call rax
0x0000000000002640 : scasd eax, dword ptr [rdi] ; wait ; ret
0x00000000000fe734 : setb al ; ret
0x00000000000fcf26 : setbe al ; ret
0x00000000000faa95 : setbe dl ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000103fa0 : sete al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000104bfe : sete al ; add rsp, 0x18 ; ret
0x00000000000f9d68 : sete al ; add rsp, 0x20 ; ret
0x00000000000f942b : sete al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fb76d : sete al ; add rsp, 8 ; ret
0x000000000001c24d : sete al ; ret
0x00000000000faf5a : sete al ; shl rax, 4 ; ret
0x000000000010ddec : setg al ; ret
0x00000000000f737d : setge al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000de5bb : setge al ; ret
0x0000000000034c97 : setl al ; ret
0x00000000000e8a97 : setne al ; add rsp, 0x28 ; ret
0x0000000000029737 : setne al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e0231 : setne al ; add rsp, 8 ; ret
0x00000000000fadbb : setne al ; movzx eax, al ; add eax, 1 ; ret
0x000000000001c22d : setne al ; ret
0x00000000001425b1 : sgdt ptr [rax] ; lodsb al, byte ptr [rsi] ; sar ebx, 1 ; jmp qword ptr [rcx]
0x000000000012fa39 : sgdt ptr [rax] ; mov dh, bh ; cli ; jmp qword ptr [rax]
0x000000000012eb78 : shl al, 0 ; add al, bh ; leave ; clc ; call rsp
0x00000000000fa5ad : shl byte ptr [rax], cl ; adc al, 7 ; ret
0x000000000012dc28 : shl byte ptr [rdi - 0x10e80000], 1 ; hlt ; jmp rsp
0x000000000012ff48 : shl byte ptr [rdi], 1 ; add byte ptr [rax - 0x56], cl ; sti ; call rsp
0x00000000000f9387 : shl byte ptr [rsi + 0x44], 0xf ; outsd dx, dword ptr [rsi] ; ret
0x000000000012dbe8 : shl byte ptr [rsi - 0x2e380000], 0xf4 ; call rsp
0x00000000000f93af : shl dword ptr [rsi + 0xf], -0x15 ; ret 0xf66
0x00000000000faf5e : shl eax, 4 ; ret
0x000000000001c2fb : shl eax, cl ; ret
0x00000000000fe60a : shl ecx, 0x20 ; or rdx, rcx ; ret
0x000000000010484f : shl edx, 0xa ; mov rax, rdx ; pop r12 ; ret
0x00000000000fa5aa : shl edx, cl ; not edx ; and byte ptr [rdi + rax], dl ; ret
0x00000000000fff4e : shl esi, 5 ; add rax, rsi ; ret
0x00000000000faf5d : shl rax, 4 ; ret
0x00000000000fe609 : shl rcx, 0x20 ; or rdx, rcx ; ret
0x000000000010484e : shl rdx, 0xa ; mov rax, rdx ; pop r12 ; ret
0x00000000000fff4d : shl rsi, 5 ; add rax, rsi ; ret
0x00000000000d6229 : shr al, 0x21 ; imul eax, dword ptr [rdx], 0 ; jmp 0xd24fd
0x00000000000e4881 : shr al, 0x29 ; test byte ptr [rcx], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000100aa8 : shr al, 0xa2 ; ret 0xffff
0x00000000000de4ae : shr al, 0xfc ; out 1, eax ; add cl, ch ; ret 0xfffd
0x00000000000d624d : shr al, 0xfd ; push 2 ; add cl, ch ; ret 0xffff
0x000000000001c327 : shr al, 1 ; and eax, 3 ; ret
0x000000000001f057 : shr al, 6 ; movzx eax, al ; ret
0x00000000000b9ab4 : shr al, 6 ; ret 4
0x00000000000a82bc : shr al, cl ; ret
0x000000000012f0a0 : shr bh, 1 ; add byte ptr [rax], al ; call 0xffffffffe512e9b5
0x00000000000efe12 : shr bl, 0xbc ; cmp dh, byte ptr [rax - 0x7cb79594] ; ret
0x000000000012ff90 : shr byte ptr [rax], 1 ; add dword ptr [rax], eax ; test al, 0xb0 ; sti ; jmp rsp
0x0000000000130db8 : shr byte ptr [rbp + 1], 1 ; add byte ptr [rax], bh ; js 0x130dc3 ; jmp rsp
0x000000000012cf30 : shr byte ptr [rbp], 0 ; fcomp dword ptr [rcx - 0x10] ; call qword ptr [rax]
0x0000000000130d38 : shr byte ptr [rbx + 1], 0 ; mov byte ptr [rdi - 3], ch ; call rsp
0x00000000000f0f14 : shr byte ptr [rbx], cl ; ret
0x00000000000fddc6 : shr byte ptr [rcx - 0x40], 1 ; xchg eax, ebp ; jmp 0xffffffffc34139a8
0x00000000000fe1d6 : shr byte ptr [rcx - 0x40], 1 ; xchg eax, ebp ; jmp 0xffffffffc3413db8
0x000000000013e5f1 : shr ch, cl ; call qword ptr [rbx]
0x000000000001c305 : shr eax, 8 ; ret
0x00000000000f8590 : shr ecx, 1 ; ret
0x0000000000103733 : shr edx, 1 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e52cb : shr esi, -1 ; lcall ptr [rax + 0x5a] ; leave ; ret
0x0000000000131cb5 : shr esi, cl ; call qword ptr [rsi]
0x000000000001e93f : sldt word ptr [rax] ; add byte ptr [rax + 0x21], cl ; call 0x48c4729b
0x000000000001ed41 : sldt word ptr [rax] ; add byte ptr [rax + 0x21], cl ; call 0x48c4769d
0x000000000001bc2d : sldt word ptr [rax] ; add byte ptr [rax + 0x21], cl ; fmul dword ptr [rax - 0x77] ; ret 0xc148
0x000000000001d848 : sldt word ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000012f431 : stc ; add byte ptr [rax], al ; or byte ptr [rax], ah ; stc ; call rax
0x00000000000fa12d : stc ; add dh, byte ptr [rdi + rax + 0x5b] ; ret
0x00000000000f8f93 : stc ; add dword ptr [rax - 0x77], ecx ; jne 0xf8fc5 ; ret
0x0000000000103059 : stc ; add dword ptr [rbp + 3], esi ; ret
0x00000000000f8fe7 : stc ; add dword ptr [rbp - 0x2e], esi ; ret
0x000000000012effe : stc ; call qword ptr [rax]
0x000000000012f09e : stc ; call rax
0x000000000012f3ee : stc ; call rsp
0x000000000013089d : stc ; cld ; call rax
0x000000000012f7ae : stc ; dec dword ptr [rax + 0x6a480001] ; stc ; jmp qword ptr [rax]
0x000000000012f4ce : stc ; dec dword ptr [rsp + rdi*8] ; add byte ptr [rax], al ; or byte ptr [rdi], ch ; stc ; jmp qword ptr [rax]
0x000000000012f23e : stc ; dec dword ptr [rsp + rsi*8] ; add byte ptr [rax], al ; clc ; or edi, ecx ; jmp qword ptr [rax]
0x000000000012f1be : stc ; dec esp ; add byte ptr [rax], al ; clc ; or bh, cl ; jmp rax
0x000000000012f72e : stc ; dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rax + 0x69], cl ; stc ; jmp rax
0x000000000012f2de : stc ; dec esp ; cmc ; add byte ptr [rax], al ; or byte ptr [rax], dl ; stc ; jmp rax
0x000000000012f036 : stc ; dec esp ; out dx, al ; add byte ptr [rax], al ; clc ; add al, 0xf9 ; jmp rax
0x000000000012f7f6 : stc ; inc eax ; add eax, 0x6ad80001 ; stc ; call rsp
0x000000000012f3e6 : stc ; inc eax ; clc ; add byte ptr [rax], al ; js 0x12f40e ; stc ; call rsp
0x0000000000002434 : stc ; int1 ; mov edi, 0xe7db3878 ; ret
0x000000000012f246 : stc ; jmp qword ptr [rax]
0x000000000013d626 : stc ; jmp qword ptr [rcx]
0x000000000013d746 : stc ; jmp qword ptr [rdx]
0x000000000012f03e : stc ; jmp rax
0x000000000013d456 : stc ; jmp rcx
0x000000000012f0a6 : stc ; jmp rsp
0x00000000000f16f6 : stc ; jne 0xf1708 ; xor eax, eax ; mov dword ptr [rdx + 8], eax ; ret
0x00000000000fc134 : stc ; or cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x000000000012caed : stc ; out dx, al ; call qword ptr [rax]
0x000000000012cad5 : stc ; out dx, al ; call rsp
0x000000000003bb53 : stc ; ret
0x00000000000abc53 : stc ; ret 3
0x0000000000122715 : stc ; sti ; call qword ptr [rax]
0x0000000000122709 : stc ; sti ; dec eax ; stc ; sti ; jmp rax
0x000000000012270d : stc ; sti ; jmp rax
0x00000000000de8cc : std ; add byte ptr [r8 - 0x75], r9b ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000002259f : std ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000130a56 : std ; call qword ptr [rax]
0x0000000000128126 : std ; call qword ptr [rbx]
0x0000000000130a7e : std ; call rax
0x0000000000129da6 : std ; call rdx
0x0000000000128092 : std ; call rsp
0x0000000000130cee : std ; dec dword ptr [rbx + rbp*2] ; add dword ptr [rax], eax ; clc ; outsb dx, byte ptr [rsi] ; std ; jmp qword ptr [rax]
0x00000000001308be : std ; inc dword ptr [rbp + rdx*2 + 0x2880001] ; std ; call rsp
0x0000000000128102 : std ; inc dword ptr [rcx + rsi*2] ; std ; jmp rsp
0x0000000000129d96 : std ; inc dword ptr [rdx] ; std ; push rsp ; loope 0x129da5 ; jmp rsp
0x0000000000130d36 : std ; inc eax ; imul eax, dword ptr [rcx], 0 ; mov byte ptr [rdi - 3], ch ; call rsp
0x000000000012811e : std ; inc esi ; jae 0x128129 ; lcall ptr [rsp + rsi*2] ; std ; call qword ptr [rbx]
0x0000000000128112 : std ; jmp qword ptr [rax + rsi*2 - 3]
0x0000000000129df2 : std ; jmp qword ptr [rax]
0x0000000000130a06 : std ; jmp rax
0x000000000012811a : std ; jmp rsi
0x00000000001272ea : std ; jmp rsp
0x0000000000128122 : std ; lcall ptr [rsp + rsi*2] ; std ; call qword ptr [rbx]
0x00000000000d624f : std ; push 2 ; add cl, ch ; ret 0xffff
0x000000000013090e : std ; push qword ptr [rax + 0x8000156] ; or ch, bh ; call rsp
0x00000000001311f6 : std ; push qword ptr [rax - 0x77fffe7b] ; out dx, al ; std ; call rsp
0x00000000001309fe : std ; push qword ptr [rbx + rbx*2 + 0x2e980001] ; std ; jmp rax
0x0000000000130c4e : std ; push qword ptr [rdi + 0x5c280001] ; std ; call rax
0x0000000000130e76 : std ; push rsp ; jo 0x130e85 ; add byte ptr [rax], cl ; test ch, bh ; call qword ptr [rax]
0x0000000000129d9a : std ; push rsp ; loope 0x129da1 ; jmp rsp
0x0000000000130a4e : std ; push rsp ; pop rbp ; add dword ptr [rax], eax ; fdiv dword ptr [rdi] ; std ; call qword ptr [rax]
0x00000000000398bf : std ; ret
0x0000000000143315 : std ; sti ; call qword ptr [rbx]
0x000000000012f4b9 : sti ; add byte ptr [rax], al ; fsubr dword ptr [rsi] ; stc ; jmp rsp
0x000000000010e463 : sti ; call 0x10f7a7
0x0000000000122612 : sti ; call qword ptr [rax]
0x00000000001412fe : sti ; call qword ptr [rbx]
0x000000000014039e : sti ; call qword ptr [rcx]
0x0000000000140b5a : sti ; call qword ptr [rdi]
0x00000000001423ba : sti ; call qword ptr [rsi]
0x0000000000122576 : sti ; call rax
0x0000000000140db6 : sti ; call rcx
0x00000000001431d2 : sti ; call rsi
0x000000000012ff4e : sti ; call rsp
0x00000000000ea471 : sti ; clc ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000000f6b18 : sti ; cmp sil, 9 ; sete al ; ret
0x000000000012260e : sti ; dec eax ; out dx, al ; sti ; call qword ptr [rax]
0x000000000012270a : sti ; dec eax ; stc ; sti ; jmp rax
0x000000000012267e : sti ; dec eax ; sti ; jmp rax
0x000000000012ffce : sti ; dec eax ; sub dword ptr [rcx], eax ; add al, cl ; mov bl, 0xfb ; jmp rax
0x000000000012fa9e : sti ; dec esp ; adc dword ptr [rcx], eax ; add al, cl ; sbb edi, ebx ; jmp rax
0x000000000012261a : sti ; inc dword ptr [rax - 0x11] ; sti ; lcall ptr [rax - 0x11] ; sti ; jmp rax
0x00000000001301ee : sti ; inc dword ptr [rax - 0x47fffecc] ; or bh, ah ; call rsp
0x000000000012fb56 : sti ; inc dword ptr [rdx + 0x38480001] ; sti ; jmp qword ptr [rax]
0x000000000012d4d5 : sti ; int1 ; call qword ptr [rax]
0x0000000000122662 : sti ; jmp qword ptr [rax]
0x00000000001404ba : sti ; jmp qword ptr [rbx]
0x000000000014197e : sti ; jmp qword ptr [rcx]
0x0000000000140f0e : sti ; jmp qword ptr [rdx]
0x0000000000122622 : sti ; jmp rax
0x00000000001402ca : sti ; jmp rcx
0x000000000013011e : sti ; jmp rsp
0x0000000000130116 : sti ; lcall ptr [rax + 0x6800012f] ; fdiv st(3), st(0) ; jmp rsp
0x000000000012261e : sti ; lcall ptr [rax - 0x11] ; sti ; jmp rax
0x00000000001300ae : sti ; ljmp ptr [rax + 0x7800012d] ; retf ; sti ; jmp rsp
0x000000000012ff86 : sti ; ljmp ptr [rax + rbp - 0x5007ffff] ; sti ; call rax
0x000000000012fbfe : sti ; ljmp ptr [rax - 0x77fffee7] ; outsd dx, dword ptr [rsi] ; sti ; jmp rax
0x00000000000dc33a : sti ; mov edx, 0x28 ; xor esi, esi ; call qword ptr [rax]
0x000000000013013e : sti ; push qword ptr [rax + 0x30] ; add dword ptr [rax], eax ; cmp bh, bl ; sti ; jmp rsp
0x00000000001301d6 : sti ; push qword ptr [rax + 0x33] ; add dword ptr [rax], eax ; sbb dl, dh ; sti ; call rsp
0x0000000000122706 : sti ; push qword ptr [rax - 0x37000407] ; stc ; sti ; jmp rax
0x000000000012267a : sti ; push qword ptr [rax - 0x3700040e] ; sti ; jmp rax
0x000000000012260a : sti ; push qword ptr [rax - 0x37000412] ; out dx, al ; sti ; call qword ptr [rax]
0x000000000001b898 : sti ; push rdx ; add byte ptr [rax], al ; ret
0x00000000000e764b : sti ; xor esi, esi ; mov edx, 0x220 ; call rax
0x00000000000e3b49 : stosb byte ptr [rdi], al ; add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000f46b3 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000104b99 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x104bb0 ; ret
0x000000000012dcd9 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; sub byte ptr [rdx], bh ; cmc ; call rax
0x00000000000c3cb2 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f4a12 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000012e815 : stosb byte ptr [rdi], al ; clc ; call rax
0x000000000013f935 : stosb byte ptr [rdi], al ; cli ; call rsp
0x000000000013183d : stosb byte ptr [rdi], al ; out dx, al ; call qword ptr [rdx]
0x00000000000fac5a : stosb byte ptr [rdi], al ; ret
0x000000000012ff4d : stosb byte ptr [rdi], al ; sti ; call rsp
0x0000000000141f85 : stosb byte ptr [rdi], al ; sti ; jmp qword ptr [rax]
0x00000000000f4ea1 : stosd dword ptr [rdi], eax ; adc byte ptr [rax], ah ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a5028 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000012dd21 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; js 0x12dd87 ; cmc ; call qword ptr [rax]
0x00000000000cc5d8 : stosd dword ptr [rdi], eax ; ret
0x000000000008d6d9 : stosd dword ptr [rdi], eax ; ret 0x4c
0x000000000000260c : stosd dword ptr [rdi], eax ; wait ; ret
0x0000000000134734 : sub al, 0 ; add byte ptr [rax], al ; mov eax, 0xc4000030 ; ret
0x000000000013d8c0 : sub al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000143dac : sub al, 0x27 ; add dword ptr [rax], eax ; sbb esp, edi ; jmp rbx
0x0000000000104da3 : sub al, 0x48 ; add esp, 0x28 ; ret
0x00000000000dc8db : sub al, 0x48 ; add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fceb3 : sub al, 0x48 ; add esp, 0xd0 ; pop rbx ; ret
0x00000000000fa12b : sub al, 0x83 ; stc ; add dh, byte ptr [rdi + rax + 0x5b] ; ret
0x00000000001420d4 : sub al, 0xb1 ; sti ; jmp qword ptr [rdx]
0x000000000013d454 : sub al, 0xc3 ; stc ; jmp rcx
0x000000000014434d : sub al, 0xfc ; jmp qword ptr [rcx]
0x0000000000144321 : sub al, 1 ; add ah, bh ; sub edi, esp ; jmp qword ptr [rcx]
0x000000000014435d : sub al, 1 ; add byte ptr [rax + 0x2c], ah ; cld ; jmp qword ptr [rcx]
0x000000000010230a : sub al, 1 ; add byte ptr [rax], al ; xor edi, edi ; call rax
0x0000000000144349 : sub al, 1 ; add byte ptr [rsp + rbp - 4], al ; jmp qword ptr [rcx]
0x00000000000d8e30 : sub al, byte ptr [rcx] ; add rsp, 8 ; ret
0x000000000013117c : sub al, dl ; std ; jmp rax
0x00000000001463b8 : sub bh, cl ; cld ; jmp qword ptr [rdi]
0x000000000013e0e1 : sub bh, dl ; call qword ptr [rsi]
0x000000000012eac4 : sub bl, al ; clc ; push qword ptr [rax + 0x380000de] ; ret
0x00000000001304f4 : sub bl, al ; cld ; dec esp ; add dword ptr [r8], r8d ; cwde ; ret
0x00000000000e87ad : sub byte ptr [r8 + 0x39], r9b ; ret 0x472
0x00000000001026a3 : sub byte ptr [r8 - 0x77], r9b ; ret 0x8b4d
0x00000000000e87ae : sub byte ptr [rax + 0x39], cl ; ret 0x472
0x0000000000101112 : sub byte ptr [rax + 0x39], cl ; sal byte ptr [rbp + 8], 1 ; ret
0x00000000000e884b : sub byte ptr [rax + 0x39], cl ; sal dword ptr [rbx - 0x1b], 0x48 ; sub eax, edx ; ret
0x0000000000023af4 : sub byte ptr [rax - 0x73], cl ; push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000f9fb9 : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000f59a2 : sub byte ptr [rax - 0x77], cl ; pop rax ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000111abb : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000023be3 : sub byte ptr [rax - 0x77], cl ; ret 0x214c
0x00000000001026a4 : sub byte ptr [rax - 0x77], cl ; ret 0x8b4d
0x00000000000f9ef8 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000130db4 : sub byte ptr [rax - 3], bh ; call rax
0x0000000000133ed9 : sub byte ptr [rax], al ; add ah, al ; or al, 0xf0 ; jmp qword ptr [rcx]
0x0000000000135720 : sub byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000dc33c : sub byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call qword ptr [rax]
0x000000000012d8b4 : sub byte ptr [rax], bh ; call rax
0x00000000001228ec : sub byte ptr [rax], dl ; cld ; call qword ptr [rax]
0x00000000000f6d4a : sub byte ptr [rax], dl ; mov rax, qword ptr [rdi] ; call qword ptr [rax]
0x0000000000001f79 : sub byte ptr [rbp + 0x2c], cl ; ret 0xda
0x000000000012dfb4 : sub byte ptr [rbp - 0xa], cl ; call rax
0x000000000002ab6a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000047ff2 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000131504 : sub byte ptr [rbx - 2], ch ; jmp rax
0x0000000000020e56 : sub byte ptr [rcx + rcx*4 + 0x5c], cl ; and al, 0x20 ; call 0xdd0e8
0x00000000000f5a3d : sub byte ptr [rcx + rcx*4 + 0x60], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012ff89 : sub byte ptr [rcx], al ; add al, bh ; scasd eax, dword ptr [rdi] ; sti ; call rax
0x00000000000e87f1 : sub byte ptr [rdx + 4], dh ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000012da84 : sub byte ptr [rdx - 0xc], dl ; call rax
0x00000000000e7bc9 : sub byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000012dcdc : sub byte ptr [rdx], bh ; cmc ; call rax
0x00000000000f1506 : sub byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000000000032bf9 : sub cl, byte ptr [rax - 0x77] ; ret 0x8348
0x000000000012e1ad : sub dh, bh ; call qword ptr [rax]
0x000000000012eaa0 : sub dh, bl ; add byte ptr [rax], al ; cwde ; ret 0xfff8
0x0000000000131f38 : sub dh, ch ; out dx, al ; jmp rsp
0x000000000012e228 : sub dl, al ; add byte ptr [rax], al ; enter -0x87b, -1 ; push rsp ; ret 0
0x000000000012ea6c : sub dl, al ; clc ; push qword ptr [rax + 0x380000dd] ; ret 0xfff8
0x000000000012eb94 : sub dl, cl ; clc ; call qword ptr [rax]
0x00000000000f69a3 : sub dword ptr [rax + 0x1089006b], ebx ; ret
0x000000000000293e : sub dword ptr [rax], edx ; sub rsp, qword ptr [r8 + 0x5e] ; pop rax ; ret
0x0000000000105534 : sub dword ptr [rbx + 8], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1460 : sub dword ptr [rcx + rdx], eax ; ret
0x000000000012ffd1 : sub dword ptr [rcx], eax ; add al, cl ; mov bl, 0xfb ; jmp rax
0x000000000010e5ff : sub dword ptr [rcx], eax ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000010e4c5 : sub dword ptr [rdx + 0x10], eax ; add rsp, 0x28 ; ret
0x00000000000d8e2f : sub dword ptr [rdx], 1 ; add rsp, 8 ; ret
0x0000000000112470 : sub dword ptr [rsp + 0xc0], eax ; call 0x10e689
0x00000000001443b9 : sub eax, 0x2d540001 ; cld ; call qword ptr [rsi]
0x00000000000fcfe0 : sub eax, 0x30 ; cmp eax, 0xf ; setbe al ; ret
0x00000000000fcfd0 : sub eax, 0x57 ; cmp eax, 0xf ; setbe al ; ret
0x000000000012265a : sub eax, 0x65657266 ; add byte ptr [rcx], ah ; sti ; jmp qword ptr [rax]
0x000000000010317b : sub eax, 0x89480001 ; ret 0x8948
0x0000000000107c62 : sub eax, 0x8c48348 ; ret
0x00000000000faa92 : sub eax, 0x960f013c ; ret 0x895b
0x00000000001300b1 : sub eax, 0xcb780001 ; sti ; jmp rsp
0x00000000001300b9 : sub eax, 0xce180001 ; sti ; call qword ptr [rax]
0x00000000000fdbc4 : sub eax, 0xe8000000 ; ret
0x000000000010de17 : sub eax, 1 ; mov dword ptr fs:[rbx], eax ; pop rbx ; ret
0x00000000000f6a58 : sub eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9ecf : sub eax, dword ptr [rcx] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f8d7b : sub eax, ecx ; cmp r8, rdx ; jb 0xf8d78 ; ret
0x00000000000e883f : sub eax, edx ; ret
0x000000000000330a : sub ebp, ecx ; ret 0xe89f
0x00000000000f57ac : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000002aa74 : sub ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000a9014 : sub ecx, dword ptr [rbx] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000a91d4 : sub ecx, dword ptr [rbx] ; mov rdi, r12 ; call rax
0x0000000000105532 : sub ecx, dword ptr [rcx + rbp + 0x63] ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000144325 : sub edi, esp ; jmp qword ptr [rcx]
0x00000000000fcf30 : sub edx, 0x30 ; cmp edx, 9 ; setbe al ; ret
0x00000000000fcf20 : sub edx, 0x57 ; cmp edx, 9 ; setbe al ; ret
0x0000000000032be6 : sub edx, edi ; add rdx, 0x7fff8001 ; call qword ptr [rax]
0x00000000000df21b : sub edx, edi ; add rdx, 0x7fff8001 ; call rax
0x0000000000031237 : sub edx, edi ; and r12, 0xffffffffffffffe0 ; call qword ptr [rbx]
0x00000000000df6ac : sub edx, edi ; call qword ptr [r15]
0x00000000000312e2 : sub edx, edi ; jmp rax
0x00000000000de0ad : sub edx, edi ; mov esi, 0xf7 ; call qword ptr [rax]
0x0000000000033a97 : sub edx, edi ; mov rdi, r15 ; call qword ptr [r14]
0x0000000000033a76 : sub edx, edi ; xor esi, esi ; call qword ptr [r14]
0x0000000000032757 : sub edx, edi ; xor esi, esi ; call qword ptr [rax]
0x00000000000df6c4 : sub edx, esi ; mov rdi, r14 ; call qword ptr [r15]
0x000000000001f031 : sub esi, 0x10 ; mov qword ptr [rdi], rsi ; ret
0x00000000000fab6b : sub esi, edi ; call r12
0x000000000010e558 : sub esp, -0x80 ; mov rax, rbx ; pop rbx ; ret
0x00000000001048ed : sub esp, -0x80 ; pop rbx ; ret
0x0000000000114b51 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000002941 : sub esp, dword ptr [rax + 0x5e] ; pop rax ; ret
0x0000000000105533 : sub qword ptr [rbx + 8], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8d7a : sub r8, rcx ; cmp r8, rdx ; jb 0xf8d79 ; ret
0x00000000000f9ece : sub r8d, dword ptr [rcx] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e883e : sub rax, rdx ; ret
0x00000000000df6c3 : sub rdx, r14 ; mov rdi, r14 ; call qword ptr [r15]
0x0000000000033a96 : sub rdx, r15 ; mov rdi, r15 ; call qword ptr [r14]
0x0000000000031236 : sub rdx, rdi ; and r12, 0xffffffffffffffe0 ; call qword ptr [rbx]
0x00000000000df6ab : sub rdx, rdi ; call qword ptr [r15]
0x00000000000312e1 : sub rdx, rdi ; jmp rax
0x00000000000de0ac : sub rdx, rdi ; mov esi, 0xf7 ; call qword ptr [rax]
0x0000000000033a75 : sub rdx, rdi ; xor esi, esi ; call qword ptr [r14]
0x0000000000032756 : sub rdx, rdi ; xor esi, esi ; call qword ptr [rax]
0x000000000001f030 : sub rsi, 0x10 ; mov qword ptr [rdi], rsi ; ret
0x00000000000fab6a : sub rsi, rdi ; call r12
0x000000000010e557 : sub rsp, -0x80 ; mov rax, rbx ; pop rbx ; ret
0x00000000001048ec : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000114b50 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000002940 : sub rsp, qword ptr [r8 + 0x5e] ; pop rax ; ret
0x00000000000faf1d : syscall ; mov eax, 1 ; ret
0x00000000000fac37 : syscall ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000f9b3e : syscall ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa150 : syscall ; pop rbx ; ret
0x00000000000f9b55 : syscall ; ret
0x00000000000c67a1 : sysenter
0x00000000001031ff : test ah, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000fe922 : test ah, dh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0xa2eb
0x00000000000e1178 : test ah, dl ; add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000d621c : test ah, dl ; ret 0xffff
0x000000000012f404 : test al, 0x17 ; stc ; call qword ptr [rax]
0x000000000012fc00 : test al, 0x19 ; add dword ptr [rax], eax ; mov byte ptr [rdi - 5], ch ; jmp rax
0x00000000001300b0 : test al, 0x2d ; add dword ptr [rax], eax ; js 0x130088 ; sti ; jmp rsp
0x0000000000130868 : test al, 0x53 ; add dword ptr [rax], eax ; js 0x130869 ; cld ; jmp rsp
0x00000000000025f0 : test al, 0x9b ; ret
0x000000000012e854 : test al, 0xb0 ; clc ; call rax
0x000000000012ff94 : test al, 0xb0 ; sti ; jmp rsp
0x000000000012ea2c : test al, 0xc1 ; clc ; call qword ptr [rax]
0x000000000002c7c0 : test al, 0xe ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000131779 : test al, 0xee ; call qword ptr [rsi]
0x0000000000110900 : test al, 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000b0d0e : test al, 1 ; jne 0xb0cf9 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000141928 : test al, 2 ; add dword ptr [rax], eax ; mov ah, 0x94 ; sti ; jmp qword ptr [rbx]
0x00000000000e7ebc : test al, al ; je 0xe7ed0 ; add rsp, 8 ; ret
0x00000000000ead37 : test al, al ; je 0xead44 ; xor eax, eax ; ret
0x00000000000ead5e : test al, al ; je 0xead6b ; xor eax, eax ; ret
0x0000000000109da2 : test al, al ; jne 0x109db9 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e515e : test al, al ; jne 0xe516d ; ret
0x00000000000e51be : test al, al ; jne 0xe51cd ; ret
0x00000000000e521e : test al, al ; jne 0xe522d ; ret
0x00000000000e527e : test al, al ; jne 0xe528d ; ret
0x00000000000e52ee : test al, al ; jne 0xe52fd ; ret
0x00000000000e535e : test al, al ; jne 0xe536d ; ret
0x00000000000e53ce : test al, al ; jne 0xe53dd ; ret
0x00000000000e543e : test al, al ; jne 0xe544d ; ret
0x00000000000e54ae : test al, al ; jne 0xe54bd ; ret
0x00000000000e575e : test al, al ; jne 0xe576d ; ret
0x00000000000e57ce : test al, al ; jne 0xe57dd ; ret
0x00000000000e583e : test al, al ; jne 0xe584d ; ret
0x00000000000e58ae : test al, al ; jne 0xe58bd ; ret
0x00000000000e591e : test al, al ; jne 0xe592d ; ret
0x00000000000e598e : test al, al ; jne 0xe599d ; ret
0x00000000000e59fe : test al, al ; jne 0xe5a0d ; ret
0x00000000000e5a6e : test al, al ; jne 0xe5a7d ; ret
0x00000000000e5ade : test al, al ; jne 0xe5aed ; ret
0x00000000000f093b : test al, al ; jne 0xf0928 ; mov byte ptr [rbx], 0 ; pop rbx ; ret
0x00000000000f79c2 : test al, al ; jne 0xf7995 ; ret
0x00000000000f802b : test al, al ; jne 0xf8026 ; xor eax, eax ; ret
0x00000000000dd0d7 : test al, al ; setne al ; ret
0x00000000000f3e5e : test bh, ch ; mov spl, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000dfdf8 : test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000df6aa : test byte ptr [rax + 0x29], 0xfa ; call qword ptr [r15]
0x00000000000b5c53 : test byte ptr [rax + rax - 0x7cb70000], ah ; jmp qword ptr [rax]
0x000000000009b8b7 : test byte ptr [rax + rax - 0x7cb70000], al ; jmp qword ptr [rax]
0x00000000000c21af : test byte ptr [rax + rax - 0x7cb70000], ch ; jmp qword ptr [rax]
0x00000000000a66b6 : test byte ptr [rax + rax - 0x7cb70000], dl ; jmp qword ptr [rax]
0x00000000001115cc : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000deffb : test byte ptr [rax - 0x75], 0 ; jmp rax
0x00000000000f6d46 : test byte ptr [rax - 0x75], 0x7c ; sub byte ptr [rax], dl ; mov rax, qword ptr [rdi] ; call qword ptr [rax]
0x00000000000389b1 : test byte ptr [rax - 0x77], 0xdf ; call 0x34c26
0x00000000000e7970 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000001f951 : test byte ptr [rax - 0x77], 0xef ; call 0x1bb66
0x0000000000026959 : test byte ptr [rax - 0x77], 0xef ; call qword ptr [rax]
0x00000000000ef890 : test byte ptr [rax - 0x77], 5 ; xor dh, ah ; add r8b, bpl ; ret
0x00000000000ee468 : test byte ptr [rax - 0x7d], cl ; call 0xffffffffc2983086
0x000000000001ee6e : test byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e3632 : test byte ptr [rax], ah ; add al, 0 ; add al, ch ; ret
0x00000000000defda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x00000000000f857a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000b8d89 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000e7d99 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x000000000001b91a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000e4a1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000024f2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ea4ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000e8aea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e7dc3 : test byte ptr [rax], bl ; add al, 0 ; ret
0x00000000000e968e : test byte ptr [rbp + 1], cl ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x10] ; call rax
0x00000000000abd37 : test byte ptr [rbp - 0x18000000], bl ; jmp rsp
0x000000000001dfaf : test byte ptr [rbx + rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000004a400 : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000303a5 : test byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008dcb7 : test byte ptr [rcx + 0xf], 0x44 ; ret 0x8949
0x0000000000102309 : test byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; xor edi, edi ; call rax
0x00000000000df6c2 : test byte ptr [rcx + rbp - 0xe], 0x4c ; mov edi, esi ; call qword ptr [r15]
0x0000000000033a95 : test byte ptr [rcx + rbp - 6], 0x4c ; mov edi, edi ; call qword ptr [r14]
0x00000000000afcc4 : test byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; ret
0x00000000000a8217 : test byte ptr [rcx + rdi*8 - 1], cl ; dec dword ptr [rax - 0x7d] ; ret 0xf01
0x00000000000f17a2 : test byte ptr [rcx - 0x73], 0x34 ; ret 0x850f
0x00000000000e4884 : test byte ptr [rcx], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000225c4 : test byte ptr [rdi + 0x1000000], bh ; ror byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000e93e4 : test byte ptr [rdi + 1], cl ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x10] ; call rax
0x00000000000a3a3f : test byte ptr [rdi], 0x85 ; ret
0x000000000002a97f : test byte ptr [rdi], 0x95 ; ret 0x3948
0x00000000000d61f8 : test byte ptr [rdi], ch ; ret
0x000000000004a2e7 : test byte ptr [rdx + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000ed4e1 : test byte ptr [rdx], al ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000df5b1 : test byte ptr [rdx], ch ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000022ced : test byte ptr [rdx], dh ; add byte ptr [rcx - 0x73], cl ; push rsi ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x0000000000069d4c : test byte ptr [rip - 0x16000007], al ; ret
0x00000000000a75ac : test byte ptr [rsi + rdi*8 - 0x76b60001], dl ; ret 0x2949
0x00000000000d6264 : test byte ptr [rsi], bl ; ret 0xffff
0x000000000001d887 : test byte ptr [rsp + rax], dh ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000d61b0 : test ch, ah ; ret
0x000000000002259e : test ch, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000130e7d : test ch, bh ; call qword ptr [rax]
0x0000000000142b0c : test cl, ah ; sti ; call qword ptr [rcx]
0x00000000000e0180 : test cl, cl ; jne 0xe0168 ; add rsp, 8 ; ret
0x00000000000f80bd : test dl, dl ; jne 0xf80b5 ; ret
0x0000000000050755 : test dword ptr [rax + 0x74fffff7], ebp ; ret 0x8d48
0x000000000007c3dd : test dword ptr [rax - 0x17000009], ebp ; cdq ; ret
0x00000000000521f3 : test dword ptr [rax - 0x17000009], ebp ; ret
0x000000000007f8b4 : test dword ptr [rax - 0x17000009], ebp ; ret 0x68e
0x0000000000052984 : test dword ptr [rax - 0x17000009], ebp ; ret 0x955
0x0000000000052184 : test dword ptr [rax - 0x17000009], ebp ; ret 0x95d
0x00000000000660b7 : test dword ptr [rax - 0x17000009], ebx ; jmp qword ptr [rsi]
0x00000000000776b3 : test dword ptr [rax - 0x17000009], ebx ; ret
0x000000000009c549 : test dword ptr [rax - 0x17000009], edx ; insd dword ptr [rdi], dx ; ret 4
0x000000000009c46b : test dword ptr [rax - 0x17000009], edx ; ret
0x000000000003fab4 : test dword ptr [rax - 0x17000009], edx ; ret 0xa8c
0x000000000008c575 : test dword ptr [rax - 0x17000009], edx ; ret 5
0x000000000007c51c : test dword ptr [rax - 0x17000009], esp ; pop rdx ; ret 6
0x00000000000674b3 : test dword ptr [rax - 0x17000009], esp ; ret
0x0000000000095db4 : test dword ptr [rax - 0x17000009], esp ; ret 0x529
0x00000000000554a3 : test dword ptr [rax - 0x18000000], ebx ; ret
0x00000000000ca49d : test dword ptr [rax], 0x79058d48 ; jmp qword ptr [rdi]
0x00000000000ca427 : test dword ptr [rax], 0xf3058d48 ; jmp qword ptr [rdi]
0x0000000000140db1 : test dword ptr [rax], 0xfb686c00 ; call rcx
0x000000000012d471 : test dword ptr [rax], eax ; add al, ch ; fcomi st(1) ; call qword ptr [rax]
0x00000000000ec35f : test dword ptr [rax], eax ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000efe8f : test dword ptr [rbp + rax], esi ; add byte ptr [rax - 0x77], cl ; ret 0x14d
0x0000000000131201 : test dword ptr [rcx], eax ; add byte ptr [rax - 0xe], cl ; std ; jmp qword ptr [rax]
0x000000000013347c : test dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rdx], al ; ret 0x100e
0x000000000001bcea : test dword ptr [rcx], edi ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000007c3a3 : test dword ptr [rdi], eax ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000ecc7c : test dword ptr [rdi], edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x149
0x00000000000f6159 : test dword ptr [rdx], 0x50894800 ; or byte ptr [rax - 0x77], cl ; ret 0xc8e8
0x00000000000a2a1d : test dword ptr [rsi], eax ; or eax, 0x49e80000 ; ret 5
0x00000000000e3ead : test dword ptr [rsi], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0x00000000000eefbf : test dword ptr [rsp + rax], ebp ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e62e2 : test eax, 0x4783 ; je 0xe62f8 ; ret
0x000000000001c2b3 : test eax, 0x48fffff8 ; add eax, ebx ; pop rbx ; ret
0x00000000000e56e3 : test eax, 0x58ffffea ; pop rdx ; leave ; ret
0x00000000000e4ae3 : test eax, 0x58fffff6 ; pop rdx ; leave ; ret
0x00000000001006cb : test eax, eax ; je 0x1006dc ; jmp rax
0x00000000001006eb : test eax, eax ; je 0x1006fc ; jmp rax
0x000000000010212e : test eax, eax ; je 0x102138 ; call rax
0x0000000000102144 : test eax, eax ; je 0x10214e ; call rax
0x00000000001021c0 : test eax, eax ; je 0x1021ca ; call rax
0x00000000001021c0 : test eax, eax ; je 0x1021cf ; call rax
0x0000000000102426 : test eax, eax ; je 0x10244d ; mov edi, 1 ; call rax
0x00000000001030a1 : test eax, eax ; je 0x1030b8 ; add rsp, 8 ; jmp rax
0x000000000010909a : test eax, eax ; je 0x1090a5 ; pop rbx ; ret
0x000000000001b50c : test eax, eax ; je 0x1b516 ; call rax
0x000000000001b90f : test eax, eax ; je 0x1b925 ; pop rbp ; jmp rax
0x000000000001b960 : test eax, eax ; je 0x1b975 ; pop rbp ; jmp rax
0x000000000001c364 : test eax, eax ; je 0x1c398 ; add rsp, 8 ; ret
0x000000000001c3c4 : test eax, eax ; je 0x1c3f8 ; add rsp, 8 ; ret
0x00000000000268c8 : test eax, eax ; je 0x268e0 ; add rsp, 0x18 ; ret
0x00000000000269c3 : test eax, eax ; je 0x269f9 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000026b09 : test eax, eax ; je 0x26b38 ; add rsp, 0x18 ; ret
0x00000000000344c5 : test eax, eax ; je 0x344d7 ; mov rdi, qword ptr [rdi] ; jmp rax
0x0000000000034505 : test eax, eax ; je 0x34515 ; mov rdi, qword ptr [rdi] ; jmp rax
0x000000000003481e : test eax, eax ; je 0x34847 ; mov rdi, qword ptr [rdi] ; call rax
0x000000000003891e : test eax, eax ; je 0x390b8 ; call rax
0x00000000000464ce : test eax, eax ; je 0x46a68 ; call rax
0x000000000005dfc3 : test eax, eax ; je 0x5dfe8 ; call 0xea246
0x000000000006df70 : test eax, eax ; je 0x6df95 ; call 0xea246
0x00000000000adf5c : test eax, eax ; je 0xadfe4 ; call 0xea246
0x00000000000e0cff : test eax, eax ; je 0xe0d0f ; mov rdi, rbx ; call rax
0x00000000000e11ac : test eax, eax ; je 0xe11bc ; mov rdi, rbx ; call rax
0x00000000000e173e : test eax, eax ; je 0xe174e ; mov rdi, rbx ; call rax
0x00000000000e1b4d : test eax, eax ; je 0xe1b5d ; mov rdi, rbx ; call rax
0x00000000000e1f35 : test eax, eax ; je 0xe1f45 ; mov rdi, rbx ; call rax
0x00000000000e232b : test eax, eax ; je 0xe233b ; mov rdi, rbx ; call rax
0x00000000000e2715 : test eax, eax ; je 0xe2725 ; mov rdi, rbx ; call rax
0x00000000000e2af5 : test eax, eax ; je 0xe2b05 ; mov rdi, rbx ; call rax
0x00000000000e2f3b : test eax, eax ; je 0xe2f4b ; mov rdi, rbx ; call rax
0x00000000000e3332 : test eax, eax ; je 0xe3342 ; mov rdi, rbx ; call rax
0x00000000000e3734 : test eax, eax ; je 0xe3744 ; mov rdi, rbx ; call rax
0x00000000000e3b7c : test eax, eax ; je 0xe3b8c ; mov rdi, rbx ; call rax
0x00000000000e3f1e : test eax, eax ; je 0xe3f2e ; mov rdi, rbx ; call rax
0x00000000000e43be : test eax, eax ; je 0xe43ce ; mov rdi, rbx ; call rax
0x00000000000e517c : test eax, eax ; je 0xe518b ; mov qword ptr [rax], rdi ; ret
0x00000000000e51dc : test eax, eax ; je 0xe51eb ; mov qword ptr [rax], rdi ; ret
0x00000000000e523c : test eax, eax ; je 0xe524b ; mov qword ptr [rax], rdi ; ret
0x00000000000e529f : test eax, eax ; je 0xe52ae ; mov qword ptr [rax], rdi ; ret
0x00000000000e530f : test eax, eax ; je 0xe531e ; mov qword ptr [rax], rdi ; ret
0x00000000000e537f : test eax, eax ; je 0xe538e ; mov qword ptr [rax], rdi ; ret
0x00000000000e53ef : test eax, eax ; je 0xe53fe ; mov qword ptr [rax], rdi ; ret
0x00000000000e545f : test eax, eax ; je 0xe546e ; mov qword ptr [rax], rdi ; ret
0x00000000000e54cf : test eax, eax ; je 0xe54de ; mov qword ptr [rax], rdi ; ret
0x00000000000e5533 : test eax, eax ; je 0xe5547 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5593 : test eax, eax ; je 0xe55a7 ; mov qword ptr [rax], rdi ; ret
0x00000000000e55f3 : test eax, eax ; je 0xe5607 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5653 : test eax, eax ; je 0xe5667 ; mov qword ptr [rax], rdi ; ret
0x00000000000e56b3 : test eax, eax ; je 0xe56c7 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5713 : test eax, eax ; je 0xe5727 ; mov qword ptr [rax], rdi ; ret
0x00000000000e577c : test eax, eax ; je 0xe578b ; mov qword ptr [rax], rdi ; ret
0x00000000000e57ec : test eax, eax ; je 0xe57fb ; mov qword ptr [rax], rdi ; ret
0x00000000000e585c : test eax, eax ; je 0xe586b ; mov qword ptr [rax], rdi ; ret
0x00000000000e58cf : test eax, eax ; je 0xe58de ; mov qword ptr [rax], rdi ; ret
0x00000000000e593f : test eax, eax ; je 0xe594e ; mov qword ptr [rax], rdi ; ret
0x00000000000e59af : test eax, eax ; je 0xe59be ; mov qword ptr [rax], rdi ; ret
0x00000000000e5a1f : test eax, eax ; je 0xe5a2e ; mov qword ptr [rax], rdi ; ret
0x00000000000e5a8f : test eax, eax ; je 0xe5a9e ; mov qword ptr [rax], rdi ; ret
0x00000000000e5aff : test eax, eax ; je 0xe5b0e ; mov qword ptr [rax], rdi ; ret
0x00000000000e5b63 : test eax, eax ; je 0xe5b77 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5bc3 : test eax, eax ; je 0xe5bd7 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5c23 : test eax, eax ; je 0xe5c37 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5c83 : test eax, eax ; je 0xe5c97 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5ce3 : test eax, eax ; je 0xe5cf7 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5d43 : test eax, eax ; je 0xe5d57 ; mov qword ptr [rax], rdi ; ret
0x00000000000e69f6 : test eax, eax ; je 0xe6a05 ; ret
0x00000000000e6a4f : test eax, eax ; je 0xe6a68 ; add rsp, 8 ; ret
0x00000000000ea461 : test eax, eax ; je 0xea475 ; pop rbx ; ret
0x00000000000ea821 : test eax, eax ; je 0xea835 ; pop rbx ; ret
0x00000000000fa182 : test eax, eax ; je 0xfa195 ; ret
0x00000000000fcbbc : test eax, eax ; je 0xfcbcc ; mov rdi, rbx ; call rax
0x00000000001034f6 : test eax, eax ; jne 0x103508 ; add rsp, 8 ; ret
0x0000000000104bca : test eax, eax ; jne 0x104bdb ; add rsp, 0x18 ; ret
0x000000000010e09d : test eax, eax ; jne 0x10e0a8 ; ret
0x0000000000028358 : test eax, eax ; jne 0x2836d ; pop rbx ; ret
0x000000000003369a : test eax, eax ; jne 0x336a5 ; ret
0x0000000000046418 : test eax, eax ; jne 0x46426 ; xor eax, eax ; ret
0x0000000000046d28 : test eax, eax ; jne 0x46d36 ; xor eax, eax ; ret
0x0000000000046d78 : test eax, eax ; jne 0x46d86 ; xor eax, eax ; ret
0x0000000000046dc8 : test eax, eax ; jne 0x46dd6 ; xor eax, eax ; ret
0x00000000000d4a3c : test eax, eax ; jne 0xd4a4d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e02d7 : test eax, eax ; jne 0xe0308 ; add rsp, 8 ; ret
0x00000000000e03da : test eax, eax ; jne 0xe03f8 ; add rsp, 8 ; ret
0x00000000000e47aa : test eax, eax ; jne 0xe47b5 ; ret
0x00000000000e47fa : test eax, eax ; jne 0xe4805 ; ret
0x00000000000f0b9d : test eax, eax ; jne 0xf0b7e ; pop rbx ; ret
0x00000000000f0cb0 : test eax, eax ; jne 0xf0ca5 ; ret
0x00000000000fac22 : test eax, eax ; jne 0xfac42 ; xor rbp, rbp ; pop rax ; pop rdi ; call rax
0x00000000000feb65 : test eax, eax ; jne 0xfeb78 ; xor eax, eax ; xor edx, edx ; ret
0x00000000000fb76b : test eax, eax ; sete al ; add rsp, 8 ; ret
0x000000000010ddea : test eax, eax ; setg al ; ret
0x00000000000e8a95 : test eax, eax ; setne al ; add rsp, 0x28 ; ret
0x00000000000e022f : test eax, eax ; setne al ; add rsp, 8 ; ret
0x0000000000100fa6 : test eax, eax ; setne al ; ret
0x0000000000002803 : test ebx, 0x8ff7085 ; mov al, 0xe1 ; ret 0x8d71
0x000000000001eb32 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000df0cc : test ebx, ebx ; jne 0xdf0e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072a10 : test ebx, ecx ; add al, byte ptr [rax] ; add al, ch ; push rsi ; ret 8
0x00000000000344e5 : test ecx, ecx ; je 0x344f7 ; mov rdi, qword ptr [rdi] ; jmp rcx
0x0000000000105d51 : test ecx, ecx ; jne 0x105d65 ; ret
0x0000000000105e71 : test ecx, ecx ; jne 0x105e85 ; ret
0x00000000000f8fb9 : test ecx, ecx ; js 0xf8ff4 ; neg rax ; ret
0x00000000000ec04c : test edi, edi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000001c161 : test edi, edi ; je 0x1c177 ; mov rax, rdi ; ret
0x00000000000f9d21 : test edi, edi ; je 0xf9d32 ; mov eax, dword ptr [rsp - 0x18] ; ret
0x00000000000faea4 : test edi, edi ; jne 0xfaeb6 ; xor eax, eax ; ret
0x00000000000fdd75 : test edi, edi ; jne 0xfdd86 ; xor eax, eax ; ret
0x000000000012e22d : test edi, esi ; call qword ptr [rdx + rax*8]
0x0000000000108b61 : test edx, edx ; jne 0x108b79 ; mov eax, 1 ; ret
0x00000000000f87a4 : test edx, edx ; jne 0xf87b8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8e87 : test edx, edx ; jne 0xf8e85 ; ret
0x00000000000e4678 : test edx, edx ; setne al ; ret
0x0000000000103321 : test esi, esi ; jne 0x103335 ; ret
0x00000000000f69b6 : test esi, esi ; jne 0xf69c5 ; ret
0x000000000001f532 : test esp, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e02d6 : test r8, r8 ; jne 0xe0309 ; add rsp, 8 ; ret
0x00000000000e03d9 : test r8, r8 ; jne 0xe03f9 ; add rsp, 8 ; ret
0x00000000000feb64 : test r8, r8 ; jne 0xfeb79 ; xor eax, eax ; xor edx, edx ; ret
0x00000000000f79c1 : test r8b, r8b ; jne 0xf7996 ; ret
0x00000000001006ca : test rax, rax ; je 0x1006dd ; jmp rax
0x00000000001006ea : test rax, rax ; je 0x1006fd ; jmp rax
0x000000000010212d : test rax, rax ; je 0x102139 ; call rax
0x0000000000102143 : test rax, rax ; je 0x10214f ; call rax
0x00000000001021bf : test rax, rax ; je 0x1021cb ; call rax
0x00000000001030a0 : test rax, rax ; je 0x1030b9 ; add rsp, 8 ; jmp rax
0x0000000000109099 : test rax, rax ; je 0x1090a6 ; pop rbx ; ret
0x000000000001b50b : test rax, rax ; je 0x1b517 ; call rax
0x000000000001b90e : test rax, rax ; je 0x1b926 ; pop rbp ; jmp rax
0x000000000001b95f : test rax, rax ; je 0x1b976 ; pop rbp ; jmp rax
0x000000000001c363 : test rax, rax ; je 0x1c399 ; add rsp, 8 ; ret
0x000000000001c3c3 : test rax, rax ; je 0x1c3f9 ; add rsp, 8 ; ret
0x00000000000268c7 : test rax, rax ; je 0x268e1 ; add rsp, 0x18 ; ret
0x0000000000026b08 : test rax, rax ; je 0x26b39 ; add rsp, 0x18 ; ret
0x00000000000344c4 : test rax, rax ; je 0x344d8 ; mov rdi, qword ptr [rdi] ; jmp rax
0x0000000000034504 : test rax, rax ; je 0x34516 ; mov rdi, qword ptr [rdi] ; jmp rax
0x000000000003481d : test rax, rax ; je 0x34848 ; mov rdi, qword ptr [rdi] ; call rax
0x000000000003891d : test rax, rax ; je 0x390b9 ; call rax
0x00000000000464cd : test rax, rax ; je 0x46a69 ; call rax
0x00000000000e0cfe : test rax, rax ; je 0xe0d10 ; mov rdi, rbx ; call rax
0x00000000000e11ab : test rax, rax ; je 0xe11bd ; mov rdi, rbx ; call rax
0x00000000000e173d : test rax, rax ; je 0xe174f ; mov rdi, rbx ; call rax
0x00000000000e1b4c : test rax, rax ; je 0xe1b5e ; mov rdi, rbx ; call rax
0x00000000000e1f34 : test rax, rax ; je 0xe1f46 ; mov rdi, rbx ; call rax
0x00000000000e232a : test rax, rax ; je 0xe233c ; mov rdi, rbx ; call rax
0x00000000000e2714 : test rax, rax ; je 0xe2726 ; mov rdi, rbx ; call rax
0x00000000000e2af4 : test rax, rax ; je 0xe2b06 ; mov rdi, rbx ; call rax
0x00000000000e2f3a : test rax, rax ; je 0xe2f4c ; mov rdi, rbx ; call rax
0x00000000000e3331 : test rax, rax ; je 0xe3343 ; mov rdi, rbx ; call rax
0x00000000000e3733 : test rax, rax ; je 0xe3745 ; mov rdi, rbx ; call rax
0x00000000000e3b7b : test rax, rax ; je 0xe3b8d ; mov rdi, rbx ; call rax
0x00000000000e3f1d : test rax, rax ; je 0xe3f2f ; mov rdi, rbx ; call rax
0x00000000000e43bd : test rax, rax ; je 0xe43cf ; mov rdi, rbx ; call rax
0x00000000000e517b : test rax, rax ; je 0xe518c ; mov qword ptr [rax], rdi ; ret
0x00000000000e51db : test rax, rax ; je 0xe51ec ; mov qword ptr [rax], rdi ; ret
0x00000000000e523b : test rax, rax ; je 0xe524c ; mov qword ptr [rax], rdi ; ret
0x00000000000e529e : test rax, rax ; je 0xe52af ; mov qword ptr [rax], rdi ; ret
0x00000000000e530e : test rax, rax ; je 0xe531f ; mov qword ptr [rax], rdi ; ret
0x00000000000e537e : test rax, rax ; je 0xe538f ; mov qword ptr [rax], rdi ; ret
0x00000000000e53ee : test rax, rax ; je 0xe53ff ; mov qword ptr [rax], rdi ; ret
0x00000000000e545e : test rax, rax ; je 0xe546f ; mov qword ptr [rax], rdi ; ret
0x00000000000e54ce : test rax, rax ; je 0xe54df ; mov qword ptr [rax], rdi ; ret
0x00000000000e5532 : test rax, rax ; je 0xe5548 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5592 : test rax, rax ; je 0xe55a8 ; mov qword ptr [rax], rdi ; ret
0x00000000000e55f2 : test rax, rax ; je 0xe5608 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5652 : test rax, rax ; je 0xe5668 ; mov qword ptr [rax], rdi ; ret
0x00000000000e56b2 : test rax, rax ; je 0xe56c8 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5712 : test rax, rax ; je 0xe5728 ; mov qword ptr [rax], rdi ; ret
0x00000000000e577b : test rax, rax ; je 0xe578c ; mov qword ptr [rax], rdi ; ret
0x00000000000e57eb : test rax, rax ; je 0xe57fc ; mov qword ptr [rax], rdi ; ret
0x00000000000e585b : test rax, rax ; je 0xe586c ; mov qword ptr [rax], rdi ; ret
0x00000000000e58ce : test rax, rax ; je 0xe58df ; mov qword ptr [rax], rdi ; ret
0x00000000000e593e : test rax, rax ; je 0xe594f ; mov qword ptr [rax], rdi ; ret
0x00000000000e59ae : test rax, rax ; je 0xe59bf ; mov qword ptr [rax], rdi ; ret
0x00000000000e5a1e : test rax, rax ; je 0xe5a2f ; mov qword ptr [rax], rdi ; ret
0x00000000000e5a8e : test rax, rax ; je 0xe5a9f ; mov qword ptr [rax], rdi ; ret
0x00000000000e5afe : test rax, rax ; je 0xe5b0f ; mov qword ptr [rax], rdi ; ret
0x00000000000e5b62 : test rax, rax ; je 0xe5b78 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5bc2 : test rax, rax ; je 0xe5bd8 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5c22 : test rax, rax ; je 0xe5c38 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5c82 : test rax, rax ; je 0xe5c98 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5ce2 : test rax, rax ; je 0xe5cf8 ; mov qword ptr [rax], rdi ; ret
0x00000000000e5d42 : test rax, rax ; je 0xe5d58 ; mov qword ptr [rax], rdi ; ret
0x00000000000fcbbb : test rax, rax ; je 0xfcbcd ; mov rdi, rbx ; call rax
0x00000000000f0b9c : test rax, rax ; jne 0xf0b7f ; pop rbx ; ret
0x00000000000f0caf : test rax, rax ; jne 0xf0ca6 ; ret
0x00000000000df0cb : test rbx, rbx ; jne 0xdf0e1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000344e4 : test rcx, rcx ; je 0x344f8 ; mov rdi, qword ptr [rdi] ; jmp rcx
0x0000000000105d50 : test rcx, rcx ; jne 0x105d66 ; ret
0x0000000000105e70 : test rcx, rcx ; jne 0x105e86 ; ret
0x00000000000f8fb8 : test rcx, rcx ; js 0xf8ff5 ; neg rax ; ret
0x000000000001c160 : test rdi, rdi ; je 0x1c178 ; mov rax, rdi ; ret
0x00000000000faea3 : test rdi, rdi ; jne 0xfaeb7 ; xor eax, eax ; ret
0x00000000000fdd74 : test rdi, rdi ; jne 0xfdd87 ; xor eax, eax ; ret
0x00000000000f87a3 : test rdx, rdx ; jne 0xf87b9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103320 : test rsi, rsi ; jne 0x103336 ; ret
0x000000000012d961 : wait ; add byte ptr [rax], al ; call 0xffffffffd512cd08
0x00000000000b3e5e : wait ; nop ; ret
0x00000000000025ed : wait ; ret
0x0000000000075ef1 : wait ; ret 8
0x000000000013038d : xchg ah, bh ; call qword ptr [rax]
0x0000000000145451 : xchg ah, bh ; jmp qword ptr [rcx]
0x0000000000029be9 : xchg al, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000102963 : xchg bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a1fe0 : xchg bl, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000deabb : xchg byte ptr [rax - 0x76000002], al ; ret 0xb4e9
0x000000000012d491 : xchg byte ptr [rax], al ; add al, bl ; out dx, al ; int1 ; call qword ptr [rax]
0x000000000012d489 : xchg byte ptr [rax], al ; add al, cl ; out 0xf1, al ; jmp rsp
0x000000000003352b : xchg byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000032afb : xchg ch, bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000001bb8 : xchg ch, dh ; mov esi, 0xab7b7e3 ; ret
0x00000000000f280a : xchg dword ptr [rax + 0xa], eax ; add byte ptr [r13 - 0x77], cl ; ret
0x000000000003d526 : xchg dword ptr [rax + rax], ecx ; pop rax ; pop rdx ; jmp 0x3d4f5
0x000000000012d4d1 : xchg dword ptr [rax], eax ; add al, bh ; sti ; int1 ; call qword ptr [rax]
0x00000000000def92 : xchg dword ptr [rax], eax ; cmp bh, 0x7f ; lodsb al, byte ptr [rsi] ; ret
0x000000000002e832 : xchg dword ptr [rax], eax ; cmp bh, 0x7f ; xor eax, eax ; ret
0x00000000000f8e86 : xchg dword ptr [rbp - 0xc0a8a2e], eax ; ret
0x000000000010c437 : xchg dword ptr [rcx + rax - 0x76b40000], ebp ; ret
0x000000000001bc7f : xchg dword ptr [rcx + rax], edi ; add byte ptr [rax + 1], cl ; ret
0x00000000000ff77b : xchg dword ptr [rdx], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000fc731 : xchg dword ptr [rip - 0x76fffffe], eax ; ret 0x349
0x00000000000cc69a : xchg dword ptr [rsi], ebx ; ret
0x00000000000927eb : xchg eax, ebp ; add byte ptr [rcx + rcx*4 - 0x19], r9b ; mov r13, r12 ; call rax
0x000000000008994a : xchg eax, ebp ; cwde ; idiv edi ; call qword ptr [rax - 0x18]
0x00000000000fddc9 : xchg eax, ebp ; jmp 0xffffffffc34139a5
0x00000000000fe1d9 : xchg eax, ebp ; jmp 0xffffffffc3413db5
0x000000000001c209 : xchg eax, ebp ; push rbx ; mov dword ptr [rdx + 0x94], eax ; ret
0x0000000000026194 : xchg eax, ebp ; ret
0x00000000000cc6eb : xchg eax, ebp ; ret 0
0x00000000000a7d50 : xchg eax, ebp ; ret 0x2941
0x000000000002a981 : xchg eax, ebp ; ret 0x3948
0x00000000000de86b : xchg eax, ebp ; ret 0x394c
0x00000000000e926c : xchg eax, ebp ; ret 0x394d
0x00000000000deb1a : xchg eax, ebp ; ret 0x61e9
0x00000000001138cd : xchg eax, ebp ; ret 0x8348
0x000000000003c47e : xchg eax, ebp ; ret 0x8545
0x000000000003cb8e : xchg eax, ebp ; ret 0x8548
0x000000000003d5fa : xchg eax, ebp ; ret 0x854d
0x000000000002589a : xchg eax, ebp ; ret 0x8941
0x0000000000103425 : xchg eax, ebp ; ret 0xf083
0x00000000000fc137 : xchg eax, ebp ; ret 0xf980
0x0000000000029738 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000dd7d6 : xchg eax, ebp ; ror byte ptr [rcx + rdi - 0x31], 0xf ; xchg eax, ebx ; ret 0xd189
0x00000000000eb981 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000012d7a1 : xchg eax, ebx ; add byte ptr [rax], al ; call 0x1112ca78
0x0000000000025cc4 : xchg eax, ebx ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000b2529 : xchg eax, ebx ; pop rdx ; add al, 0 ; nop dword ptr [rax] ; ret
0x00000000000f8363 : xchg eax, ebx ; ret
0x00000000000eb78c : xchg eax, ebx ; ret 0x3948
0x00000000000f8191 : xchg eax, ebx ; ret 0x840
0x00000000000f89a9 : xchg eax, ebx ; ret 0x841
0x000000000002ae51 : xchg eax, ebx ; ret 0x8548
0x0000000000028e3b : xchg eax, ebx ; ret 0x854d
0x0000000000020ebf : xchg eax, ebx ; ret 0xd108
0x00000000000dd7dc : xchg eax, ebx ; ret 0xd189
0x000000000012fec5 : xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000010950f : xchg eax, ebx ; xor eax, eax ; ret
0x00000000000ad682 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000012d721 : xchg eax, ecx ; add byte ptr [rax], al ; call 0x1112c9db
0x000000000001b9aa : xchg eax, ecx ; div dword ptr [rdx] ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000000dd0d3 : xchg eax, ecx ; or eax, 0xc0840048 ; setne al ; ret
0x00000000000cc75e : xchg eax, ecx ; ret 0
0x000000000012d851 : xchg eax, edi ; add byte ptr [rax], al ; js 0x12d861 ; jmp qword ptr [rax]
0x00000000001003f3 : xchg eax, edi ; call 0xffffffffc31003fe
0x000000000012e685 : xchg eax, edi ; clc ; call qword ptr [rax]
0x000000000012e66d : xchg eax, edi ; clc ; call rsp
0x000000000012e625 : xchg eax, edi ; clc ; jmp qword ptr [rax]
0x00000000000fbe45 : xchg eax, edi ; mov eax, 0x82e80002 ; ret 0xffff
0x0000000000101fa9 : xchg eax, edi ; mov eax, 0xc3000000 ; nop ; xor eax, eax ; ret
0x00000000000a54a4 : xchg eax, edi ; ret
0x000000000010cc80 : xchg eax, edi ; ret 0x8445
0x00000000000a5928 : xchg eax, edi ; ret 0x8d4d
0x00000000000fbb1c : xchg eax, edi ; ret 0xd008
0x00000000000e73e5 : xchg eax, edi ; ret 3
0x000000000003d525 : xchg eax, edi ; xchg dword ptr [rax + rax], ecx ; pop rax ; pop rdx ; jmp 0x3d4f6
0x000000000012e4ed : xchg eax, edx ; clc ; jmp rsp
0x0000000000003306 : xchg eax, edx ; mov dil, 0xa6 ; sub ebp, ecx ; ret 0xe89f
0x0000000000033bb9 : xchg eax, edx ; or al, 0 ; nop dword ptr [rax] ; ret
0x00000000000da327 : xchg eax, edx ; ret 0x8548
0x000000000001c9dd : xchg eax, edx ; ret 0xd184
0x00000000001022e3 : xchg eax, edx ; ret 0xd389
0x000000000010f0ab : xchg eax, edx ; ret 1
0x00000000000e478b : xchg eax, esi ; add byte ptr [r8 + r9 - 0xd], r14b ; ret
0x0000000000131431 : xchg eax, esi ; add dword ptr [rax], eax ; fcom dword ptr [rdi - 2] ; jmp rsp
0x000000000012e605 : xchg eax, esi ; clc ; call rax
0x000000000012e5a5 : xchg eax, esi ; clc ; jmp rax
0x000000000012e60d : xchg eax, esi ; clc ; jmp rsp
0x00000000000e5bf6 : xchg eax, esi ; in eax, 0xff ; lcall ptr [rax + 0x5a] ; leave ; ret
0x00000000000ca796 : xchg eax, esi ; jmp qword ptr [rdi]
0x000000000010918c : xchg eax, esi ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000001cb26 : xchg eax, esi ; ret 0x394d
0x000000000002d656 : xchg eax, esi ; ret 0x8548
0x00000000000faa96 : xchg eax, esi ; ret 0x895b
0x0000000000052326 : xchg eax, esi ; ret 8
0x00000000000cc646 : xchg eax, esi ; ror dword ptr [rdi], -0x79 ; push rsp ; ret
0x00000000000cbb42 : xchg eax, esi ; ror dword ptr [rdi], -0x79 ; ret 0xca
0x00000000000cc5d4 : xchg eax, esi ; ror dword ptr [rdi], -0x79 ; stosd dword ptr [rdi], eax ; ret
0x00000000000cc75a : xchg eax, esi ; ror dword ptr [rdi], -0x79 ; xchg eax, ecx ; ret 0
0x00000000000a66b7 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000130db0 : xchg eax, esp ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; sub byte ptr [rax - 3], bh ; call rax
0x00000000000031ae : xchg eax, esp ; jmp 0xffffffffc3395341
0x00000000000f2a5c : xchg eax, esp ; mov dword ptr [rax - 0x76], 0x1490020 ; ret 0x894c
0x0000000000129dd8 : xchg eax, esp ; out 0xfd, eax ; jmp rsp
0x000000000012cbe0 : xchg eax, esp ; push rsp ; add byte ptr [rax], al ; clc ; cmp ch, bh ; call rax
0x0000000000063129 : xchg eax, esp ; ret
0x00000000000e0507 : xchg eax, esp ; ret 0x3949
0x00000000000fd83e : xchg eax, esp ; ret 0x8348
0x00000000000fda52 : xchg eax, esp ; ret 0x841
0x00000000000a4ab7 : xchg eax, esp ; ret 0x85f7
0x00000000000f229b : xchg eax, esp ; ret 0xc148
0x00000000000f0f03 : xchg eax, esp ; ret 0xd009
0x00000000000fc488 : xchg eax, esp ; ret 0xf45
0x00000000000f942c : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e01ed : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000103fa1 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000014192d : xchg eax, esp ; sti ; jmp qword ptr [rbx]
0x000000000014197d : xchg eax, esp ; sti ; jmp qword ptr [rcx]
0x00000000000f5765 : xchg ecx, esp ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000000001027f0 : xchg edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000000267a : xchg edi, edi ; ret 0xaf0a
0x000000000001ee6d : xchg esi, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000001bd75 : xchg esi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000001bb7 : xchg r13b, r14b ; mov esi, 0xab7b7e3 ; ret
0x000000000012e851 : xlatb ; add byte ptr [rax], al ; test al, 0xb0 ; clc ; call rax
0x00000000000feee6 : xlatb ; mov qword ptr [rdi + rax*8 + 0x18], rdx ; pop rbx ; ret
0x0000000000113a32 : xlatb ; mov rax, rsi ; mov rdx, rdi ; ret
0x00000000000584ce : xlatb ; or al, byte ptr [rax] ; pop rax ; pop rdx ; jmp 0x5849d
0x00000000000cd7e5 : xlatb ; ret
0x00000000000de5ba : xlatb ; setge al ; ret
0x0000000000034c96 : xlatb ; setl al ; ret
0x000000000002e435 : xor al, 0x1f ; call rax
0x00000000001449b4 : xor al, 0x33 ; add dword ptr [rax], eax ; cld ; call qword ptr [rdx]
0x00000000001463b4 : xor al, 0x4d ; add dword ptr [rax], eax ; sub bh, cl ; cld ; jmp qword ptr [rdi]
0x0000000000107ee6 : xor al, 0x87 ; add rsi, rdi ; jmp rsi
0x0000000000033bb8 : xor al, 0x92 ; or al, 0 ; nop dword ptr [rax] ; ret
0x00000000000af9b8 : xor al, 0x99 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001423b4 : xor al, 0xd ; add dword ptr [rax], eax ; mov bl, al ; sti ; call qword ptr [rsi]
0x00000000001404b4 : xor al, 0xee ; add byte ptr [rax], al ; cmp byte ptr [rax], dl ; sti ; jmp qword ptr [rbx]
0x0000000000100d1a : xor al, 0xf3 ; ret
0x0000000000123101 : xor al, 0xfc ; call rax
0x00000000001230f9 : xor al, 0xfc ; jmp rax
0x00000000001301f9 : xor al, 1 ; add byte ptr [rax + 0x1c], cl ; cld ; jmp qword ptr [rax]
0x00000000000fef12 : xor al, bh ; cmp rax, rcx ; jne 0xfef10 ; pop rbx ; ret
0x000000000001d6eb : xor al, byte ptr [rax] ; mov dword ptr [rbx + 0x10], eax ; pop rbx ; ret
0x000000000001b509 : xor al, byte ptr [rax] ; test rax, rax ; je 0x1b519 ; call rax
0x000000000001b90c : xor al, byte ptr [rax] ; test rax, rax ; je 0x1b928 ; pop rbp ; jmp rax
0x000000000001b95d : xor al, byte ptr [rax] ; test rax, rax ; je 0x1b978 ; pop rbp ; jmp rax
0x0000000000144945 : xor al, byte ptr [rcx] ; add al, ch ; cld ; jmp qword ptr [rdi]
0x000000000006c4fb : xor bh, 0xff ; dec dword ptr [rcx + rcx*4 - 0x21] ; call 0xe87c9
0x00000000000f0b9a : xor byte ptr [r8 - 0x7b], cl ; sal byte ptr [rbp - 0x28], 0x5b ; ret
0x0000000000025d91 : xor byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc387a6a3
0x0000000000026319 : xor byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc387ac2b
0x00000000000eb783 : xor byte ptr [rax + 0x39], cl ; ret 0x8d49
0x0000000000027d16 : xor byte ptr [rax + 1], bh ; ret
0x00000000000f155f : xor byte ptr [rax + 8], 0x5b ; ret
0x0000000000025d23 : xor byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000f0b9b : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x28], 0x5b ; ret
0x000000000002a97c : xor byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret 0x3948
0x0000000000025d92 : xor byte ptr [rax - 0x7d], cl ; call 0xffffffffc387a6a2
0x000000000002631a : xor byte ptr [rax - 0x7d], cl ; call 0xffffffffc387ac2a
0x00000000000005bd : xor byte ptr [rax - 0x80], al ; xor cl, byte ptr [rdx + rsi] ; adc byte ptr [rax], spl ; ret 0x4000
0x000000000012b668 : xor byte ptr [rax - 2], al ; jmp qword ptr [rax]
0x0000000000134739 : xor byte ptr [rax], al ; add ah, al ; ret
0x0000000000108e95 : xor byte ptr [rax], al ; add al, ch ; ret 0xfe1c
0x0000000000028b35 : xor byte ptr [rax], al ; jne 0x28b58 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000007fd : xor byte ptr [rax], cl ; add dword ptr [rax], eax ; call 0xffffffffc3000c18
0x0000000000108934 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f57cd : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a8b84 : xor byte ptr [rbx], cl ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000004a1f5 : xor byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029a27 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001425b0 : xor byte ptr [rdi], cl ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; sar ebx, 1 ; jmp qword ptr [rcx]
0x0000000000144990 : xor byte ptr [rdx - 4], al ; jmp qword ptr [rdx]
0x00000000001230e8 : xor byte ptr [rip + 0x3520fffc], dh ; cld ; call qword ptr [rax]
0x0000000000131cb0 : xor byte ptr [rsi], al ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; shr esi, cl ; call qword ptr [rsi]
0x00000000001230a8 : xor byte ptr [rsi], dh ; cld ; jmp qword ptr [rax]
0x000000000001d023 : xor cl, byte ptr [rax - 0x2f] ; call 0xffffffffc346097e
0x00000000000a8a04 : xor cl, byte ptr [rbx] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000deab9 : xor cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x76000002], al ; ret 0xb4e9
0x00000000000005c0 : xor cl, byte ptr [rdx + rsi] ; adc byte ptr [rax], spl ; ret 0x4000
0x00000000000ef894 : xor dh, ah ; add r8b, bpl ; ret
0x000000000012cea5 : xor dh, al ; call rsp
0x0000000000104969 : xor dword ptr [rax], eax ; jne 0x104975 ; ret
0x000000000010e49e : xor dword ptr [rbp - 0x7cb7febe], ecx ; ret 0x6602
0x00000000000fc654 : xor dword ptr [rcx - 0x7d], eax ; ret 0x4001
0x00000000000a7d4e : xor dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0x2941
0x00000000000464e6 : xor eax, 0x148d4e00 ; xor ecx, dword ptr [rax + 0x39] ; ret
0x0000000000134c55 : xor eax, 0x33f80000 ; int1 ; jmp rcx
0x00000000001230f5 : xor eax, 0x34f0fffc ; cld ; jmp rax
0x00000000001230e9 : xor eax, 0x3520fffc ; cld ; call qword ptr [rax]
0x00000000001230e5 : xor eax, 0x3530fffc ; cld ; jmp qword ptr [rax]
0x00000000001230b9 : xor eax, 0x35e0fffc ; cld ; call rax
0x0000000000144c3d : xor eax, 0x4ca00001 ; cld ; jmp qword ptr [rdi]
0x0000000000033977 : xor eax, 0x5283b4 ; xor esi, esi ; call qword ptr [r14]
0x00000000000e5c57 : xor eax, 0x58ffffe5 ; pop rdx ; leave ; ret
0x000000000003ff17 : xor eax, 0x84000a7f ; ror byte ptr [rdi], 0x85 ; ret
0x000000000010f856 : xor eax, 0xea14 ; add rsp, 8 ; ret
0x00000000000fb8a5 : xor eax, 1 ; ret
0x00000000000f1124 : xor eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000fed64 : xor eax, dword ptr [rcx - 0xa] ; ret 0x7507
0x00000000001301e1 : xor eax, dword ptr [rcx] ; add al, bl ; cmc ; sti ; jmp qword ptr [rax]
0x00000000001449b5 : xor eax, dword ptr [rcx] ; add byte ptr [rax + 0x42], cl ; cld ; call qword ptr [rdx]
0x00000000001301d9 : xor eax, dword ptr [rcx] ; add byte ptr [rax], bl ; sti ; call rsp
0x000000000014498d : xor eax, dword ptr [rcx] ; add byte ptr [rax], dh ; cld ; jmp qword ptr [rdx]
0x0000000000108bb6 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e8ae0 : xor eax, eax ; add rsp, 0x28 ; ret
0x000000000001e4ea : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004643c : xor eax, eax ; add rsp, 8 ; ret
0x00000000000b9ab3 : xor eax, eax ; call 0x105cc4
0x00000000000de4ad : xor eax, eax ; call 0xfccb8
0x00000000000203f8 : xor eax, eax ; call 0xfccb9
0x0000000000100aa7 : xor eax, eax ; call 0xfcd54
0x00000000000cf800 : xor eax, eax ; call 0xfcd58
0x00000000000d61bc : xor eax, eax ; call 0xfcd59
0x00000000000fcf0e : xor eax, eax ; cmp dil, 5 ; jbe 0xfcf29 ; ret
0x00000000000de5b7 : xor eax, eax ; cmp edi, edx ; setge al ; ret
0x00000000000f8fe3 : xor eax, eax ; cmp r9d, 1 ; jne 0xf8fc6 ; ret
0x00000000000fb191 : xor eax, eax ; jmp 0xfb150
0x000000000001f856 : xor eax, eax ; mov byte ptr [rbp + 7], dl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f16f9 : xor eax, eax ; mov dword ptr [rdx + 8], eax ; ret
0x00000000000fa1ec : xor eax, eax ; mov r10, r8 ; syscall ; ret
0x00000000000eb8f1 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000348d1 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f9e6e : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002e6d4 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026bb6 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000002e250 : xor eax, eax ; pop rbx ; ret
0x000000000001e1c0 : xor eax, eax ; ret
0x00000000000e4676 : xor eax, eax ; test edx, edx ; setne al ; ret
0x00000000001090e8 : xor eax, eax ; xor ecx, ecx ; pop rbx ; pop rbp ; xor edx, edx ; jmp rax
0x00000000000febbc : xor eax, eax ; xor edx, edx ; add rsp, 8 ; ret
0x00000000000feb69 : xor eax, eax ; xor edx, edx ; ret
0x00000000000de9a0 : xor ebp, ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fac27 : xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000002fe7 : xor ebx, dword ptr [rax - 0x5d] ; call 0xffffffffc21d48a1
0x0000000000038609 : xor ebx, dword ptr [rbx + rcx] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000106934 : xor ebx, ebx ; call qword ptr [r14]
0x00000000000464eb : xor ecx, dword ptr [rax + 0x39] ; ret
0x00000000000a8874 : xor ecx, dword ptr [rbx] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000e0ccb : xor ecx, ebx ; add byte ptr [r8 - 0x77], r9b ; ret
0x0000000000075ee9 : xor ecx, ecx ; mov esi, 0x201 ; call 0x102199
0x00000000001090ea : xor ecx, ecx ; pop rbx ; pop rbp ; xor edx, edx ; jmp rax
0x00000000000b9ab0 : xor ecx, ecx ; xor r8d, r8d ; call 0x105cc7
0x000000000010230e : xor edi, edi ; call rax
0x00000000000febbe : xor edx, edx ; add rsp, 8 ; ret
0x0000000000030e39 : xor edx, edx ; call 0xdd0e4
0x00000000001090ee : xor edx, edx ; jmp rax
0x0000000000039780 : xor edx, edx ; mov rsi, r12 ; call rax
0x00000000000feb6b : xor edx, edx ; ret
0x0000000000101e1a : xor esi, ebx ; ret
0x0000000000134c59 : xor esi, ecx ; jmp rcx
0x000000000003397c : xor esi, esi ; call qword ptr [r14]
0x00000000000df9bb : xor esi, esi ; call qword ptr [r15]
0x0000000000032599 : xor esi, esi ; call qword ptr [rax]
0x00000000000e7b11 : xor esi, esi ; call rax
0x00000000000df9c8 : xor esi, esi ; call rcx
0x00000000000e77a4 : xor esi, esi ; jmp rax
0x00000000000e764c : xor esi, esi ; mov edx, 0x220 ; call rax
0x00000000000deffa : xor esi, esi ; mov rax, qword ptr [rax] ; jmp rax
0x000000000001f950 : xor esi, esi ; mov rdi, rbp ; call 0x1bb67
0x0000000000026958 : xor esi, esi ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000e796f : xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000dd37f : xor esi, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000df6c1 : xor esi, esi ; sub rdx, r14 ; mov rdi, r14 ; call qword ptr [r15]
0x0000000000033a94 : xor esi, esi ; sub rdx, r15 ; mov rdi, r15 ; call qword ptr [r14]
0x00000000000df6a9 : xor esi, esi ; sub rdx, rdi ; call qword ptr [r15]
0x000000000001e9ce : xor esp, esp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9ab2 : xor r8d, r8d ; call 0x105cc5
0x00000000000fa1eb : xor r8d, r8d ; mov r10, r8 ; syscall ; ret
0x00000000001090e7 : xor r8d, r8d ; xor ecx, ecx ; pop rbx ; pop rbp ; xor edx, edx ; jmp rax
0x00000000000b9aaf : xor r9d, r9d ; xor r8d, r8d ; call 0x105cc8
0x00000000000fac26 : xor rbp, rbp ; pop rax ; pop rdi ; call rax

Unique gadgets found: 8792
